{{olv-toolbar
  class='ui secondary menu no-margin flexberry-olv-toolbar'
  createNewButton=this.createNewButton
  enableCreateNewButton=(not this.readonly)
  refreshButton=this.refreshButton
  deleteButton=this.deleteButton
  colsConfigButton=this.colsConfigButton
  advLimitButton=this.advLimitButton
  enableFilters=this.enableFilters
  exportExcelButton=this.exportExcelButton
  showFilters=this._showFilters
  showFiltersInModal=this.showFiltersInModal
  filters=this.filters
  toggleStateFilters=(action "toggleStateFilters")
  resetFilters=(action "resetFilters" this.attrs.resetFilters)
  filterButton=this.filterButton
  filterText=this.filterText
  buttonClass=this.buttonClass
  enableDeleteButton=(not this.readonly)
  inLookup=(eq this.componentMode "lookupform")
  componentName=this.componentName
  lookupComponentName=this.lookupComponentName
  modelController=this.currentController
  customButtonAction=(action 'customButtonAction')
  customButtons=this.customButtons
  editFormRoute=this.editFormRoute
  showConfigDialog="showConfigDialog"
  showAdvLimitDialog="showConfigDialog"
  confirmDeleteRows=this.confirmDeleteRows
  inHierarchicalMode=this.inHierarchicalMode
  inExpandMode=this.inExpandMode
  availableHierarchicalMode=this._availableHierarchicalMode
  availableCollExpandMode=this.availableCollExpandMode
  switchHierarchicalMode=(action "switchHierarchicalMode")
  switchExpandMode=(action "switchExpandMode")
  readonly=this.readonly
  useSidePageMode=this.useSidePageMode
  editInModal=this.editInModal
  customComponents=this.customToolbarComponents
}}
{{#unless this.bottomPagination}}
  {{olv-pagination
    inHierarchicalMode=this.inHierarchicalMode
    hierarchyPaging=this.hierarchyPaging
    pages=this.pages
    hasPreviousPage=this.hasPreviousPage
    hasNextPage=this.hasNextPage
    gotoPage=(action "gotoPage" this.attrs.gotoPage)
    nextPage=(action "nextPage" this.attrs.nextPage)
    previousPage=(action "previousPage" this.attrs.previousPage)
    searchPageButtonAction=(action "searchPageButtonAction" this.attrs.gotoPage)
    perPageClick=(action "perPageClick")
    componentName=this.componentName
    searchPageValue=this.searchPageValue
    searchPageButtonReadonly=this.searchPageButtonReadonly
    showShowingEntries=this.showShowingEntries
    currentIntervalRecords=this.currentIntervalRecords
    recordsTotalCount=this.recordsTotalCount
    perPageValues=this.perPageValues
    perPageValue=this.perPageValue
  }}
{{/unless}}
{{object-list-view
  placeholder=this.placeholder
  readonly=this.readonly
  columnsWidthAutoresize=this.columnsWidthAutoresize
  columnsResizeMode=this.columnsResizeMode
  minAutoColumnWidth=this.minAutoColumnWidth
  buttonClass=this.buttonClass
  tableStriped=this.tableStriped
  customTableClass=this.customTableClass
  cellComponent=this.cellComponent
  singleColumnCellComponent=this.singleColumnCellComponent
  singleColumnHeaderTitle=this.singleColumnHeaderTitle
  createNewByPrototype=(action "createNewByPrototype")
  showValidationMessagesInRow=(and (not this.readonly) this.showValidationMessagesInRow)
  showAsteriskInRow=this.showAsteriskInRow
  showCheckBoxInRow=this.showCheckBoxInRow
  showEditButtonInRow=this.showEditButtonInRow
  showPrototypeButtonInRow=this.showPrototypeButtonInRow
  showDeleteButtonInRow=this.showDeleteButtonInRow
  showEditMenuItemInRow=this.showEditMenuItemInRow
  showPrototypeMenuItemInRow=this.showPrototypeMenuItemInRow
  showDeleteMenuItemInRow=this.showDeleteMenuItemInRow
  sendMenuItemAction=(action "sendMenuItemAction")
  menuInRowAdditionalItems=this.menuInRowAdditionalItems
  rowClickable=(and (not this.readonly) this.rowClickable)
  orderable=this.orderable
  sorting=this.sorting
  immediateDelete=true
  modelName=this.modelName
  modelProjection=this.modelProjection
  content=this.content
  sortByColumn=(action (if this.attrs.sortByColumn this.attrs.sortByColumn 'sortByColumn'))
  addColumnToSorting=(action (if this.attrs.addColumnToSorting this.attrs.addColumnToSorting 'addColumnToSorting'))
  enableFilters=this.enableFilters
  showFilters=this._showFilters
  showFiltersInModal=this.showFiltersInModal
  filters=this.filters
  ddlFilterSettings=this.ddlFilterSettings
  applyFilters=(action (if this.applyFilters this.applyFilters "applyFilters"))
  componentForFilter=this.componentForFilter
  componentForFilterByCondition=this.componentForFilterByCondition
  conditionsByType=this.conditionsByType
  filterByAnyMatch=(action (if this.attrs.filterByAnyMatch this.attrs.filterByAnyMatch 'filterByAnyMatch'))
  filterByAnyWord=this.filterByAnyWord
  filterByAllWords=this.filterByAllWords
  filterProjectionName=this.filterProjectionName
  configurateRow=this.attrs.configurateRow
  configurateSelectedRows=this.attrs.configurateSelectedRows
  confirmDeleteRow=this.confirmDeleteRow
  beforeDeleteRecord=this.beforeDeleteRecord
  action=(action 'objectListViewRowClick')
  beforeDeleteAllRecords=this.beforeDeleteAllRecords
  componentName=this.componentName
  allowColumnResize=this.allowColumnResize
  selectedRecord=this.selectedRecord
  notUseUserSettings=this.notUseUserSettings
  isParentRecordPropertyName=this.isParentRecordPropertyName
  hierarchicalIndent=this.hierarchicalIndent
  inHierarchicalMode=this.inHierarchicalMode
  inExpandMode=this.inExpandMode
  disableHierarchicalMode=(if this.hierarchyByAttribute true this.disableHierarchicalMode)
  loadRecords=(action "loadRecords")
  availableHierarchicalMode=(action "availableHierarchicalMode")
  hierarchyAttribute=this.hierarchyAttribute
  useRowByRowLoading=this.useRowByRowLoading
  useRowByRowLoadingProgress=this.useRowByRowLoadingProgress
  eventsBus=this.eventsBus
  onEditForm=this.onEditForm
  customButtonInRowAction="customButtonInRowAction"
  customButtonsInRow=this.customButtonsInRow
  defaultSortingButton=this.defaultSortingButton
  defaultLeftPadding=this.defaultLeftPadding
  overflowedComponents=this.overflowedComponents
  customParameters=this.customParameters
  fixedHeader=this.fixedHeader
  skipSelectedRecords=this.skipSelectedRecords
}}
{{#if this.bottomPagination}}
  {{olv-pagination
    inHierarchicalMode=this.inHierarchicalMode
    hierarchyPaging=this.hierarchyPaging
    pages=this.pages
    _pages=this._pages
    hasPreviousPage=this.hasPreviousPage
    hasNextPage=this.hasNextPage
    gotoPage=(action "gotoPage" this.attrs.gotoPage)
    nextPage=(action "nextPage" this.attrs.nextPage)
    previousPage=(action "previousPage" this.attrs.previousPage)
    searchPageButtonAction=(action "searchPageButtonAction" this.attrs.gotoPage)
    perPageClick=(action "perPageClick")
    componentName=this.componentName
    searchPageValue=this.searchPageValue
    searchPageButtonReadonly=this.searchPageButtonReadonly
    showShowingEntries=this.showShowingEntries
    currentIntervalRecords=this.currentIntervalRecords
    recordsTotalCount=this.recordsTotalCount
    perPageValues=this.perPageValues
    perPageValue=this.perPageValue
  }}
{{/if}}