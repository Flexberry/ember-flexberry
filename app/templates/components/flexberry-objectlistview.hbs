{{olv-toolbar
  class='ui secondary menu no-margin'
  createNewButton=createNewButton
  enableCreateNewButton=(not readonly)
  refreshButton=refreshButton
  deleteButton=deleteButton
  colsConfigButton=colsConfigButton
  enableFilters=enableFilters
  showFilters=_showFilters
  filters=filters
  toggleStateFilters=(action "toggleStateFilters")
  resetFilters=(action "resetFilters" this.attrs.resetFilters)
  filterButton=filterButton
  filterText=filterText
  buttonClass=buttonClass
  enableDeleteButton=(not readonly)
  componentName=componentName
  modelController=currentController
  customButtonAction='customButtonAction'
  customButtons=customButtons
  editFormRoute=editFormRoute
  showConfigDialog="showConfigDialog"
  confirmDeleteRows=confirmDeleteRows
  inHierarchicalMode=_inHierarchicalMode
  availableHierarchicalMode=_availableHierarchicalMode
  switchHierarchicalMode=(action "switchHierarchicalMode")
}}
{{object-list-view
  placeholder=placeholder
  readonly=readonly
  buttonClass=buttonClass
  tableStriped=tableStriped
  customTableClass=customTableClass
  cellComponent=cellComponent
  singleColumnCellComponent=singleColumnCellComponent
  singleColumnHeaderTitle=singleColumnHeaderTitle
  showAsteriskInRow=(and (not readonly) showAsteriskInRow)
  showCheckBoxInRow=(and (not readonly) showCheckBoxInRow)
  showDeleteButtonInRow=(and (not readonly) showDeleteButtonInRow)
  showEditMenuItemInRow=(and (not readonly) showEditMenuItemInRow)
  showDeleteMenuItemInRow=(and (not readonly) showDeleteMenuItemInRow)
  menuInRowAdditionalItems=menuInRowAdditionalItems
  rowClickable=(and (not readonly) rowClickable)
  orderable=orderable
  sorting=sorting
  immediateDelete=true
  modelName=modelName
  modelProjection=modelProjection
  content=content
  sortByColumn=(action (if this.attrs.sortByColumn this.attrs.sortByColumn 'sortByColumn'))
  addColumnToSorting=(action (if this.attrs.addColumnToSorting this.attrs.addColumnToSorting 'addColumnToSorting'))
  enableFilters=enableFilters
  showFilters=_showFilters
  filters=filters
  applyFilters=(action (if applyFilters applyFilters "applyFilters"))
  componentForFilter=componentForFilter
  conditionsByType=conditionsByType
  filterByAnyMatch=(action (if this.attrs.filterByAnyMatch this.attrs.filterByAnyMatch 'filterByAnyMatch'))
  filterByAnyWord=filterByAnyWord
  filterByAllWords=filterByAllWords
  configurateRow=this.attrs.configurateRow
  configurateSelectedRows=this.attrs.configurateSelectedRows
  confirmDeleteRow=confirmDeleteRow
  beforeDeleteRecord=beforeDeleteRecord
  action='objectListViewRowClick'
  componentName=componentName
  allowColumnResize=allowColumnResize
  selectedRecord=selectedRecord
  notUseUserSettings=notUseUserSettings
  hierarchicalIndent=hierarchicalIndent
  inHierarchicalMode=_inHierarchicalMode
  disableHierarchicalMode=(if hierarchyByAttribute true disableHierarchicalMode)
  loadRecords=(action "loadRecords")
  availableHierarchicalMode=(action "availableHierarchicalMode")
  useRowByRowLoading=useRowByRowLoading
  useRowByRowLoadingProgress=useRowByRowLoadingProgress
  eventsBus=eventsBus
}}
{{#unless _inHierarchicalMode}}
  <div class="ui secondary menu no-margin">
    <div class="ui basic buttons">
      <button class="ui {{unless hasPreviousPage 'disabled'}} button" {{action 'previousPage' this.attrs.previousPage}}>&laquo;</button>
      {{#each pages as |page|}}
        {{#if page.isEllipsis}}
          <div class="ui button">...</div>
        {{else}}
          {{#if page.isCurrent}}
            <button class="ui active button">{{page.number}}</button>
          {{else}}
            <button class="ui button" {{action 'gotoPage' this.attrs.gotoPage page.number}}>{{page.number}}</button>
          {{/if}}
        {{/if}}
      {{/each}}
      <button class="ui {{unless hasNextPage 'disabled'}} button" {{action 'nextPage' this.attrs.nextPage}} >&raquo;</button>
    </div>
    <div class="right menu">
      {{flexberry-dropdown items=perPageValues value=perPageValue class="compact selection" onChange=(action "perPageClick")}}
    </div>
  </div>
  {{#if showShowingEntries}}
    <div class="showing-entries">
      {{#if (and currentIntervalRecords recordsTotalCount) }}
        {{concat
          (t "components.flexberry-objectlistview.showing-entries.showing") currentIntervalRecords (t "components.flexberry-objectlistview.showing-entries.of") recordsTotalCount (t "components.flexberry-objectlistview.showing-entries.entries")
        }}
      {{/if}}
    </div>
  {{/if}}
{{/unless}}
