{{olv-toolbar
  class='ui secondary menu no-margin'
  createNewButton=createNewButton
  enableCreateNewButton=(not readonly)
  refreshButton=refreshButton
  deleteButton=deleteButton
  colsConfigButton=colsConfigButton
  advLimitButton=advLimitButton
  enableFilters=enableFilters
  exportExcelButton=exportExcelButton
  showFilters=_showFilters
  showFiltersInModal=showFiltersInModal
  filters=filters
  toggleStateFilters=(action "toggleStateFilters")
  resetFilters=(action "resetFilters" this.attrs.resetFilters)
  filterButton=filterButton
  filterText=filterText
  buttonClass=buttonClass
  enableDeleteButton=(not readonly)
  inLookup=(eq componentMode "lookupform")
  componentName=componentName
  lookupComponentName=lookupComponentName
  modelController=currentController
  customButtonAction='customButtonAction'
  customButtons=customButtons
  editFormRoute=editFormRoute
  showConfigDialog="showConfigDialog"
  showAdvLimitDialog="showConfigDialog"
  confirmDeleteRows=confirmDeleteRows
  inHierarchicalMode=inHierarchicalMode
  inExpandMode=inExpandMode
  availableHierarchicalMode=_availableHierarchicalMode
  availableCollExpandMode=availableCollExpandMode
  switchHierarchicalMode=(action "switchHierarchicalMode")
  switchExpandMode=(action "switchExpandMode")
  readonly=readonly
}}
{{#if (or (not inHierarchicalMode) hierarchyPaging)}}
  <div class="ui secondary menu no-margin nav-bar">
    <button
      type="button"
      class="ui {{unless colsConfigButton "disabled"}} button mobile-sorting-setting-button small"        
      title={{mobileSortingSettingsCaption}}
      disabled={{not colsConfigButton}}
      {{action "showConfigDialog"}}
    > 
      <i class={{mobileSortingSettingsIcon}}></i>
      {{mobileSortingSettingsCaption}}
    </button>
    <div class="right menu">
      <div class="ui basic buttons">
        {{#if (lte pages.length 4)}}
          {{#each pages as |page|}}
            {{#if page.isCurrent}}
              <button type="button" class="ui disabled active button" disabled>{{page.number}}</button>
            {{else}}
              <button type="button" class="ui button" {{action "gotoPage" this.attrs.gotoPage page.number}}>{{page.number}}</button>
            {{/if}}
          {{/each}}
        {{else}}
          {{#each mobilePages as |page|}}
            {{#if page.isCurrent}}
              <button type="button" class="ui disabled active button" disabled>{{page.number}}</button>
            {{else}}
              <button type="button" class="ui button" {{action "gotoPage" this.attrs.gotoPage page.number}}>{{page.number}}</button>
            {{/if}}
          {{/each}}
          <div class="ui page-select-drodpown floating search dropdown icon active button">
            <i class="dropdown icon"></i>
            <div class="menu visible">
              <div class="ui icon search input">
                <i class="search icon"></i>
                <input type="text" placeholder={{t "components.flexberry-objectlistview.pages-number"}}>
              </div>
              <div class="scrolling menu">
                <div class="item disabled"  data-value="">{{recordsTotalCount}} {{t "components.flexberry-objectlistview.pages"}}</div>
                {{#each _allPages as |value|}}
                    <div class="item" data-value="{{value}}">{{value}}</div>
                {{/each}}
              </div>
            </div>
          </div>
        {{/if}}
      </div>
    </div>
  </div>
{{/if}}
{{object-list-view
  placeholder=placeholder
  readonly=readonly
  columnsWidthAutoresize=columnsWidthAutoresize
  minAutoColumnWidth=minAutoColumnWidth
  buttonClass=buttonClass
  tableStriped=tableStriped
  customTableClass=customTableClass
  cellComponent=cellComponent
  singleColumnCellComponent=singleColumnCellComponent
  singleColumnHeaderTitle=singleColumnHeaderTitle
  createNewByPrototype=(action "createNewByPrototype")
  showValidationMessagesInRow=(and (not readonly) showValidationMessagesInRow)
  showAsteriskInRow=showAsteriskInRow
  showCheckBoxInRow=showCheckBoxInRow
  showEditButtonInRow=showEditButtonInRow
  showPrototypeButtonInRow=showPrototypeButtonInRow
  showDeleteButtonInRow=showDeleteButtonInRow
  showEditMenuItemInRow=showEditMenuItemInRow
  showPrototypeMenuItemInRow=showPrototypeMenuItemInRow
  showDeleteMenuItemInRow=showDeleteMenuItemInRow
  sendMenuItemAction=(action "sendMenuItemAction")
  menuInRowAdditionalItems=menuInRowAdditionalItems
  rowClickable=(and (not readonly) rowClickable)
  orderable=orderable
  sorting=sorting
  immediateDelete=true
  modelName=modelName
  modelProjection=modelProjection
  content=content
  sortByColumn=(action (if this.attrs.sortByColumn this.attrs.sortByColumn 'sortByColumn'))
  addColumnToSorting=(action (if this.attrs.addColumnToSorting this.attrs.addColumnToSorting 'addColumnToSorting'))
  enableFilters=enableFilters
  showFilters=_showFilters
  showFiltersInModal=showFiltersInModal
  filters=filters
  applyFilters=(action (if applyFilters applyFilters "applyFilters"))
  componentForFilter=componentForFilter
  componentForFilterByCondition=componentForFilterByCondition
  conditionsByType=conditionsByType
  filterByAnyMatch=(action (if this.attrs.filterByAnyMatch this.attrs.filterByAnyMatch 'filterByAnyMatch'))
  filterByAnyWord=filterByAnyWord
  filterByAllWords=filterByAllWords
  configurateRow=this.attrs.configurateRow
  configurateSelectedRows=this.attrs.configurateSelectedRows
  confirmDeleteRow=confirmDeleteRow
  beforeDeleteRecord=beforeDeleteRecord
  beforeDeleteAllRecords=beforeDeleteAllRecords
  action='objectListViewRowClick'
  componentName=componentName
  allowColumnResize=allowColumnResize
  selectedRecord=selectedRecord
  notUseUserSettings=notUseUserSettings
  hierarchicalIndent=hierarchicalIndent
  inHierarchicalMode=inHierarchicalMode
  inExpandMode=inExpandMode
  disableHierarchicalMode=(if hierarchyByAttribute true disableHierarchicalMode)
  loadRecords=(action "loadRecords")
  availableHierarchicalMode=(action "availableHierarchicalMode")
  useRowByRowLoading=useRowByRowLoading
  useRowByRowLoadingProgress=useRowByRowLoadingProgress
  eventsBus=eventsBus
  onEditForm=onEditForm
  customButtonInRowAction="customButtonInRowAction"
  customButtonsInRow=customButtonsInRow
  defaultSortingButton=defaultSortingButton
  defaultLeftPadding=defaultLeftPadding
  overflowedComponents=overflowedComponents
  fixedHeader=fixedHeader
}}
