"use strict";



define('dummy/adapters/application', ['exports', 'ember-flexberry-data/adapters/odata', 'ember-flexberry-data/mixins/adapter', 'dummy/config/environment'], function (exports, _odata, _adapter, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _odata.default.extend(_adapter.default, {
    host: _environment.default.APP.backendUrls.api
  });
});
define('dummy/adapters/odata', ['exports', 'ember-flexberry-data/adapters/odata'], function (exports, _odata) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _odata.default;
    }
  });
});
define('dummy/adapters/offline', ['exports', 'ember-flexberry-data/adapters/offline'], function (exports, _offline) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _offline.default;
    }
  });
});
define('dummy/app', ['exports', 'dummy/resolver', 'ember-load-initializers', 'dummy/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var App = Ember.Application.extend({
    modulePrefix: _environment.default.modulePrefix,
    podModulePrefix: _environment.default.podModulePrefix,
    Resolver: _resolver.default
  });
  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);

  exports.default = App;
});
define('dummy/browserify', ['npm:dexie', 'npm:node-uuid'], function (_npmDexie, _npmNodeUuid) {
  'use strict';
});
define('dummy/components/advlimit-dialog-content', ['exports', 'ember-flexberry/components/advlimit-dialog-content'], function (exports, _advlimitDialogContent) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _advlimitDialogContent.default;
    }
  });
});
define('dummy/components/block-slot', ['exports', 'ember-block-slots/components/block-slot'], function (exports, _blockSlot) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _blockSlot.default;
    }
  });
});
define('dummy/components/colsconfig-dialog-content', ['exports', 'ember-flexberry/components/colsconfig-dialog-content'], function (exports, _colsconfigDialogContent) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _colsconfigDialogContent.default;
    }
  });
});
define('dummy/components/css-picker', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Component.extend({
    /**
      Items containing possible CSS classes names with flags indicating whether class is selected or not.
       @private
      @property _items
      @type Object[]
    */
    _items: undefined,

    actions: {
      /**
        Handles changes in checkboxes related to CSS classes names.
         @method actions.onChange
      */
      onChange: function onChange() {
        var classNames = Ember.A();
        this.$('input').each(function (index, input) {
          if (input.checked) {
            classNames.pushObject(input.name);
          }
        });

        this.set('value', classNames.join(' '));
      }
    },

    /**
      Items containing possible CSS classes names.
       @property items
      @type Object[]
    */
    items: undefined,

    /**
      Single value combined from selected CSS classes names.
       @property value
      @type String
     */
    value: undefined,

    /**
      Initializes component.
    */
    init: function init() {
      this._super.apply(this, arguments);

      this._generateItems();
      this._checkItems();
    },


    /**
      Observes changes in items collection.
    */
    _itemsDidChange: Ember.observer('items.[]', function () {
      this._generateItems();
      this._checkItems();
    }),

    /**
      Observes changes in value combined from selected CSS classes names.
    */
    _valueDidChange: Ember.observer('value', function () {
      this._checkItems();
    }),

    /**
      Generates items containing possible CSS classes names with flags indicating whether class is selected or not..
       @method _generateItems
    */
    _generateItems: function _generateItems() {
      var items = Ember.A(this.get('items'));

      this.set('_items', items.map(function (item) {
        return {
          name: item,
          checked: false
        };
      }));
    },


    /**
      Changes items flags indicating whether class is selected or not
      (depending on current value combined from selected CSS classes names).
       @method _checkItems
    */
    _checkItems: function _checkItems() {
      var classNames = Ember.A((this.get('value') || '').split(' '));
      this.get('_items').forEach(function (item) {
        Ember.set(item, 'checked', classNames.includes(item.name));
      });
    }
  });
});
define('dummy/components/filters-dialog-content', ['exports', 'ember-flexberry/components/filters-dialog-content'], function (exports, _filtersDialogContent) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _filtersDialogContent.default;
    }
  });
});
define('dummy/components/flexberry-button', ['exports', 'ember-flexberry/components/flexberry-button'], function (exports, _flexberryButton) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryButton.default;
    }
  });
});
define('dummy/components/flexberry-checkbox', ['exports', 'ember-flexberry/components/flexberry-checkbox'], function (exports, _flexberryCheckbox) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryCheckbox.default;
});
define('dummy/components/flexberry-colorpicker', ['exports', 'ember-flexberry/components/flexberry-colorpicker'], function (exports, _flexberryColorpicker) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryColorpicker.default;
    }
  });
});
define('dummy/components/flexberry-ddau-checkbox', ['exports', 'ember-flexberry/components/flexberry-ddau-checkbox'], function (exports, _flexberryDdauCheckbox) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryDdauCheckbox.default;
    }
  });
});
define('dummy/components/flexberry-ddau-slider', ['exports', 'ember-flexberry/components/flexberry-ddau-slider'], function (exports, _flexberryDdauSlider) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryDdauSlider.default;
    }
  });
});
define('dummy/components/flexberry-dialog', ['exports', 'ember-flexberry/components/flexberry-dialog'], function (exports, _flexberryDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryDialog.default;
    }
  });
});
define('dummy/components/flexberry-dropdown', ['exports', 'ember-flexberry/components/flexberry-dropdown'], function (exports, _flexberryDropdown) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryDropdown.default;
});
define('dummy/components/flexberry-error', ['exports', 'ember-flexberry/components/flexberry-error'], function (exports, _flexberryError) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryError.default;
    }
  });
});
define('dummy/components/flexberry-field', ['exports', 'ember-flexberry/components/flexberry-field'], function (exports, _flexberryField) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryField.default;
});
define('dummy/components/flexberry-file', ['exports', 'ember-flexberry/components/flexberry-file'], function (exports, _flexberryFile) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryFile.default;
});
define('dummy/components/flexberry-groupedit', ['exports', 'ember-flexberry/components/flexberry-groupedit'], function (exports, _flexberryGroupedit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryGroupedit.default;
});
define('dummy/components/flexberry-icon', ['exports', 'ember-flexberry/components/flexberry-icon'], function (exports, _flexberryIcon) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryIcon.default;
    }
  });
});
define('dummy/components/flexberry-jsonarea', ['exports', 'ember-flexberry/components/flexberry-jsonarea'], function (exports, _flexberryJsonarea) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryJsonarea.default;
    }
  });
});
define('dummy/components/flexberry-lookup', ['exports', 'ember-flexberry/components/flexberry-lookup'], function (exports, _flexberryLookup) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryLookup.default;
});
define('dummy/components/flexberry-menu', ['exports', 'ember-flexberry/components/flexberry-menu'], function (exports, _flexberryMenu) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryMenu.default;
    }
  });
});
define('dummy/components/flexberry-menuitem', ['exports', 'ember-flexberry/components/flexberry-menuitem'], function (exports, _flexberryMenuitem) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryMenuitem.default;
    }
  });
});
define('dummy/components/flexberry-objectlistview', ['exports', 'ember-flexberry/components/flexberry-objectlistview'], function (exports, _flexberryObjectlistview) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryObjectlistview.default;
});
define('dummy/components/flexberry-sidebar', ['exports', 'ember-flexberry/components/flexberry-sidebar'], function (exports, _flexberrySidebar) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberrySidebar.default;
    }
  });
});
define('dummy/components/flexberry-simpledatetime', ['exports', 'ember-flexberry/components/flexberry-simpledatetime'], function (exports, _flexberrySimpledatetime) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberrySimpledatetime.default;
    }
  });
});
define('dummy/components/flexberry-sitemap-guideline', ['exports', 'ember-flexberry/components/flexberry-sitemap-guideline'], function (exports, _flexberrySitemapGuideline) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberrySitemapGuideline.default;
    }
  });
});
define('dummy/components/flexberry-sitemap', ['exports', 'ember-flexberry/components/flexberry-sitemap'], function (exports, _flexberrySitemap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberrySitemap.default;
    }
  });
});
define('dummy/components/flexberry-tab-bar', ['exports', 'ember-flexberry/components/flexberry-tab-bar'], function (exports, _flexberryTabBar) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryTabBar.default;
    }
  });
});
define('dummy/components/flexberry-text-cell', ['exports', 'ember-flexberry/components/flexberry-text-cell'], function (exports, _flexberryTextCell) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryTextCell.default;
    }
  });
});
define('dummy/components/flexberry-textarea', ['exports', 'ember-flexberry/components/flexberry-textarea'], function (exports, _flexberryTextarea) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryTextarea.default;
});
define('dummy/components/flexberry-textbox', ['exports', 'ember-flexberry/components/flexberry-textbox'], function (exports, _flexberryTextbox) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryTextbox.default;
});
define('dummy/components/flexberry-toggler', ['exports', 'ember-flexberry/components/flexberry-toggler'], function (exports, _flexberryToggler) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryToggler.default;
});
define('dummy/components/flexberry-tree', ['exports', 'ember-flexberry/components/flexberry-tree'], function (exports, _flexberryTree) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryTree.default;
    }
  });
});
define('dummy/components/flexberry-treenode', ['exports', 'ember-flexberry/components/flexberry-treenode'], function (exports, _flexberryTreenode) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryTreenode.default;
    }
  });
});
define('dummy/components/flexberry-validationmessage', ['exports', 'ember-flexberry/components/flexberry-validationmessage'], function (exports, _flexberryValidationmessage) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryValidationmessage.default;
    }
  });
});
define('dummy/components/flexberry-validationsummary', ['exports', 'ember-flexberry/components/flexberry-validationsummary'], function (exports, _flexberryValidationsummary) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryValidationsummary.default;
    }
  });
});
define('dummy/components/form-load-time-tracker', ['exports', 'ember-flexberry/components/form-load-time-tracker'], function (exports, _formLoadTimeTracker) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _formLoadTimeTracker.default;
    }
  });
});
define('dummy/components/groupedit-toolbar', ['exports', 'ember-flexberry/components/groupedit-toolbar'], function (exports, _groupeditToolbar) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _groupeditToolbar.default;
});
define('dummy/components/mobile/flexberry-file', ['exports', 'ember-flexberry/components/mobile/flexberry-file'], function (exports, _flexberryFile) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryFile.default;
});
define('dummy/components/mobile/flexberry-groupedit', ['exports', 'ember-flexberry/components/mobile/flexberry-groupedit'], function (exports, _flexberryGroupedit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryGroupedit.default;
});
define('dummy/components/mobile/flexberry-objectlistview', ['exports', 'ember-flexberry/components/mobile/flexberry-objectlistview'], function (exports, _flexberryObjectlistview) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryObjectlistview.default;
});
define('dummy/components/mobile/flexberry-sitemap-guideline', ['exports', 'ember-flexberry/components/mobile/flexberry-sitemap-guideline'], function (exports, _flexberrySitemapGuideline) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberrySitemapGuideline.default;
});
define('dummy/components/mobile/object-list-view-row', ['exports', 'ember-flexberry/components/mobile/object-list-view-row'], function (exports, _objectListViewRow) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _objectListViewRow.default;
});
define('dummy/components/mobile/object-list-view', ['exports', 'ember-flexberry/components/mobile/object-list-view'], function (exports, _objectListView) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _objectListView.default;
});
define('dummy/components/modal-dialog', ['exports', 'ember-flexberry/components/modal-dialog'], function (exports, _modalDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _modalDialog.default;
});
define('dummy/components/number-input', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Component.extend({
    /**
      Override wrapper tag name to disable component's wrapping div.
       @property tagName
      @type String
      @default ''
     */
    tagName: '',

    /**
      Value typed through component's input.
       @property inputValue
      @type String
     */
    inputValue: undefined,

    /**
      Value typed through component's input & converted to number.
       @property value
      @type Number
     */
    value: undefined,

    /**
      Handles changes in inputValue.
     */
    inputValueDidChange: Ember.observer('inputValue', function () {
      var value = parseInt(this.get('inputValue'), 10);
      this.set('value', isNaN(value) ? undefined : value);
    }),

    /**
      Initializes component.
     */
    init: function init() {
      this._super.apply(this, arguments);

      var value = this.get('value');
      if (!Ember.isNone(value)) {
        this.set('inputValue', '' + value);
      }
    }
  });
});
define('dummy/components/object-list-view-cell', ['exports', 'ember-flexberry/components/object-list-view-cell'], function (exports, _objectListViewCell) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _objectListViewCell.default;
});
define('dummy/components/object-list-view-row', ['exports', 'ember-flexberry/components/object-list-view-row'], function (exports, _objectListViewRow) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _objectListViewRow.default;
});
define('dummy/components/object-list-view-single-column-cell', ['exports', 'ember-flexberry/components/object-list-view-single-column-cell'], function (exports, _objectListViewSingleColumnCell) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _objectListViewSingleColumnCell.default;
    }
  });
});
define('dummy/components/object-list-view', ['exports', 'ember-flexberry/components/object-list-view'], function (exports, _objectListView) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _objectListView.default;
});
define('dummy/components/olv-filter-interval', ['exports', 'ember-flexberry/components/olv-filter-interval'], function (exports, _olvFilterInterval) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _olvFilterInterval.default;
    }
  });
});
define('dummy/components/olv-setconfigdialogbutton', ['exports', 'ember-flexberry/components/olv-setconfigdialogbutton'], function (exports, _olvSetconfigdialogbutton) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _olvSetconfigdialogbutton.default;
    }
  });
});
define('dummy/components/olv-toolbar', ['exports', 'ember-flexberry/components/olv-toolbar'], function (exports, _olvToolbar) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _olvToolbar.default;
});
define('dummy/components/range-slider', ['exports', 'ui-slider/components/range-slider'], function (exports, _rangeSlider) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _rangeSlider.default;
    }
  });
});
define('dummy/components/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Component.extend({
    /**
      A hash of controller properties.
       @property controllerProperties
      @type Object
      @default null
     */
    controllerProperties: null,

    /**
      Settings metadata for component used in example.
       @property componentSettingsMetadata
      @type Object
      @default null
     */
    componentSettingsMetadata: null,

    /**
      Template text for component used in example.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: null,

    /**
      Overflow style of component block.
       @property componentBlockOverflow
      @type String
     */
    componentBlockOverflow: 'scroll'
  });
});
define('dummy/components/ui-message', ['exports', 'ember-flexberry/components/ui-message'], function (exports, _uiMessage) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _uiMessage.default;
});
define('dummy/components/ui-slider', ['exports', 'ui-slider/components/ui-slider'], function (exports, _uiSlider) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _uiSlider.default;
    }
  });
});
define('dummy/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _welcomePage) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _welcomePage.default;
    }
  });
});
define('dummy/components/yield-slot', ['exports', 'ember-block-slots/components/yield-slot'], function (exports, _yieldSlot) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _yieldSlot.default;
    }
  });
});
define('dummy/controllers/advlimit-dialog', ['exports', 'ember-flexberry/controllers/advlimit-dialog'], function (exports, _advlimitDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _advlimitDialog.default;
});
define('dummy/controllers/application', ['exports', 'dummy/config/environment'], function (exports, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var version = _environment.default.APP.version;

  exports.default = Ember.Controller.extend({
    /**
      Service that triggers objectlistview events.
       @property objectlistviewEventsService
      @type Service
    */
    objectlistviewEventsService: Ember.inject.service('objectlistview-events'),

    /**
      Service for managing the state of the application.
       @property appState
      @type AppStateService
    */
    appState: Ember.inject.service(),

    actions: {
      /**
        Call `updateWidthTrigger` for `objectlistviewEventsService`.
         @method actions.updateWidth
      */
      updateWidth: function updateWidth() {
        this.get('objectlistviewEventsService').updateWidthTrigger();
      },


      /**
        Toggles application sitemap's side bar.
         @method actions.toggleSidebar
      */
      toggleSidebar: function toggleSidebar() {
        var sidebar = Ember.$('.ui.sidebar.main.menu');
        sidebar.sidebar('toggle');
        sidebar.toggleClass('sidebar-mini');

        Ember.$('.full.height').toggleClass('content-opened');
        Ember.$('.full.height').css({
          transition: 'width 0.35s ease-in-out 0s',
          width: 'calc(100% - ' + sidebar.width() + 'px)'
        });

        Ember.$('.sidebar.icon .text_menu').toggleClass('hidden');
        Ember.$('.sidebar.icon').toggleClass('text-menu-show');
        Ember.$('.sidebar.icon').toggleClass('text-menu-hide');
        Ember.$('.bgw-opacity').toggleClass('hidden');

        // For reinit overflowed tabs.
        Ember.$(window).trigger('resize');
      },


      /**
        Toggles application sitemap's side bar in mobile view.
         @method actions.toggleSidebarMobile
      */
      toggleSidebarMobile: function toggleSidebarMobile() {
        Ember.$('.ui.sidebar.main.menu').sidebar('toggle');

        Ember.$('.sidebar.icon').toggleClass('text-menu-show');
        Ember.$('.sidebar.icon').toggleClass('text-menu-hide');
        Ember.$('.sidebar.icon').toggleClass('hidden-text');
        Ember.$('.bgw-opacity').toggleClass('hidden');

        if (!this.get('_hideEventIsAttached')) {
          Ember.$('.ui.sidebar.main.menu').sidebar('attach events', '.ui.sidebar.main.menu .item a', 'hide');
          this.set('_hideEventIsAttached', true);
        }
      },


      /**
        Осуществляет выход текущего пользователя из приложения и переход к логин-форме.
         @method actions.logout
      */
      logout: function logout() {
        this.transitionToRoute('login');
      },
      onMenuItemClick: function onMenuItemClick(e) {
        var namedItemSpans = Ember.$(e.currentTarget).find('span');
        if (namedItemSpans.length <= 0) {
          return;
        }

        var i18n = this.get('i18n');
        var namedSetting = namedItemSpans.get(0).innerText;

        switch (namedSetting) {
          case i18n.t('forms.application.header.logout.caption').toString():
            {
              this.send('logout');
              break;
            }
        }
        return null;
      }
    },

    /**
      Flag: indicates that form to which controller is related designed for acceptance tests &
      all additional markup in application.hbs mustn't be rendered.
       @property isInAcceptanceTestMode
      @type Boolean
      @default false
    */
    isInAcceptanceTestMode: false,

    /**
      Currernt addon version.
       @property addonVersion
      @type String
    */
    addonVersion: version,

    /**
      Link to GitHub commit related to current addon version.
       @property addonVersionHref
      @type String
    */
    addonVersionHref: Ember.computed('addonVersion', function () {
      var addonVersion = this.get('addonVersion');
      var commitSha = addonVersion.split('+')[1];

      return 'https://github.com/Flexberry/ember-flexberry/commit/' + commitSha;
    }),

    /**
      Flag: indicates whether current browser is internet explorer.
       @property browserIsInternetExplorer
      @type Boolean
    */
    browserIsInternetExplorer: Ember.computed(function () {
      var userAgent = window.navigator.userAgent;

      return userAgent.indexOf('MSIE ') > 0 || userAgent.indexOf('Trident/') > 0 || userAgent.indexOf('Edge/') > 0;
    }),

    /**
      Locales supported by application.
       @property locales
      @type String[]
      @default undefined
    */
    locales: undefined,

    /**
      Handles changes in userSettingsService.isUserSettingsServiceEnabled.
       @method _userSettingsServiceChanged
      @private
    */
    _userSettingsServiceChanged: Ember.observer('userSettingsService.isUserSettingsServiceEnabled', function () {
      this.send('onRefresh');
    }),

    /**
      Initializes controller.
    */
    init: function init() {
      this._super.apply(this, arguments);

      var i18n = this.get('i18n');
      if (Ember.isNone(i18n)) {
        return;
      }

      // Add locales.
      this.set('locales', ['ru', 'en']);

      // If i18n.locale is long value like 'ru-RU', 'en-GB', ... this code will return short variant 'ru', 'en', etc.
      var shortCurrentLocale = this.get('i18n.locale').split('-')[0];
      var availableLocales = Ember.A(this.get('locales'));

      // Force current locale to be one of available,
      // if browser's current language is not supported by dummy application,
      // or if browser's current locale is long value like 'ru-RU', 'en-GB', etc.
      if (!availableLocales.includes(shortCurrentLocale)) {
        i18n.set('locale', 'en');
      } else {
        i18n.set('locale', shortCurrentLocale);
      }
    },


    /**
      Application sitemap.
       @property sitemap
      @type Object
    */
    sitemap: Ember.computed('i18n.locale', function () {
      var i18n = this.get('i18n');

      return {
        nodes: [{
          link: 'index',
          caption: i18n.t('forms.application.sitemap.index.caption'),
          title: i18n.t('forms.application.sitemap.index.title'),
          icon: 'home',
          children: null
        }, {
          link: null,
          caption: i18n.t('forms.application.sitemap.application.caption'),
          title: i18n.t('forms.application.sitemap.application.title'),
          icon: 'clock outline',
          children: [{
            link: 'ember-flexberry-dummy-application-user-list',
            caption: i18n.t('forms.application.sitemap.application.application-users.caption'),
            title: i18n.t('forms.application.sitemap.application.application-users.title'),
            children: null
          }, {
            link: 'ember-flexberry-dummy-localization-list',
            caption: i18n.t('forms.application.sitemap.application.localizations.caption'),
            title: i18n.t('forms.application.sitemap.application.localizations.title'),
            children: null
          }, {
            link: 'ember-flexberry-dummy-suggestion-list',
            caption: i18n.t('forms.application.sitemap.application.suggestions.caption'),
            title: i18n.t('forms.application.sitemap.application.suggestions.title'),
            children: null
          }, {
            link: 'ember-flexberry-dummy-suggestion-type-list',
            caption: i18n.t('forms.application.sitemap.application.suggestion-types.caption'),
            title: i18n.t('forms.application.sitemap.application.suggestion-types.title'),
            children: null
          }, {
            link: 'ember-flexberry-dummy-multi-list',
            caption: i18n.t('forms.application.sitemap.application.multi.caption'),
            title: i18n.t('forms.application.sitemap.application.multi.title'),
            children: null
          }, {
            link: 'ember-flexberry-dummy-suggestion-file-list',
            caption: i18n.t('forms.application.sitemap.application.suggestion-file.caption'),
            title: i18n.t('forms.application.sitemap.application.suggestion-file.title'),
            children: null
          }]
        }, {
          link: null,
          caption: i18n.t('forms.application.sitemap.log-service-examples.caption'),
          title: i18n.t('forms.application.sitemap.log-service-examples.title'),
          icon: 'thumbs up',
          children: [{
            link: 'i-i-s-caseberry-logging-objects-application-log-l',
            caption: i18n.t('forms.application.sitemap.log-service-examples.application-log.caption'),
            title: i18n.t('forms.application.sitemap.log-service-examples.application-log.title'),
            children: null,
            icon: 'clock outline'
          }, {
            link: 'log-service-examples/settings-example',
            caption: i18n.t('forms.application.sitemap.log-service-examples.settings-example.caption'),
            title: i18n.t('forms.application.sitemap.log-service-examples.settings-example.title'),
            children: null,
            icon: 'lock'
          }, {
            link: 'log-service-examples/clear-log-form',
            caption: i18n.t('forms.application.sitemap.log-service-examples.clear-log-form.caption'),
            title: i18n.t('forms.application.sitemap.log-service-examples.clear-log-form.title'),
            children: null,
            icon: 'comment outline'
          }]
        }, {
          link: null,
          caption: i18n.t('forms.application.sitemap.lock.caption'),
          title: i18n.t('forms.application.sitemap.lock.caption'),
          icon: 'lock',
          children: [{
            link: 'new-platform-flexberry-services-lock-list',
            caption: i18n.t('forms.application.sitemap.lock.title'),
            title: i18n.t('forms.application.sitemap.lock.title'),
            children: null
          }]
        }, {
          link: null,
          caption: i18n.t('forms.application.sitemap.components-examples.caption'),
          title: i18n.t('forms.application.sitemap.components-examples.title'),
          icon: 'comment outline',
          children: [{
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-button.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-button.title'),
            children: [{
              link: 'components-examples/flexberry-button/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-button.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-button.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-checkbox.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-checkbox.title'),
            children: [{
              link: 'components-examples/flexberry-checkbox/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-checkbox.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-checkbox.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-ddau-checkbox.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-ddau-checkbox.title'),
            children: [{
              link: 'components-examples/flexberry-ddau-checkbox/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-ddau-checkbox.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-ddau-checkbox.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.title'),
            children: [{
              link: 'components-examples/flexberry-dropdown/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.settings-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-dropdown/conditional-render-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.conditional-render-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.conditional-render-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-dropdown/empty-value-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.empty-value-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.empty-value-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-dropdown/items-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.items-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-dropdown.items-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-field.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-field.title'),
            children: [{
              link: 'components-examples/flexberry-field/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-field.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-field.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-file.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-file.title'),
            children: [{
              link: 'components-examples/flexberry-file/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-file.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-file.settings-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-file/flexberry-file-in-modal',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-file.flexberry-file-in-modal.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-file.flexberry-file-in-modal.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.title'),
            children: [{
              link: 'components-examples/flexberry-groupedit/model-update-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.model-update-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.model-update-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-groupedit/custom-buttons-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.custom-buttons-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.custom-buttons-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-groupedit/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.settings-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-groupedit/configurate-row-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.configurate-row-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.configurate-row-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-groupedit-with-lookup-with-computed-atribute',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.groupedit-with-lookup-with-computed-atribute.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.groupedit-with-lookup-with-computed-atribute.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-readonly-columns-by-configurate-row-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.readonly-columns-by-configurate-row-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-groupedit.readonly-columns-by-configurate-row-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.title'),
            children: [{
              link: 'components-examples/flexberry-lookup/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.settings-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/customizing-window-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.customizing-window-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.customizing-window-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/hierarchy-olv-in-lookup-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.hierarchy-olv-in-lookup-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.hierarchy-olv-in-lookup-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/limit-function-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.limit-function-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.limit-function-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/limit-function-through-dynamic-properties-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.limit-function-through-dynamic-properties-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.limit-function-through-dynamic-properties-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/lookup-block-form-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.lookup-block-form-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.lookup-block-form-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/lookup-in-modal',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.lookup-in-modal.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.lookup-in-modal.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/dropdown-mode-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.dropdown-mode-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.dropdown-mode-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/default-ordering-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.default-ordering-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.default-ordering-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/autocomplete-order-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.autocomplete-order-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.autocomplete-order-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-list',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.compute-autocomplete.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.compute-autocomplete.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/numeric-autocomplete',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.numeric-autocomplete.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.numeric-autocomplete.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-lookup/autofill-by-limit-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.autofill-by-limit-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-lookup.autofill-by-limit-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-menu.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-menu.title'),
            children: [{
              link: 'components-examples/flexberry-menu/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-menu.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-menu.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.title'),
            children: [{
              link: 'components-examples/flexberry-objectlistview/limit-function-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.limit-function-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.limit-function-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/inheritance-models',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.inheritance-models.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.inheritance-models.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.settings-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/toolbar-custom-buttons-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.toolbar-custom-buttons-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.toolbar-custom-buttons-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/on-edit-form',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.on-edit-form.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.on-edit-form.title')
            }, {
              link: 'components-examples/flexberry-objectlistview/list-on-editform',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.list-on-editform.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.list-on-editform.title')
            }, {
              link: 'components-examples/flexberry-objectlistview/custom-filter',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.custom-filter.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.custom-filter.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/edit-form-with-detail-list',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.edit-form-with-detail-list.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.edit-form-with-detail-list.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/hierarchy-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.hierarchy-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.hierarchy-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/hierarchy-paging-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.hierarchy-paging-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.hierarchy-paging-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/configurate-rows',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.configurate-rows.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.configurate-rows.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/downloading-files-from-olv-list',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.downloading-files-from-olv-list.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.downloading-files-from-olv-list.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/selected-rows',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.selected-rows.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.selected-rows.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/object-list-view-resize',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.object-list-view-resize.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.object-list-view-resize.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-list',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.return-from-ediform.title'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.return-from-ediform.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/lock-services-editor-view-list',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.lock-services-editor-view-list.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.lock-services-editor-view-list.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-objectlistview/limited-text-size-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.limited-text-size-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-objectlistview.limited-text-size-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-simpledatetime.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-simpledatetime.title'),
            children: [{
              link: 'components-examples/flexberry-simpledatetime/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-simpledatetime.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-simpledatetime.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-text-cell.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-text-cell.title'),
            children: [{
              link: 'components-examples/flexberry-text-cell/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-text-cell.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-text-cell.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-textarea.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-textarea.title'),
            children: [{
              link: 'components-examples/flexberry-textarea/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-textarea.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-textarea.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-textbox.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-textbox.title'),
            children: [{
              link: 'components-examples/flexberry-textbox/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-textbox.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-textbox.settings-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-toggler.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-toggler.title'),
            children: [{
              link: 'components-examples/flexberry-toggler/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-toggler.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-toggler.settings-example.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-toggler/settings-example-inner',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-toggler.settings-example-inner.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-toggler.settings-example-inner.title'),
              children: null
            }, {
              link: 'components-examples/flexberry-toggler/ge-into-toggler-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-toggler.ge-into-toggler-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-toggler.ge-into-toggler-example.title'),
              children: null
            }]
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.flexberry-tree.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.flexberry-tree.title'),
            children: [{
              link: 'components-examples/flexberry-tree/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.flexberry-tree.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.flexberry-tree.settings-example.title'),
              children: null
            }]
          }, {
            link: 'components-examples/modal-dialog',
            caption: i18n.t('forms.application.sitemap.components-examples.modal-dialog.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.modal-dialog.title'),
            children: null
          }, {
            link: null,
            caption: i18n.t('forms.application.sitemap.components-examples.ui-message.caption'),
            title: i18n.t('forms.application.sitemap.components-examples.ui-message.title'),
            children: [{
              link: 'components-examples/ui-message/settings-example',
              caption: i18n.t('forms.application.sitemap.components-examples.ui-message.settings-example.caption'),
              title: i18n.t('forms.application.sitemap.components-examples.ui-message.settings-example.title'),
              children: null
            }]
          }]
        }, {
          link: null,
          caption: i18n.t('forms.application.sitemap.integration-examples.caption'),
          title: i18n.t('forms.application.sitemap.integration-examples.title'),
          icon: 'linkify',
          children: [{
            link: null,
            caption: i18n.t('forms.application.sitemap.integration-examples.edit-form.caption'),
            title: i18n.t('forms.application.sitemap.integration-examples.edit-form.title'),
            children: [{
              link: 'integration-examples/edit-form/readonly-mode',
              caption: i18n.t('forms.application.sitemap.integration-examples.edit-form.readonly-mode.caption'),
              title: i18n.t('forms.application.sitemap.integration-examples.edit-form.readonly-mode.title'),
              children: null
            }, {
              link: 'integration-examples/edit-form/validation',
              caption: i18n.t('forms.application.sitemap.integration-examples.edit-form.validation.caption'),
              title: i18n.t('forms.application.sitemap.integration-examples.edit-form.validation.title'),
              children: null
            }]
          }]
        }, {
          link: null,
          caption: i18n.t('forms.application.sitemap.user-setting-forms.caption'),
          title: i18n.t('forms.application.sitemap.user-setting-forms.title'),
          icon: 'desktop',
          children: [{
            link: 'user-setting-forms/user-setting-delete',
            caption: i18n.t('forms.application.sitemap.user-setting-forms.user-setting-delete.caption'),
            title: i18n.t('forms.application.sitemap.user-setting-forms.user-setting-delete.title'),
            children: null
          }]
        }]
      };
    }),

    /**
      Application usermenu.
       @property itemsUserMenu
      @type Object
    */
    itemsUserMenu: Ember.computed('i18n.locale', function () {
      var i18n = this.get('i18n');
      var itemsUserMenu = [{
        icon: 'dropdown icon',
        title: i18n.t('forms.application.header.profile.caption'),
        iconAlignment: 'right',
        items: [{
          title: i18n.t('forms.application.header.logout.caption'),
          items: null
        }]
      }];
      return itemsUserMenu;
    })
  });
});
define('dummy/controllers/colsconfig-dialog', ['exports', 'ember-flexberry/controllers/colsconfig-dialog'], function (exports, _colsconfigDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _colsconfigDialog.default;
});
define('dummy/controllers/components-acceptance-tests/edit-form-readonly', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Flag: indicates whether the form is in readonly mode or not.
       @property readonly
      @type Boolean
      @default true
     */
    readonly: true,

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
    */
    getCellComponent: function getCellComponent(attr, bindingPath) {
      var cellComponent = this._super.apply(this, arguments);

      if (attr.kind === 'belongsTo' && bindingPath === 'master') {
        cellComponent.componentProperties = {
          projection: 'MasterL',
          displayAttributeName: 'text',
          title: 'Master',
          relationName: 'master',
          choose: 'showLookupDialog',
          remove: 'removeLookupValue'
        };
      }

      if (bindingPath === 'longText') {
        return {
          componentName: 'flexberry-textarea',
          componentProperties: {}
        };
      }

      if (bindingPath === 'date') {
        return {
          componentName: 'flexberry-simpledatetime',
          componentProperties: {
            type: 'date'
          }
        };
      }

      if (attr.kind === 'belongsTo' && bindingPath === 'masterDropdown') {
        cellComponent.componentProperties = {
          projection: 'MasterDropdownL',
          displayAttributeName: 'text',
          title: 'Master dropdown',
          relationName: 'masterDropdown',
          choose: 'showLookupDialog',
          remove: 'removeLookupValue'
        };
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-acceptance-tests/edit-form-validation/validation', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Lookup events service.
    */
    lookupEvents: Ember.inject.service('lookup-events'),

    actions: {
      /**
        Handles click on lookup's choose button.
      */
      showLookupDialog: function showLookupDialog() {
        // Create new master & add to model.

        var master = this.get('store').createRecord('integration-examples/edit-form/validation/master', { text: 'Master text' });
        this.get('model').set('master', master);

        this.get('lookupEvents').lookupDialogOnHiddenTrigger('IntegrationExamplesValidationsMaster');

        // Create temp file and add to model.
        var tempFile = { fileName: 'Ждём НГ.png', fileSize: '27348', fileMimeType: '27348' };
        this.get('model').set('file', tempFile);
      }
    }
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {

    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-list'
     */
    parentRoute: 'ember-flexberry-dummy-suggestion-list'
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-list-with-checked-checkbox', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-edit'
     */
    editFormRoute: 'components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox',

    exportExcelProjection: 'SuggestionL'
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-groupedit/properly-rerenders', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({});
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/base-operations', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
    */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),

    /**
      Name for 'flexberry-lookup' component 'componentName' property.
       @property componentName
      @type String
      @default 'flexberry-lookup'
    */
    componentName: 'flexberry-lookup',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Master',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default 't('components.flexberry-lookup.choose-button-text')'
    */
    chooseText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.choose-button-text'),

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default t('components.flexberry-lookup.remove-button-text')
    */
    removeText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.remove-button-text'),

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: '',

    /**
      Projection name for 'flexberry-lookup' component 'projection' property.
       @property projection
      @type String
      @default 'SettingLookupExampleView'
    */
    projection: 'SettingLookupExampleView',

    /**
      Attribute name name for 'flexberry-lookup' component 'displayAttributeName' property.
       @property projection
      @type String
      @default 'name'
    */
    displayAttributeName: 'name',

    /**
      Name for 'flexberry-lookup' component 'relationName' property.
       @property relationName
      @type String
      @default 'type'
    */
    relationName: 'type'
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-actions', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
    */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),

    /**
      Name for 'flexberry-lookup' component 'componentName' property.
       @property componentName
      @type String
      @default 'flexberry-lookup'
    */
    componentName: 'flexberry-lookup',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Master',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default 't('components.flexberry-lookup.choose-button-text')'
    */
    chooseText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.choose-button-text'),

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default t('components.flexberry-lookup.remove-button-text')
    */
    removeText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.remove-button-text'),

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: '',

    /**
      Projection name for 'flexberry-lookup' component 'projection' property.
       @property projection
      @type String
      @default 'SettingLookupExampleView'
    */
    projection: 'SettingLookupExampleView',

    /**
      Attribute name name for 'flexberry-lookup' component 'displayAttributeName' property.
       @property projection
      @type String
      @default 'name'
    */
    displayAttributeName: 'name',

    /**
      Name for 'flexberry-lookup' component 'relationName' property.
       @property relationName
      @type String
      @default 'type'
    */
    relationName: 'type'
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-autocomplete', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-lookup.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'));
      }
    }),
    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Temp title',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default 't('components.flexberry-lookup.choose-button-text')'
    */
    chooseText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.choose-button-text'),

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default '<i class="remove icon"></i>'
    */
    removeText: '<i class="remove icon"></i>',

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: ''
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-autofill-by-limit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry-data/query/predicate', 'ember-flexberry-data/query/filter-operator'], function (exports, _editForm, _predicate, _filterOperator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({

    /**
      Current predicate to limit values for lookup.
       @property limitValue
      @type BasePredicate
      @default undefined
     */
    limitValue: undefined,

    /**
      Current values for lookup.
       @property limitValue
      @type BasePredicate
      @default undefined
     */
    defaultValue: undefined,

    /**
      Current predicate to limit accessible values for lookup.
       @property lookupCustomLimitPredicate
      @type BasePredicate
      @default undefined
     */
    lookupCustomLimitPredicate: Ember.computed(function () {
      var limitValue = this.get('limitValue');

      return new _predicate.SimplePredicate('id', _filterOperator.default.Eq, limitValue.get('id'));
    })
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-dropdown', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-lookup.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'));
      }
    }),
    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Temp title',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default 't('components.flexberry-lookup.choose-button-text')'
    */
    chooseText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.choose-button-text'),

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default '<i class="remove icon"></i>'
    */
    removeText: '<i class="remove icon"></i>',

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: ''
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-limit-function', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry-data/query/predicate'], function (exports, _editForm, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Object containing dynamic properties that must be assigned to
      component using {{#crossLink "DynamicPropertiesMixin"}}dynamic-properties mixin{{/crossLink}}.
       @property dynamicProperties
      @type Object
      @default undefined
    */
    dynamicProperties: undefined,

    /**
      Current predicate to limit accessible values for lookup.
       @property limitType
      @type BasePredicate
      @default undefined
     */
    limitType: undefined,

    actions: {

      /**
        This method set dynamicProperties.lookupLimitPredicate for lookup window.
         @method limitFunction
       */
      limitFunction: function limitFunction() {
        var currentLookupValue = this.get('limitType');
        var limitFunction = new _predicate.StringPredicate('name').contains(currentLookupValue);
        this.set('dynamicProperties.lookupLimitPredicate', limitFunction);
      }
    },

    /**
      Set limit accessible values for lookup.
       @method init
     */
    init: function init() {
      this._super.apply(this, arguments);
      this.set('dynamicProperties', {
        lookupLimitPredicate: null
      });
      this.set('limitType', this.get('controller.limitType'));
    }
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-preview-page', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {});
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-preview', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({

    /**
      Current values name for lookup.
       @property testName
      @type BasePredicate
      @default undefined
     */
    testName: undefined,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),

    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-lookup.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'));
      }
    }),

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Temp title',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default 't('components.flexberry-lookup.choose-button-text')'
    */
    chooseText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.choose-button-text'),

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default '<i class="remove icon"></i>'
    */
    removeText: '<i class="remove icon"></i>',

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'previewButtonClass' property.
       @property previewButtonClass
      @type String
    */
    previewButtonClass: '',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      if (attr.kind === 'belongsTo') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              preview: 'previewLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true,
              showPreviewButton: true,
              previewFormRoute: 'components-acceptance-tests/flexberry-lookup/settings-example-preview-page'
            };
            break;
        }
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-projection', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-lookup.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'));
      }
    }),
    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Temp title',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default 't('components.flexberry-lookup.choose-button-text')'
    */
    chooseText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.choose-button-text'),

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default '<i class="remove icon"></i>'
    */
    removeText: '<i class="remove icon"></i>',

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: ''
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example-relation-name', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
    */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),

    /**
      Name for 'flexberry-lookup' component 'componentName' property.
       @property componentName
      @type String
      @default 'flexberry-lookup'
    */
    componentName: 'flexberry-lookup',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Master',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default 't('components.flexberry-lookup.choose-button-text')'
    */
    chooseText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.choose-button-text'),

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default t('components.flexberry-lookup.remove-button-text')
    */
    removeText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.remove-button-text'),

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: '',

    /**
      Projection name for 'flexberry-lookup' component 'projection' property.
       @property projection
      @type String
      @default 'SettingLookupExampleView'
    */
    projection: 'SettingLookupExampleView',

    /**
      Attribute name name for 'flexberry-lookup' component 'displayAttributeName' property.
       @property projection
      @type String
      @default 'name'
    */
    displayAttributeName: 'name',

    /**
      Name for 'flexberry-lookup' component 'relationName' property.
       @property relationName
      @type String
      @default 'type'
    */
    relationName: 'Temp relation name'
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-lookup/settings-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-lookup.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'));
      }
    }),
    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Temp title',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default 't('components.flexberry-lookup.choose-button-text')'
    */
    chooseText: (0, _emberI18n.translationMacro)('components.flexberry-lookup.choose-button-text'),

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default '<i class="remove icon"></i>'
    */
    removeText: '<i class="remove icon"></i>',

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: ''
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-objectlistview/base-operations', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Model projection for 'flexberry-objectlistview' component 'modelProjection' property.
       @property projection
      @type Object
     */
    projection: 'SuggestionE',

    /**
      Name of related edit form route (for 'flexberry-objectlistview' component 'editFormRoute' property).
       @property editFormRoute
      @type String
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-edit',

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Flag for 'flexberry-objectlistview' component 'tableStriped' property.
       @property tableStriped
      @type Boolean
     */
    tableStriped: true,

    /**
      Flag for 'flexberry-objectlistview' component 'allowColumnResize' property.
       @property allowColumnResize
      @type Boolean
     */
    allowColumnResize: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'createNewButton' mode or not.
       @property createNewButton
      @type Boolean
     */
    createNewButton: true,

    /**
      Flag for 'flexberry-objectlistview' component 'deleteButton' property.
       @property deleteButton
      @type Boolean
     */
    deleteButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'enableFilters' mode or not.
       @property enableFilters
      @type Boolean
     */
    enableFilters: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'filterButton' mode or not.
       @property filterButton
      @type Boolean
     */
    filterButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'refreshButton' mode or not.
       @property refreshButton
      @type Boolean
     */
    refreshButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showCheckBoxInRow' mode or not.
       @property showCheckBoxInRow
      @type Boolean
     */
    showCheckBoxInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteButtonInRow' mode or not.
       @property showDeleteButtonInRow
      @type Boolean
     */
    showDeleteButtonInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showEditMenuItemInRow' mode or not.
       @property showEditMenuItemInRow
      @type Boolean
     */
    showEditMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteMenuItemInRow' mode or not.
       @property showDeleteMenuItemInRow
      @type Boolean
     */
    showDeleteMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'rowClickable' mode or not.
       @property rowClickable
      @type Boolean
     */
    rowClickable: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'orderable' mode or not.
       @property orderable
      @type Boolean
     */
    orderable: true,

    /**
      Тext for 'flexberry-objectlistview' component 'singleColumnHeaderTitle' property.
       @property singleColumnHeaderTitle
      @type String
     */
    singleColumnHeaderTitle: undefined,

    /**
      Cout of list loading.
       @property loadCount
      @type Int
    */
    loadCount: 0,

    /**
      Current records.
       @property _records
      @type Object[]
      @protected
      @readOnly
    */
    records: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('records', []);
    }
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-objectlistview/computable-field', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Model projection for 'flexberry-objectlistview' component 'modelProjection' property.
       @property projection
      @type Object
     */
    projection: 'SuggestionL',

    /**
      Name of related edit form route (for 'flexberry-objectlistview' component 'editFormRoute' property).
       @property editFormRoute
      @type String
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-edit',

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Flag for 'flexberry-objectlistview' component 'tableStriped' property.
       @property tableStriped
      @type Boolean
     */
    tableStriped: true,

    /**
      Flag for 'flexberry-objectlistview' component 'allowColumnResize' property.
       @property allowColumnResize
      @type Boolean
     */
    allowColumnResize: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'createNewButton' mode or not.
       @property createNewButton
      @type Boolean
     */
    createNewButton: true,

    /**
      Flag for 'flexberry-objectlistview' component 'deleteButton' property.
       @property deleteButton
      @type Boolean
     */
    deleteButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'enableFilters' mode or not.
       @property enableFilters
      @type Boolean
     */
    enableFilters: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'filterButton' mode or not.
       @property filterButton
      @type Boolean
     */
    filterButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'refreshButton' mode or not.
       @property refreshButton
      @type Boolean
     */
    refreshButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showCheckBoxInRow' mode or not.
       @property showCheckBoxInRow
      @type Boolean
     */
    showCheckBoxInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteButtonInRow' mode or not.
       @property showDeleteButtonInRow
      @type Boolean
     */
    showDeleteButtonInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showEditMenuItemInRow' mode or not.
       @property showEditMenuItemInRow
      @type Boolean
     */
    showEditMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteMenuItemInRow' mode or not.
       @property showDeleteMenuItemInRow
      @type Boolean
     */
    showDeleteMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'rowClickable' mode or not.
       @property rowClickable
      @type Boolean
     */
    rowClickable: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'orderable' mode or not.
       @property orderable
      @type Boolean
     */
    orderable: true,

    /**
      Тext for 'flexberry-objectlistview' component 'singleColumnHeaderTitle' property.
       @property singleColumnHeaderTitle
      @type String
     */
    singleColumnHeaderTitle: undefined,

    /**
      Cout of list loading.
       @property loadCount
      @type Int
    */
    loadCount: 0,

    /**
      Current records.
       @property _records
      @type Object[]
      @protected
      @readOnly
    */
    records: undefined,

    /**
      An overridable method called when objects are instantiated.
    */
    init: function init() {
      this._super.apply(this, arguments);
      this.set('records', []);
    }
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-objectlistview/custom-filter', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    filterByAnyWord: false,

    filterByAllWords: false,

    /**
      Cout of list loading.
       @property loadCount
      @type Int
    */
    loadCount: 0,

    customButtons: Ember.computed('filterByAnyWord', 'filterByAllWords', function () {
      return [{
        buttonName: 'filterByAnyWord',
        buttonAction: 'toggleFilterByAnyWord',
        buttonClasses: this.get('filterByAnyWord') ? 'positive' : ''
      }, {
        buttonName: 'filterByAllWords',
        buttonAction: 'toggleFilterByAllWords',
        buttonClasses: this.get('filterByAllWords') ? 'positive' : ''
      }];
    }),

    actions: {
      toggleFilterByAnyWord: function toggleFilterByAnyWord() {
        this.toggleProperty('filterByAnyWord');
        if (this.get('filterByAnyWord')) {
          this.set('filterByAllWords', false);
        }
      },
      toggleFilterByAllWords: function toggleFilterByAllWords() {
        this.toggleProperty('filterByAllWords');
        if (this.get('filterByAllWords')) {
          this.set('filterByAnyWord', false);
        }
      },


      /* eslint-disable no-unused-vars */
      componentForFilter: function componentForFilter(type, relation) {
        switch (type) {
          case 'date':
            return { name: 'flexberry-simpledatetime', properties: { type: 'date' } };
          case 'decimal':
            return { name: 'flexberry-textbox', properties: { class: 'compact fluid' } };
          default:
            return {};
        }
      },

      /* eslint-enable no-unused-vars */

      conditionsByType: function conditionsByType(type) {
        switch (type) {
          case 'file':
            return null;

          case 'date':
          case 'number':
            return ['eq', 'neq', 'le', 'ge'];

          case 'string':
            return ['eq', 'neq', 'like', 'empty'];

          case 'boolean':
            return ['eq'];

          default:
            return ['eq', 'neq'];
        }
      }
    }
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-objectlistview/date-format', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Model projection for 'flexberry-objectlistview' component 'modelProjection' property.
       @property projection
      @type Object
     */
    projection: 'SuggestionE',

    /**
      Name of related edit form route (for 'flexberry-objectlistview' component 'editFormRoute' property).
       @property editFormRoute
      @type String
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-edit',

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Flag for 'flexberry-objectlistview' component 'tableStriped' property.
       @property tableStriped
      @type Boolean
     */
    tableStriped: true,

    /**
      Flag for 'flexberry-objectlistview' component 'allowColumnResize' property.
       @property allowColumnResize
      @type Boolean
     */
    allowColumnResize: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'createNewButton' mode or not.
       @property createNewButton
      @type Boolean
     */
    createNewButton: true,

    /**
      Flag for 'flexberry-objectlistview' component 'deleteButton' property.
       @property deleteButton
      @type Boolean
     */
    deleteButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'enableFilters' mode or not.
       @property enableFilters
      @type Boolean
     */
    enableFilters: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'filterButton' mode or not.
       @property filterButton
      @type Boolean
     */
    filterButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'refreshButton' mode or not.
       @property refreshButton
      @type Boolean
     */
    refreshButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showCheckBoxInRow' mode or not.
       @property showCheckBoxInRow
      @type Boolean
     */
    showCheckBoxInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteButtonInRow' mode or not.
       @property showDeleteButtonInRow
      @type Boolean
     */
    showDeleteButtonInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showEditMenuItemInRow' mode or not.
       @property showEditMenuItemInRow
      @type Boolean
     */
    showEditMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteMenuItemInRow' mode or not.
       @property showDeleteMenuItemInRow
      @type Boolean
     */
    showDeleteMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'rowClickable' mode or not.
       @property rowClickable
      @type Boolean
     */
    rowClickable: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'orderable' mode or not.
       @property orderable
      @type Boolean
     */
    orderable: true,

    /**
      Тext for 'flexberry-objectlistview' component 'singleColumnHeaderTitle' property.
       @property singleColumnHeaderTitle
      @type String
     */
    singleColumnHeaderTitle: undefined,

    /**
      Cout of list loading.
       @property loadCount
      @type Int
    */
    loadCount: 0,

    /**
      Current records.
       @property _records
      @type Object[]
      @protected
      @readOnly
    */
    records: undefined,

    dateFormat: '1',

    init: function init() {
      this._super.apply(this, arguments);
      this.set('records', []);
    },


    /* eslint-disable no-unused-vars */
    getCellComponent: function getCellComponent(attr, bindingPath, modelClass) {
      if (attr.kind === 'attr') {
        if (bindingPath === 'date') {
          switch (this.dateFormat) {
            case '1':
              {
                return {
                  componentName: 'object-list-view-cell',
                  componentProperties: {
                    dateFormat: 'YYYY-MM-DD'
                  }
                };
              }
            case '2':
              {
                return {
                  componentName: 'object-list-view-cell',
                  componentProperties: {
                    dateFormat: 'DD.MM.YYYY, hh:mm:ss'
                  }
                };
              }
            case '3':
              {
                return {
                  componentName: 'object-list-view-cell',
                  componentProperties: {
                    dateFormat: 'll'
                  }
                };
              }
          }
        }
      }

      return this._super.apply(this, arguments);
    }
    /* eslint-enable no-unused-vars */
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-objectlistview/folv-filter', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Model projection for 'flexberry-objectlistview' component 'modelProjection' property.
       @property projection
      @type Object
     */
    projection: 'FlexberryObjectlistviewFilterTest',

    /**
      Name of related edit form route (for 'flexberry-objectlistview' component 'editFormRoute' property).
       @property editFormRoute
      @type String
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-edit',

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'enableFilters' mode or not.
       @property enableFilters
      @type Boolean
     */
    enableFilters: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'refreshButton' mode or not.
       @property refreshButton
      @type Boolean
     */
    refreshButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showEditMenuItemInRow' mode or not.
       @property showEditMenuItemInRow
      @type Boolean
     */
    showEditMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'rowClickable' mode or not.
       @property rowClickable
      @type Boolean
     */
    rowClickable: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'orderable' mode or not.
       @property orderable
      @type Boolean
     */
    orderable: false,

    /**
      Flag to use colsConfigButton button at toolbar.
       @property colsConfigButton
      @type Boolean
    */
    colsConfigButton: false,

    /**
      Cout of list loading.
       @property loadCount
      @type Int
    */
    loadCount: 0
  });
});
define('dummy/controllers/components-acceptance-tests/flexberry-objectlistview/folv-paging', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Model projection for 'flexberry-objectlistview' component 'modelProjection' property.
       @property projection
      @type Object
     */
    projection: 'SuggestionTypeL',

    /**
      Name of related edit form route (for 'flexberry-objectlistview' component 'editFormRoute' property).
       @property editFormRoute
      @type String
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit',

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Flag for 'flexberry-objectlistview' component 'tableStriped' property.
       @property tableStriped
      @type Boolean
     */
    tableStriped: true,

    /**
      Flag for 'flexberry-objectlistview' component 'allowColumnResize' property.
       @property allowColumnResize
      @type Boolean
     */
    allowColumnResize: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'createNewButton' mode or not.
       @property createNewButton
      @type Boolean
     */
    createNewButton: true,

    /**
      Flag for 'flexberry-objectlistview' component 'deleteButton' property.
       @property deleteButton
      @type Boolean
     */
    deleteButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'enableFilters' mode or not.
       @property enableFilters
      @type Boolean
     */
    enableFilters: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'filterButton' mode or not.
       @property filterButton
      @type Boolean
     */
    filterButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'refreshButton' mode or not.
       @property refreshButton
      @type Boolean
     */
    refreshButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showCheckBoxInRow' mode or not.
       @property showCheckBoxInRow
      @type Boolean
     */
    showCheckBoxInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteButtonInRow' mode or not.
       @property showDeleteButtonInRow
      @type Boolean
     */
    showDeleteButtonInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showEditButtonInRow' mode or not.
       @property showEditButtonInRow
      @type Boolean
     */
    showEditButtonInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showEditMenuItemInRow' mode or not.
       @property showEditMenuItemInRow
      @type Boolean
     */
    showEditMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteMenuItemInRow' mode or not.
       @property showDeleteMenuItemInRow
      @type Boolean
     */
    showDeleteMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'rowClickable' mode or not.
       @property rowClickable
      @type Boolean
     */
    rowClickable: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'orderable' mode or not.
       @property orderable
      @type Boolean
     */
    orderable: true,

    /**
      ext for 'flexberry-objectlistview' component 'singleColumnHeaderTitle' property.
       @property singleColumnHeaderTitle
      @type String
     */
    singleColumnHeaderTitle: undefined,

    /**
      Cout of list loading.
       @property loadCount
      @type Int
    */
    loadCount: 0,

    /**
      Current records.
       @property _records
      @type Object[]
      @protected
      @readOnly
    */
    records: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('records', []);
    }
  });
});
define('dummy/controllers/components-examples/flexberry-button/settings-example', ['exports', 'ember-flexberry/mixins/flexberry-ddau-checkbox-actions-handler'], function (exports, _flexberryDdauCheckboxActionsHandler) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend(_flexberryDdauCheckboxActionsHandler.default, {
    /**
      Component's wrapper CSS-classes.
       @property class
      @type String
    */
    class: '',

    /**
      Component's icon CSS-class names.
       @property iconClass
      @type String
      @default null
    */
    iconClass: null,

    /**
      Text for 'flexberry-button' 'caption' property.
       @property caption
      @type String
      @default null
    */
    caption: null,

    /**
      Component's tooltip text.
      Will be added as wrapper's element 'title' attribute.
       @property tooltip
      @default null
    */
    tooltip: null,

    /**
      Flag: indicates whether 'flexberry-button' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Template text for 'flexberry-button' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-button<br>' + '  class=class<br>' + '  iconClass=class<br>' + '  caption=caption<br>' + '  tooltip=tooltip<br>' + '  readonly=readonly<br>' + '  click=(action "onButtonClick")<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();

      componentSettingsMetadata.pushObject({
        settingName: 'class',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['circular', 'fluid', 'loading', 'red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey', 'black', 'top attached', 'bottom attached', 'left attached', 'right attached', 'tiny', 'small', 'large', 'big', 'huge', 'primary', 'secondary', 'basic'],
        bindedControllerPropertieName: 'class'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'iconClass',
        settingType: 'enumeration',
        settingAvailableItems: ['edit icon', 'cut icon', 'attach icon', 'add square icon', 'download icon'],
        settingDefaultValue: null,
        bindedControllerPropertieName: 'iconClass'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'caption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'caption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'tooltip',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'tooltip'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });

      return componentSettingsMetadata;
    }),

    actions: {
      onButtonClick: function onButtonClick(e) {
        // eslint-disable-next-line no-console
        console.log('Button clicked. Click event-object: ', e);
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-checkbox/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Text for 'flexberry-checkbox' component 'label' property.
       @property label
      @type String
     */
    label: undefined,

    /**
      Flag: indicates whether 'flexberry-checkbox' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Component's wrapper CSS classes.
       @property class
      @type String
    */
    class: '',

    /**
      Template text for 'flexberry-checkbox' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-checkbox<br>' + '  value=model.flag<br>' + '  label=label<br>' + '  readonly=readonly<br>' + '  class=class<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'boolean',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'model.flag'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'label',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'label'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'class',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['radio', 'slider', 'toggle'],
        bindedControllerPropertieName: 'class'
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-ddau-checkbox/settings-example', ['exports', 'ember-flexberry/mixins/flexberry-ddau-checkbox-actions-handler'], function (exports, _flexberryDdauCheckboxActionsHandler) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend(_flexberryDdauCheckboxActionsHandler.default, {
    /**
      Component's wrapper CSS classes.
      @property class
      @type String
    */
    class: '',

    /**
      Text for 'flexberry-ddau-checkbox' 'caption' property.
       @property caption
      @type String
      @default null
    */
    caption: null,

    /**
      Flag: indicates whether 'flexberry-ddau-checkbox' component is in 'readonly' mode or not.
      @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Template text for 'flexberry-ddau-checkbox' component.
      @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    /**
      Component settings metadata.
      @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();

      componentSettingsMetadata.pushObject({
        settingName: 'class',
        settingType: 'enumeration',
        settingAvailableItems: ['radio', 'slider', 'toggle'],
        settingDefaultValue: '',
        bindedControllerPropertieName: 'class'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'boolean',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'model.flag'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'caption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'caption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });

      return componentSettingsMetadata;
    }),

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-ddau-checkbox<br>' + '  class=class<br>' + '  value=model.flag<br>' + '  caption=caption<br>' + '  readonly=readonly<br>' + '  change=(action "onCheckboxChange" "model.flag")<br>' + '}}'));
    }
  });
});
define('dummy/controllers/components-examples/flexberry-dropdown/conditional-render-example', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Message to be displayed in 'ui-message' component.
       @property infoMessage
      @type String
     */
    infoMessage: Ember.computed('i18n.locale', function () {
      var message = this.get('i18n').t('forms.components-examples.flexberry-dropdown.conditional-render-example.info-message', {
        pageTemplate: new Ember.String.htmlSafe('<pre><code>' + '{{#if model.enumeration}}<br>' + '  &lt;span&gt;{{model.enumeration}}&lt;/span&gt;<br>' + '{{else}}<br>' + '  {{flexberry-dropdown<br>' + '    items=(flexberry-enum "components-examples/flexberry-dropdown/conditional-render-example/enumeration")<br>' + '    value=model.enumeration<br>' + '  }}<br>' + '{{/if}}' + '</code></pre>')
      });

      return new Ember.String.htmlSafe(message);
    })
  });
});
define('dummy/controllers/components-examples/flexberry-dropdown/empty-value-example', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({});
});
define('dummy/controllers/components-examples/flexberry-dropdown/items-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Message to be displayed in 'ui-message' component.
    */
    message: undefined,

    /**
      Items. Type array.
    */
    itemsArray: undefined,

    /**
      Items. Type object.
    */
    itemsObject: undefined,

    value: undefined,

    /**
      Flag indicates whether use `itemsArray` or `itemsObject`.
    */
    usedArray: true,

    /**
      Current items in `flexberry-objectlistview`.
    */
    currentItems: Ember.computed('usedArray', function () {
      var usedArray = this.get('usedArray');
      var currentItems = null;

      if (usedArray) {
        currentItems = this.get('itemsArray');
      } else {
        currentItems = this.get('itemsObject');
      }

      return currentItems;
    }),

    init: function init() {
      this._super.apply(this, arguments);
      this.set('message', new Ember.String.htmlSafe('<pre><code>' + '<strong>itemsArray: </strong>' + '["itemsArray1", "itemsArray2", "itemsArray3"]' + '<br><br>' + '<strong>itemsObject:</strong> {<br>' + '  itemsObject1: "itemsObject1",<br>' + '  itemsObject2: "itemsObject2",<br>' + '  itemsObject3: "itemsObject3"<br>' + '}' + '</code></pre>'));
      this.set('itemsArray', ['itemsArray1', 'itemsArray2', 'itemsArray3']);
      this.set('itemsObject', {
        itemsObject1: 'itemsObject1',
        itemsObject2: 'itemsObject2',
        itemsObject3: 'itemsObject3'
      });
    },


    actions: {
      /**
        This action is called when `flexberry-checkox` change its value.
      */
      checked: function checked() {
        var usedArray = this.get('usedArray');
        this.set('usedArray', !usedArray);
      },


      /**
        This action is called when user clicks on reset button.
      */
      resetValue: function resetValue() {
        this.set('value', null);
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-dropdown/settings-example', ['exports', 'dummy/enums/components-examples/flexberry-dropdown/settings-example/enumeration', 'ember-i18n'], function (exports, _enumeration, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Component's wrapper CSS classes.
       @property class
      @type String
    */
    class: '',

    /**
      Text for 'flexberry-dropdown' component 'placeholder' property.
       @property placeholder
      @type String
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-dropdown.placeholder'),

    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-dropdown.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-dropdown.placeholder'));
      }
    }),

    /**
      Flag: indicates whether 'flexberry-dropdown' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Template text for 'flexberry-dropdown' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-dropdown<br>' + '  items=(flexberry-enum "components-examples/flexberry-dropdown/settings-example/enumeration")<br>' + '  value=model.enumeration<br>' + '  placeholder=placeholder<br>' + '  readonly=readonly<br>' + '  class=class<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();
      var enumCaptions = Ember.A(Object.keys(_enumeration.default)).map(function (key) {
        return _enumeration.default[key];
      });

      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'enumeration',
        settingAvailableItems: enumCaptions,
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'model.enumeration'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'placeholder',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-dropdown.placeholder'),
        bindedControllerPropertieName: 'placeholder'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'class',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['scrolling', 'compact', 'fluid'],
        bindedControllerPropertieName: 'class'
      });
      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-field/settings-example', ['exports', 'ember-i18n'], function (exports, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Text for 'flexberry-field' component 'label' property.
       @property label
      @type String
     */
    label: undefined,

    /**
      Text for 'flexberry-field' component 'placeholder' property.
       @property placeholder
      @type String
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-field.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-field.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-field.placeholder'));
      }
    }),
    /**
      Flag: indicates whether 'flexberry-field' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Type of 'flexberry-field' component.
       @property type
      @type String
     */
    type: 'text',

    /**
      Maxlength of 'flexberry-field' component.
       @property maxlength
      @type Number
     */
    maxlength: undefined,

    /**
      Template text for 'flexberry-field' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-field<br>' + '  value=model.text<br>' + '  label=label<br>' + '  placeholder=placeholder<br>' + '  readonly=readonly<br>' + '  type=type<br>' + '  maxlength=maxlength<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'type',
        settingType: 'enumeration',
        settingDefaultValue: 'text',
        settingAvailableItems: ['text', 'number', 'password', 'color', 'button', 'hidden'],
        bindedControllerPropertieName: 'type'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'model.text'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'label',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'label'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'placeholder',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-field.placeholder'),
        bindedControllerPropertieName: 'placeholder'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'maxlength',
        settingType: 'number',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'maxlength'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'class',
        settingType: 'css',
        settingDefaultValue: '',
        bindedControllerPropertieName: 'class',
        settingAvailableItems: ['large', 'labeled-inside']
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-file/flexberry-file-in-modal', ['exports', 'ember-flexberry/controllers/edit-form', 'dummy/config/environment'], function (exports, _editForm, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Defaul style of modal context.
       @property readonly
      @type String
      @default #example
    */
    _style: '#example',

    /**
      File upload URL for 'flexberry-file' component 'uploadUrl' property.
       @property uploadUrl
      @type String
     */
    uploadUrl: _environment.default.APP.components.flexberryFile.uploadUrl,

    /**
      Flag for 'flexberry-file' component 'showPreview' property.
       @property showPreview
      @type Boolean
     */
    showPreview: true,

    /**
      Flag for 'flexberry-file' component 'showUploadButton' property.
       @property showUploadButton
      @type Boolean
     */
    showUploadButton: true,

    /**
      Flag for 'flexberry-file' component 'showDownloadButton' property.
       @property showDownloadButton
      @type Boolean
     */
    showDownloadButton: true,

    /**
      Settings for preview modal dialog.
       @property previewSettings
      @type Object
    */
    previewSettings: Ember.computed(function () {
      return {
        detachable: true,
        context: 'body'
      };
    }),

    actions: {
      modalWindow: function modalWindow(style) {
        if (!Ember.isNone(style)) {
          this.set('_style', style);
        }

        var repeatWindow = Ember.$('.repeat-window').modal({
          closable: false,
          autofocus: false,
          detachable: true,
          allowMultiple: true,
          context: 'body'
        });

        this.set('repeatWindow', repeatWindow);
        this.get('repeatWindow').modal('show').modal('refresh');
      },
      logOut: function logOut() {
        this.get('repeatWindow').modal('hide');
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-file/settings-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n', 'dummy/config/environment'], function (exports, _editForm, _emberI18n, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-file' component 'placeholder' property.
       @property placeholder
      @type String
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-file.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-file.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-file.placeholder'));
      }
    }),
    /**
      Flag: indicates whether 'flexberry-file' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      File upload URL for 'flexberry-file' component 'uploadUrl' property.
       @property uploadUrl
      @type String
     */
    uploadUrl: _environment.default.APP.components.flexberryFile.uploadUrl,

    /**
      Max upload file size (in bytes) for 'flexberry-file' component 'maxUploadFileSize' property.
       @property maxUploadFileSize
      @type Number
     */
    maxUploadFileSize: null,

    /**
      Flag for 'flexberry-file' component 'showPreview' property.
       @property showPreview
      @type Boolean
     */
    showPreview: false,

    /**
      Flag for 'flexberry-file' component 'showUploadButton' property.
       @property showUploadButton
      @type Boolean
     */
    showUploadButton: false,

    /**
      Flag for 'flexberry-file' component 'showDownloadButton' property.
       @property showDownloadButton
      @type Boolean
     */
    showDownloadButton: true,

    /**
      Flag for 'flexberry-file' component 'showModalDialogOnUploadError' property.
       @property showModalDialogOnUploadError
      @type Boolean
     */
    showModalDialogOnUploadError: false,

    /**
      Flag for 'flexberry-file' component 'showModalDialogOnDownloadError' property.
       @property showModalDialogOnDownloadError
      @type Boolean
     */
    showModalDialogOnDownloadError: true,

    /**
      Flag: download by clicking download or open file in new window.
       @property openInNewWindowInsteadOfLoading
      @type Boolean
      @default false
    */
    openFileInNewWindowInsteadOfLoading: false,

    base64Value: null,

    base64FileName: null,

    base64FileExtension: null,

    /**
      Template text for 'flexberry-textbox' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-file<br>' + '  value=model.file<br>' + '  placeholder=placeholder<br>' + '  readonly=readonly<br>' + '  uploadUrl=uploadUrl<br>' + '  maxUploadFileSize=maxUploadFileSize<br>' + '  showPreview=showPreview<br>' + '  showUploadButton=showUploadButton<br>' + '  showDownloadButton=showDownloadButton<br>' + '  showModalDialogOnUploadError=showModalDialogOnUploadError<br>' + '  showModalDialogOnDownloadError=showModalDialogOnDownloadError<br>' + '  inputClass=inputClass<br>' + '  buttonClass=buttonClass<br>' + '  openFileInNewWindowInsteadOfLoading=openFileInNewWindowInsteadOfLoading<br>' + '  base64Value=base64Value<br>' + '  base64FileName=base64FileName<br>' + '  base64FileExtension=base64FileExtension<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'model.file'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'placeholder',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-file.placeholder'),
        bindedControllerPropertieName: 'placeholder'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'uploadUrl',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'uploadUrl'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'maxUploadFileSize',
        settingType: 'number',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'maxUploadFileSize'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showPreview',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showPreview'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showUploadButton',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showUploadButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showDownloadButton',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'showDownloadButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showModalDialogOnUploadError',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showModalDialogOnUploadError'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showModalDialogOnDownloadError',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'showModalDialogOnDownloadError'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'inputClass',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['fluid input', 'transparent input', 'mini input', 'huge input', 'field error'],
        bindedControllerPropertieName: 'inputClass'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'buttonClass',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['purple basic', 'inverted violet', 'green colored', 'mini', 'huge'],
        bindedControllerPropertieName: 'buttonClass'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'openFileInNewWindowInsteadOfLoading',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'openFileInNewWindowInsteadOfLoading'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'base64Value',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'base64Value'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'base64FileName',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'base64FileName'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'base64FileExtension',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'base64FileExtension'
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-groupedit/configurate-row-example', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({

    /**
      Configurate rows 'flexberry-groupedit' component by address.
       @property configurateRowByFlag
      @type String
    */
    configurateRowByFlag: 1,

    /**
      Current records.
       @property _records
      @type Object[]
      @protected
      @readOnly
    */
    records: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('records', []);
    },


    actions: {
      /**
        Configurate rows on the condition.
      */
      configurateRow: function configurateRow(rowConfig, record) {
        if (record) {
          this.get('records').push(record);
        }

        Ember.set(rowConfig, 'canBeDeleted', record.get('flag') !== this.get('configurateRowByFlag'));
      }
    }

  });
});
define('dummy/controllers/components-examples/flexberry-groupedit/custom-buttons-example', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Property to count clicks on user button.
       @property clickCounter
      @type Number
      @default 1
    */
    clickCounter: 1,

    /**
      Property to show user message after click on user button.
       @property messageForUser
      @type String
    */
    messageForUser: undefined,

    /**
      The state of the hi button, is disabled if `true` or enabled if `false`.
       @property hiButtonState
      @type Boolean
      @default true
    */
    hiButtonState: true,

    customButtons: Ember.computed('i18n.locale', 'hiButtonState', function () {
      var i18n = this.get('i18n');
      var hiButtonState = this.get('hiButtonState');
      var togglerButtonType = hiButtonState ? 'enable' : 'disable';
      var hiButtonText = i18n.t('forms.components-examples.flexberry-groupedit.custom-buttons-example.custom-button-name');
      var togglerButtonText = i18n.t('forms.components-examples.flexberry-groupedit.custom-buttons-example.' + togglerButtonType + '-button-name');
      return [{
        buttonName: hiButtonText,
        buttonAction: 'customButtonActionTest',
        buttonClasses: 'test-click-button',
        buttonTitle: hiButtonText,
        disabled: hiButtonState
      }, {
        buttonName: togglerButtonText,
        buttonAction: 'toggleHideCustomButton',
        buttonClasses: 'toggle-hi-button',
        buttonTitle: togglerButtonText,
        disabled: false
      }];
    }),

    /**
      Current records.
       @property _records
      @type Object[]
      @protected
      @readOnly
    */
    records: Ember.A(),

    actions: {
      /**
        Handler for click on custom user button.
         @method actions.customButtonActionTest
      */
      customButtonActionTest: function customButtonActionTest() {
        var i18n = this.get('i18n');
        var clickCounter = this.get('clickCounter');
        this.set('clickCounter', clickCounter + 1);
        this.set('messageForUser', i18n.t('forms.components-examples.flexberry-groupedit.custom-buttons-example.custom-message').string + ' ' + clickCounter);
      },


      /**
        Toggles the state of the hi button.
         @method actions.toggleHideCustomButton
      */
      toggleHideCustomButton: function toggleHideCustomButton() {
        this.toggleProperty('hiButtonState');
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-groupedit-with-lookup-with-computed-atribute', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication', 'ember-flexberry-data/query/predicate'], function (exports, _editForm, _editFormControllerOperationsIndication, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-list'
     */
    parentRoute: 'components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-groupedit-with-lookup-with-computed-atribute',

    /**
      Name of model.comments edit route.
       @property commentsEditRoute
      @type String
      @default 'ember-flexberry-dummy-comment-edit'
     */
    commentsEditRoute: 'ember-flexberry-dummy-comment-edit',

    checkboxValue: false,

    fieldvalue: 'Vasya',

    lookupReadonly: Ember.observer('checkboxValue', function () {
      this.set('lookupDynamicProperties.readonly', this.get('checkboxValue'));
    }),

    lookupLimitFunction: Ember.observer('fieldvalue', function () {
      this.set('lookupDynamicProperties.lookupLimitPredicate', new _predicate.StringPredicate('name').contains(this.get('fieldvalue')));
    }),

    /**
      An object with properties for the component `flexberry-lookup` in the component `flexberry-groupedit`.
       @property lookupDynamicProperties
      @type Object
      @readOnly
    */
    lookupDynamicProperties: Ember.computed(function () {
      var lookupLimitPredicate = void 0;
      var lookupAdditionalLimitFunction = void 0;
      var fieldvalue = this.get('fieldvalue');
      if (fieldvalue) {
        lookupLimitPredicate = new _predicate.StringPredicate('name').contains(fieldvalue);
      }

      lookupAdditionalLimitFunction = function lookupAdditionalLimitFunction(relationModel) {
        return new _predicate.StringPredicate('eMail').contains(relationModel.get('voteType'));
      };

      return {
        choose: 'showLookupDialog',
        remove: 'removeLookupValue',
        displayAttributeName: 'name',
        required: true,
        relationName: 'author',
        projection: 'ApplicationUserL',
        autocomplete: true,
        readonly: this.get('checkboxValue'),
        lookupLimitPredicate: lookupLimitPredicate,
        lookupAdditionalLimitFunction: lookupAdditionalLimitFunction
      };
    }).readOnly(),

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      if (attr.kind === 'belongsTo') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author':
            cellComponent.componentProperties = this.get('lookupDynamicProperties');
            break;

          case 'ember-flexberry-dummy-comment+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

        }
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-readonly-columns-by-configurate-row-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication', 'ember-flexberry-data/query/predicate'], function (exports, _editForm, _editFormControllerOperationsIndication, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-list'
     */
    parentRoute: 'components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-readonly-columns-by-configurate-row-example',

    /**
      Name of model.comments edit route.
       @property commentsEditRoute
      @type String
      @default 'ember-flexberry-dummy-comment-edit'
     */
    commentsEditRoute: 'ember-flexberry-dummy-comment-edit',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      var limitFunction = new _predicate.StringPredicate('name').contains('Vasya');
      if (attr.kind === 'belongsTo') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true,
              lookupLimitPredicate: limitFunction,
              computedProperties: { thisController: this },
              readonly: false
            };
            break;

          case 'ember-flexberry-dummy-comment+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

        }
      }

      return cellComponent;
    },


    actions: {
      configurateFilesRow: function configurateFilesRow(rowConfig, record) {
        Ember.set(rowConfig, 'customClass', 'positive ');
        var readonlyColumns = [];
        if (record.get('order') === 1) {
          readonlyColumns.push('order');
          readonlyColumns.push('file');
        }

        Ember.set(rowConfig, 'readonlyColumns', readonlyColumns);
      },
      configurateVotesRow: function configurateVotesRow(rowConfig, record) {
        var readonlyColumns = [];
        if (record.get('author.name') === 'Иван') {
          readonlyColumns.push('author');
        }

        Ember.set(rowConfig, 'readonlyColumns', readonlyColumns);
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-groupedit-with-lookup-with-computed-atribute', ['exports', 'ember-flexberry/controllers/list-form', 'dummy/mixins/list-form-controller-operations-indication'], function (exports, _listForm, _listFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormControllerOperationsIndication.default, {
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-edit'
     */
    editFormRoute: 'components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-groupedit-with-lookup-with-computed-atribute',

    exportExcelProjection: 'SuggestionL'
  });
});
define('dummy/controllers/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-readonly-columns-by-configurate-row-example', ['exports', 'ember-flexberry/controllers/list-form', 'dummy/mixins/list-form-controller-operations-indication'], function (exports, _listForm, _listFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormControllerOperationsIndication.default, {
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-edit'
     */
    editFormRoute: 'components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-readonly-columns-by-configurate-row-example',

    exportExcelProjection: 'SuggestionL'
  });
});
define('dummy/controllers/components-examples/flexberry-groupedit/model-update-example', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Counter to mark created records.
       @property _itemsCounter
      @private
      @type Number
      @default 0
    */
    _itemsCounter: 0,

    /**
      Flag indicates that component have to check on model changes and display it.
       @property searchForContentChange
      @type Boolean
      @default true
    */
    searchForContentChange: true,

    actions: {
      /**
        Adds detail to the end of the array.
         @method actions.addDetail.
      */
      addDetail: function addDetail() {
        var store = this.get('store');
        var itemsCounter = this.get('_itemsCounter') + 1;
        var detailModel = this.get('model.details');
        var newRecord = store.createRecord('components-examples/flexberry-groupedit/shared/detail', {
          text: itemsCounter
        });

        detailModel.addObject(newRecord);
        this.set('_itemsCounter', itemsCounter);
      },


      /**
        Removes first element of the detail array.
         @method actions.deleteDetail.
      */
      deleteDetail: function deleteDetail() {
        var recordToDelete = this.get('model.details').get('firstObject');
        if (recordToDelete) {
          recordToDelete.deleteRecord();
        }
      }
    },

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
    */
    getCellComponent: function getCellComponent(attr, bindingPath) {
      var cellComponent = this._super.apply(this, arguments);

      if (attr.kind === 'belongsTo' && bindingPath === 'master') {
        cellComponent.componentProperties = {
          projection: 'MasterL',
          displayAttributeName: 'text',
          title: 'Master',
          relationName: 'master',
          choose: 'showLookupDialog',
          remove: 'removeLookupValue'
        };
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-groupedit/settings-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of selected detail's model projection.
       @property _detailsProjectionName
      @type String
      @private
     */
    _detailsProjectionName: 'DetailE',

    /**
      Array of available detail's model projections.
       @property _detailsProjections
      @type Object[]
     */
    _detailsProjections: Ember.computed('model.details.relationship.belongsToType', function () {
      var detailsModelName = this.get('model.details.relationship.belongsToType');
      var detailsClass = Ember.getOwner(this).factoryFor('model:' + detailsModelName).class;

      return Ember.get(detailsClass, 'projections');
    }),

    /**
      Array of available detail's model projections names.
       @property _detailsProjectionsNames
      @type String[]
     */
    _detailsProjectionsNames: Ember.computed('_detailsProjections.[]', function () {
      var detailsProjections = this.get('_detailsProjections');
      if (Ember.isNone(detailsProjections)) {
        return [];
      }

      var detailsProjectionNames = Object.keys(detailsProjections);
      detailsProjectionNames.splice(detailsProjectionNames.indexOf('modelName'), 1);
      return detailsProjectionNames;
    }),

    /**
      Model projection for 'flexberry-groupedit' component 'modelProjection' property.
       @property detailsProjection
      @type Object
     */
    detailsProjection: Ember.computed('_detailsProjections.[]', '_detailsProjectionName', function () {
      var detailsProjectionName = this.get('_detailsProjectionName');
      if (Ember.isBlank(detailsProjectionName)) {
        return null;
      }

      var detailsModelName = this.get('model.details.relationship.belongsToType');
      var detailsClass = Ember.getOwner(this).factoryFor('model:' + detailsModelName).class;
      var detailsClassProjections = Ember.get(detailsClass, 'projections');
      if (Ember.isNone(detailsClassProjections)) {
        return null;
      }

      return detailsClassProjections[detailsProjectionName];
    }),

    /**
      Text for 'flexberry-groupedit' component 'placeholder' property.
       @property placeholder
      @type String
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-groupedit.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-groupedit.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-groupedit.placeholder'));
      }
    }),
    /**
      Flag: indicates whether 'flexberry-groupedit' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Flag: indicates whether to show default settings button at toolbar.
       @property defaultSettingsButton
      @type Boolean
      @default false
     */
    defaultSettingsButton: false,

    /**
      Flag for 'flexberry-groupedit' component 'tableStriped' property.
       @property tableStriped
      @type Boolean
     */
    tableStriped: true,

    /**
      Flag for 'flexberry-groupedit' component 'createNewButton' property.
       @property createNewButton
      @type Boolean
     */
    createNewButton: true,

    /**
      Flag for 'flexberry-groupedit' component 'deleteButton' property.
       @property deleteButton
      @type Boolean
     */
    deleteButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'defaultSortingButton' mode or not
       @property defaultSortingButton
      @type Boolean
      @default true
    */
    defaultSortingButton: true,

    /**
      Flag indicates whether to fix the table head (if `true`) or not (if `false`).
       @property fixedHeader
      @type Boolean
      @default true
    */
    fixedHeader: false,

    /**
      Flag for 'flexberry-groupedit' component 'allowColumnResize' property.
       @property allowColumnResize
      @type Boolean
     */
    allowColumnResize: true,

    /**
      Flag for 'flexberry-groupedit' component 'showAsteriskInRow' property.
       @property showAsteriskInRow
      @type Boolean
     */
    showAsteriskInRow: true,

    /**
      Flag for 'flexberry-groupedit' component 'showCheckBoxInRow' property.
       @property showCheckBoxInRow
      @type Boolean
     */
    showCheckBoxInRow: true,

    /**
      Flag for 'flexberry-groupedit' component 'showDeleteButtonInRow' property.
       @property showDeleteButtonInRow
      @type Boolean
     */
    showDeleteButtonInRow: false,

    /**
      Flag for 'flexberry-groupedit' component 'showDeleteButtonInRow' property.
       @property showDeleteButtonInRow
      @type Boolean
     */
    showEditMenuItemInRow: false,

    /**
      Flag for 'flexberry-groupedit' component 'showDeleteButtonInRow' property.
       @property showDeleteButtonInRow
      @type Boolean
     */
    showDeleteMenuItemInRow: false,

    /**
      Text for 'flexberry-groupedit' component 'singleColumnHeaderTitle' property.
       @property singleColumnHeaderTitle
      @type Boolean
     */
    singleColumnHeaderTitle: undefined,

    /**
      Flag for 'flexberry-groupedit' component 'rowClickable' property.
       @property rowClickable
      @type Boolean
     */
    rowClickable: false,

    /**
      Flag for 'flexberry-groupedit' component 'immediateDelete' property.
       @property immediateDelete
      @type Boolean
     */
    immediateDelete: false,

    /**
      Template text for 'flexberry-groupedit' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-groupedit<br>' + '  componentName="aggregatorDetailsGroupedit"<br>' + '  content=model.details<br>' + '  modelProjection=detailsProjection<br>' + '  placeholder=placeholder<br>' + '  readonly=readonly<br>' + '  tableStriped=tableStriped<br>' + '  createNewButton=createNewButton<br>' + '  deleteButton=deleteButton<br>' + '  defaultSortingButton=defaultSortingButton<br>' + '  allowColumnResize=allowColumnResize<br>' + '  showAsteriskInRow=showAsteriskInRow<br>' + '  showCheckBoxInRow=showCheckBoxInRow<br>' + '  showDeleteButtonInRow=showDeleteButtonInRow<br>' + '  showEditMenuItemInRow=showEditMenuItemInRow<br>' + '  showDeleteMenuItemInRow=showDeleteMenuItemInRow<br>' + '  singleColumnHeaderTitle=singleColumnHeaderTitle<br>' + '  rowClickable=rowClickable<br>' + '  immediateDelete=immediateDelete<br>' + '  defaultSettingsButton=defaultSettingsButton<br>' + '  fixedHeader=fixedHeader<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();

      componentSettingsMetadata.pushObject({
        settingName: 'componentName',
        settingType: 'string',
        settingValue: 'aggregatorDetailsGroupedit',
        settingDefaultValue: undefined,
        settingIsWithoutUI: true
      });
      componentSettingsMetadata.pushObject({
        settingName: 'content',
        settingType: 'hasManyArray',
        settingValue: this.get('model.details'),
        settingDefaultValue: null,
        settingIsWithoutUI: true,
        bindedControllerPropertieName: 'model.details'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'modelProjection',
        settingType: 'enumeration',
        settingAvailableItems: this.get('_detailsProjectionsNames'),
        settingDefaultValue: null,
        bindedControllerPropertieName: '_detailsProjectionName',
        bindedControllerPropertieDisplayName: 'detailsProjection'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'placeholder',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-groupedit.placeholder'),
        bindedControllerPropertieName: 'placeholder'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'tableStriped',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'tableStriped'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'createNewButton',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'createNewButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'deleteButton',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'deleteButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'allowColumnResize',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'allowColumnResize'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showAsteriskInRow',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'showAsteriskInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showCheckBoxInRow',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'showCheckBoxInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showDeleteButtonInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showDeleteButtonInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'defaultSortingButton',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'defaultSortingButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showEditMenuItemInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showEditMenuItemInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showDeleteMenuItemInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showDeleteMenuItemInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'singleColumnHeaderTitle',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'singleColumnHeaderTitle'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'rowClickable',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'rowClickable'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'immediateDelete',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'immediateDelete'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'defaultSettingsButton',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'defaultSettingsButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'fixedHeader',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'fixedHeader'
      });

      return componentSettingsMetadata;
    }),

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath) {
      var cellComponent = this._super.apply(this, arguments);

      if (attr.kind === 'belongsTo' && bindingPath === 'master') {
        cellComponent.componentProperties = {
          componentName: 'GroupEditSettingExampleMaster',
          projection: 'MasterL',
          displayAttributeName: 'text',
          title: 'Master',
          relationName: 'master',
          choose: 'showLookupDialog',
          remove: 'removeLookupValue'
        };
      }

      return cellComponent;
    },

    /**
      Lookup events service.
    */
    lookupEvents: Ember.inject.service('lookup-events'),

    actions: {
      /**
        Handles click on lookup's choose button.
      */
      showLookupDialog: function showLookupDialog() {
        // Create new master & add to model.
        var master = this.get('store').createRecord('components-examples/flexberry-groupedit/shared/master', { text: 'Master text' });
        var deteils = this.get('model.details');

        deteils.forEach(function (item) {
          item.set('master', master);
        });

        this.get('lookupEvents').lookupDialogOnHiddenTrigger('GroupEditSettingExampleMaster');
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/autocomplete-order-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-lookup.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'));
      }
    }),
    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Master',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/autofill-by-limit-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry-data/query/predicate', 'ember-flexberry-data/query/filter-operator'], function (exports, _editForm, _predicate, _filterOperator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({

    /**
      Current predicate to limit values for lookup.
       @property limitValue
      @type BasePredicate
      @default undefined
     */
    limitValue: undefined,

    /**
      Indicates when limit predicate is enabled.
       @property limitEnabled
      @type Boolean
      @default true
     */
    limitEnabled: true,

    /**
      Current readonly property value.
       @property readonly
      @type Boolean
      @default false
     */
    readonly: false,

    /**
      Current autofillByLimit property value.
       @property autofillByLimit
      @type Boolean
      @default true
     */
    autofillByLimit: true,

    /**
      Current predicate to limit accessible values for lookup.
       @property lookupCustomLimitPredicate
      @type BasePredicate
      @default undefined
     */
    lookupCustomLimitPredicate: Ember.computed('limitEnabled', function () {
      if (!this.get('limitEnabled')) {
        return undefined;
      }

      var limitValue = this.get('limitValue');

      return new _predicate.SimplePredicate('id', _filterOperator.default.Eq, limitValue.get('id'));
    }),

    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
    */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'autofillByLimit',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'autofillByLimit'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'limitEnabled',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'limitEnabled'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-application-user-list'
     */
    parentRoute: 'compute-autocomplete-list',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);

      if (attr.kind === 'belongsTo') {
        if (model.modelName === 'ember-flexberry-dummy-localized-suggestion-type' && bindingPath === 'localization') {
          cellComponent.componentProperties = {
            projection: 'LocalizationL',
            displayAttributeName: 'name',
            title: 'Localization',
            relationName: 'localization',
            choose: 'showLookupDialog',
            remove: 'removeLookupValue'
          };
        }
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-list', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-type-edit'
     */
    editFormRoute: 'components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-edit',

    exportExcelProjection: 'SuggestionTypeEWithComputedField'
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/customizing-window-example', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    actions: {
      /**
        This method returns custom properties for lookup window.
        @method getLookupFolvProperties
         @param {Object} options Parameters of lookup that called this method.
        @param {String} [options.projection] Lookup projection.
        @param {String} [options.relationName] Lookup relation name.
        @return {Object} Set of options for lookup window.
       */
      getLookupFolvProperties: function getLookupFolvProperties(options) {
        var methodArgs = Ember.merge({
          projection: undefined,
          relationName: undefined
        }, options);

        if (methodArgs.relationName === 'type') {
          return {
            filterButton: true
          };
        }

        return undefined;
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/default-ordering-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/utils/serialize-sorting-param', 'ember-i18n'], function (exports, _editForm, _serializeSortingParam, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    lookupComponentName: 'lookupUserSettings',

    actions: {
      /**
        This method returns custom properties for lookup window.
         @method getLookupFolvProperties
        @param {Object} options Parameters of lookup that called this method.
        @param {String} [options.projection] Lookup projection.
        @param {String} [options.relationName] Lookup relation name.
        @return {Object} Set of options for lookup window.
       */
      getLookupFolvProperties: function getLookupFolvProperties(options) {
        var _this = this;

        var methodArgs = Ember.merge({
          projection: undefined,
          relationName: undefined
        }, options);

        if (methodArgs.relationName === 'type') {
          return {
            filterButton: true,
            customButtons: [{
              i18n: this.get('i18n'),
              buttonName: (0, _emberI18n.translationMacro)('components.olv-toolbar.clear-sorting-button-text'),
              buttonAction: function buttonAction() {
                var defaultUserSetting = _this.get('userSettingsService').getDefaultDeveloperUserSetting(_this.get('lookupComponentName'));
                _this.set('lookupController.sort', (0, _serializeSortingParam.default)(defaultUserSetting.sorting || []));
              }
            }]
          };
        }

        return undefined;
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/dropdown-mode-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry-data/query/predicate'], function (exports, _editForm, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Current predicate to limit accessible values for lookup in dropdown mode.
       @property lookupCustomLimitPredicate
      @type StringPredicate
    */
    lookupCustomLimitPredicate: Ember.computed(function () {
      return new _predicate.StringPredicate('name').contains('Type');
    })
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/hierarchy-olv-in-lookup-example', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    actions: {
      /**
        This method returns custom properties for lookup window.
         @method getLookupFolvProperties
        @param {Object} options Parameters of lookup that called this method.
        @param {String} [options.projection] Lookup projection.
        @param {String} [options.relationName] Lookup relation name.
        @return {Object} Set of options for lookup window.
       */
      getLookupFolvProperties: function getLookupFolvProperties(options) {
        var methodArgs = Ember.merge({
          projection: undefined,
          relationName: undefined,
          componentName: undefined
        }, options);

        if (methodArgs.relationName === 'type') {
          if (methodArgs.componentName === 'HierarchyLookup') {
            return {
              modelName: 'ember-flexberry-dummy-suggestion-type',
              modelProjection: 'SettingLookupExampleView',
              inHierarchicalMode: true,
              hierarchicalAttribute: 'parent'
            };
          }

          if (methodArgs.componentName === 'NoHierarchyLookup') {
            return {
              modelName: 'ember-flexberry-dummy-suggestion-type',
              modelProjection: 'SettingLookupExampleView',
              inHierarchicalMode: false,
              hierarchicalAttribute: 'parent'
            };
          }

          if (methodArgs.componentName === 'DisabledHierarchyLookup') {
            return {
              disableHierarchicalMode: true,
              modelName: 'ember-flexberry-dummy-suggestion-type',
              modelProjection: 'SettingLookupExampleView',
              inHierarchicalMode: false,
              hierarchicalAttribute: 'parent'
            };
          }
        }

        return undefined;
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/limit-function-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry-data/query/predicate'], function (exports, _editForm, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Current predicate to limit accessible values for lookup.
       @property lookupCustomLimitPredicate
      @type BasePredicate
      @default undefined
     */
    lookupCustomLimitPredicate: Ember.computed('model.type', function () {
      var currentLookupValue = this.get('model.type');
      if (currentLookupValue) {
        var currentLookupText = this.get('model.type.name');
        return new _predicate.StringPredicate('name').contains(currentLookupText);
      }

      return undefined;
    }),

    actions: {
      /**
        This method returns custom properties for lookup window.
         @method getLookupFolvProperties
        @param {Object} options Parameters of lookup that called this method.
        @param {String} [options.projection] Lookup projection.
        @param {String} [options.relationName] Lookup relation name.
        @return {Object} Set of options for lookup window.
       */
      getLookupFolvProperties: function getLookupFolvProperties(options) {
        var methodArgs = Ember.merge({
          projection: undefined,
          relationName: undefined
        }, options);

        if (methodArgs.relationName === 'type') {
          return {
            filterButton: true
          };
        }

        return undefined;
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/limit-function-through-dynamic-properties-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry-data/query/predicate'], function (exports, _editForm, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Object containing dynamic properties that must be assigned to
      component using {{#crossLink "DynamicPropertiesMixin"}}dynamic-properties mixin{{/crossLink}}.
       @property dynamicProperties
      @type Object
      @default undefined
    */
    dynamicProperties: undefined,

    /**
      Current predicate to limit accessible values for lookup.
       @property firstLimitType
      @type BasePredicate
      @default undefined
     */
    firstLimitType: undefined,

    /**
      Current predicate to limit accessible values for lookup.
       @property secondLimitType
      @type BasePredicate
      @default undefined
     */
    secondLimitType: undefined,

    lookupCustomLimitPredicate: undefined,

    actions: {

      /**
        This method set dynamicProperties.lookupLimitPredicate for lookup window.
         @method firstLimitFunction
       */
      firstLimitFunction: function firstLimitFunction() {
        var currentLookupValue = this.get('firstLimitType');
        var limitFunction = new _predicate.StringPredicate('name').contains(currentLookupValue);
        this.set('dynamicProperties.lookupLimitPredicate', limitFunction);
      },


      /**
        This method set dynamicProperties.lookupLimitPredicate for lookup window.
         @method secondLimitFunction
       */
      secondLimitFunction: function secondLimitFunction() {
        var currentLookupValue = this.get('secondLimitType');
        var limitFunction = new _predicate.StringPredicate('name').contains(currentLookupValue);
        this.set('dynamicProperties.lookupLimitPredicate', limitFunction);
      },


      /**
        This method set dynamicProperties.lookupLimitPredicate for lookup window.
         @method clearLimitFunction
       */
      clearLimitFunction: function clearLimitFunction() {
        this.set('dynamicProperties.lookupLimitPredicate', undefined);
      }
    },

    /**
      Set limit accessible values for lookup.
       @method init
     */
    init: function init() {
      this._super.apply(this, arguments);
      this.set('dynamicProperties', {
        lookupLimitPredicate: null
      });
      this.set('firstLimitType', this.get('controller.firstLimitType'));
      this.set('secondLimitType', this.get('controller.secondLimitType'));
    }
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/lookup-block-form-example', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({});
});
define('dummy/controllers/components-examples/flexberry-lookup/lookup-in-modal', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Defaul style of modal context.
       @property readonly
      @type String
      @default #example
    */
    _style: '#example',

    actions: {
      modalWindow: function modalWindow(style) {
        if (!Ember.isNone(style)) {
          this.set('_style', style);
        }

        var repeatWindow = Ember.$('.repeat-window').modal({
          closable: false,
          autofocus: false,
          detachable: false,
          allowMultiple: true,
          context: this.get('_style')
        });
        this.set('repeatWindow', repeatWindow);
        this.get('repeatWindow').modal('show').modal('refresh');
      },
      modalWindowDouble: function modalWindowDouble(style) {
        if (!Ember.isNone(style)) {
          this.set('_style', style);
        }

        var repeatWindow = Ember.$('.repeat-window-double').modal({
          closable: false,
          autofocus: false,
          detachable: false,
          allowMultiple: true,
          context: this.get('_style')
        });
        this.set('repeatWindowdouble', repeatWindow);
        this.get('repeatWindowdouble').modal('show').modal('refresh');
      },
      logOut: function logOut() {
        this.get('repeatWindow').modal('hide');
      },
      logOutDouble: function logOutDouble() {
        this.get('repeatWindowdouble').modal('hide');
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-lookup/numeric-autocomplete', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {});
});
define('dummy/controllers/components-examples/flexberry-lookup/settings-example', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-i18n'], function (exports, _editForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property placeholder
      @type String
      @default 't('components.flexberry-lookup.placeholder')'
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-lookup.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-lookup.placeholder'));
      }
    }),
    /**
      Flag indicates whether 'flexberry-lookup' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
    */
    readonly: false,

    /**
      Text for 'flexberry-lookup' component 'placeholder' property.
       @property title
      @type String
      @default 'Master'
    */
    title: 'Master',

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocomplete' mode or not.
       @property autocomplete
      @type Boolean
      @default false
    */
    autocomplete: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'autocompletePersistValue' mode or not.
       @property autocompletePersistValue
      @type Boolean
      @default false
    */
    autocompletePersistValue: false,

    /**
      Flag indicates whether 'flexberry-lookup' component is in 'dropdown' mode or not.
       @property dropdown
      @type Boolean
      @default false
    */
    dropdown: false,

    /**
      Flag indicates whether 'flexberry-lookup' component  in 'dropdown' mode is search.
       @property dropdownIsSearch
      @type Boolean
      @default false
    */
    dropdownIsSearch: false,

    /**
      Content for 'flexberry-lookup' component 'chooseText' property.
       @property chooseText
      @type String
      @default '<i class="remove icon"></i>'
    */
    chooseText: '<i class="change icon"></i>',

    /**
      Content for 'flexberry-lookup' component 'removeText' property.
       @property removeText
      @type String
      @default '<i class="remove icon"></i>'
    */
    removeText: '<i class="remove icon"></i>',

    /**
      Text for 'flexberry-lookup' component 'chooseButtonClass' property.
       @property chooseButtonClass
      @type String
      @default 'purple'
    */
    chooseButtonClass: '',

    /**
      Text for 'flexberry-lookup' component 'dropdownClass' property.
       @property dropdownClass
      @type String
      @default 'blue'
    */
    dropdownClass: '',

    /**
      Text for 'flexberry-lookup' component 'removeButtonClass' property.
       @property removeButtonClass
      @type String
      @default 'olive'
    */
    removeButtonClass: '',

    /**
      Flag to show in lookup preview button.
       @property showPreviewButton
      @type Boolean
      @default false
    */
    showPreviewButton: false,

    /**
      Flag to show the selected object in separate route.
       @property previewOnSeparateRoute
      @type Boolean
      @default false
    */
    previewOnSeparateRoute: false,

    /**
      If `true`, page switching buttons will be available in the results for autocomplete.
       @property usePaginationForAutocomplete
      @type Boolean
      @default false
    */
    usePaginationForAutocomplete: false,

    /**
      Max number of the results for autocomplete.
       @property maxResults
      @type Integer
      @default 10
    */
    maxResults: 10,

    /**
      Template text for 'flexberry-lookup' component.
       @property componentTemplateText
      @type String
    */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-lookup<br>' + '  placeholder=placeholder<br>' + '  readonly=readonly<br>' + '  value=model.type<br>' + '  projection="SettingLookupExampleView"<br>' + '  displayAttributeName="name"<br>' + '  title="Master"<br>' + '  relatedModel=model<br>' + '  relationName="type"<br>' + '  choose=(action "showLookupDialog")<br>' + '  remove=(action "removeLookupValue")<br>' + '  autocomplete=autocomplete<br>' + '  autocompletePersistValue=autocompletePersistValue<br>' + '  usePaginationForAutocomplete=usePaginationForAutocomplete<br>' + '  maxResults=maxResults<br>' + '  displayValue=model.lookupDisplayValue<br>' + '  dropdown=dropdown<br>' + '  dropdownIsSearch=dropdownIsSearch<br>' + '  chooseText=chooseText<br>' + '  removeText=removeText<br>' + '  chooseButtonClass=chooseButtonClass<br>' + '  removeButtonClass=removeButtonClass<br>' + '  showPreviewButton=showPreviewButton<br>' + '  previewOnSeparateRoute=previewOnSeparateRoute<br>' + '  previewFormRoute="ember-flexberry-dummy-suggestion-type-edit"<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
    */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'placeholder',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-lookup.placeholder'),
        bindedControllerPropertieName: 'placeholder'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'title',
        settingType: 'string',
        settingDefaultValue: 'Master',
        bindedControllerPropertieName: 'title'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'autocomplete',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'autocomplete'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'autocompletePersistValue',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'autocompletePersistValue'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'usePaginationForAutocomplete',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'usePaginationForAutocomplete'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'maxResults',
        settingType: 'number',
        settingDefaultValue: 10,
        bindedControllerPropertieName: 'maxResults'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'dropdown',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'dropdown'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'dropdownIsSearch',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'dropdownIsSearch'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'chooseText',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-lookup.choose-button-text'),
        bindedControllerPropertieName: 'chooseText'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'removeText',
        settingType: 'string',
        settingDefaultValue: '<i class="remove icon"></i>',
        bindedControllerPropertieName: 'removeText'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'chooseButtonClass',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['blue basic', 'positive', 'teal colored'],
        bindedControllerPropertieName: 'chooseButtonClass'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'removeButtonClass',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['purple basic', 'negative', 'yellow colored'],
        bindedControllerPropertieName: 'removeButtonClass'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'dropdownClass',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['blue'],
        bindedControllerPropertieName: 'dropdownClass'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showPreviewButton',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showPreviewButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'previewOnSeparateRoute',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'previewOnSeparateRoute'
      });
      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-menu/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  exports.default = Ember.Controller.extend({
    actions: {
      onMenuItemClick: function onMenuItemClick(e) {
        var clickedMenu = Ember.$(e.delegateTarget);
        var clickedMenuItem = Ember.$(e.currentTarget);
        if (e.currentTarget) {
          this.set('currentItem', clickedMenuItem.data('flexberry-menuitem.item'));
        } else {
          var selectMenu = Ember.$.trim(e.delegateTarget.innerText);
          var selectValue = void 0;
          if (selectMenu === this.get('i18n').t('forms.components-examples.flexberry-menu.settings-example.titleIcon1').toString()) {
            selectValue = 'itemsLeft';
          }

          if (selectMenu === this.get('i18n').t('forms.components-examples.flexberry-menu.settings-example.titleIcon2').toString()) {
            selectValue = 'itemsRight';
          }

          if (selectMenu === this.get('i18n').t('forms.components-examples.flexberry-menu.settings-example.titleIcon3').toString()) {
            selectValue = 'itemsSubmenu';
          }

          if (selectValue) {
            var selectElement = this.get(selectValue)[0];
            this.set('currentItem', selectElement);
          }
        }

        clickedMenu.popup({
          content: 'This menu item has been clicked',
          position: 'top right',
          color: 'teal',
          delay: {
            show: 0,
            hide: 200
          },
          on: 'manual',
          onHidden: function onHidden(e) {
            var owner = Ember.$(e);
            owner.popup('destroy');
          }
        });

        clickedMenu.popup('show');

        window.setTimeout(function () {
          clickedMenu.popup('hide');
        }.bind(this), 3000);
      }
    },

    /**
      Menu items for 'flexberry-menu' component.
       @property items
      @type Object
    */
    items: null,

    /**
      Selected menu item for 'flexberry-menu' component.
       @property currentItem
      @type Object
    */
    currentItem: null,

    /**
      @property collapseMenuOnItemClick
      @type Boolean
      @default true
    */
    collapseMenuOnItemClick: true,

    /**
      @property isVertical
      @type Boolean
      @default false
    */
    isVertical: false,

    /**
      Template text for 'flexberry-menu' component.
       @property componentTemplateText
      @type String
    */
    componentTemplateText: undefined,

    /**
      Initializes controller.
       @method init
    */
    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-menu<br>' + '  placeholder=placeholder<br>' + '  class="compact"<br>' + '  items=items<br>' + '  collapseMenuOnItemClick=collapseMenuOnItemClick<br>' + '  onItemClick=(action "onMenuItemClick")<br>' + '}}'));

      var i18n = this.get('i18n');
      var itemsLeft = [{
        icon: 'search icon',
        title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'),
        items: null
      }];

      var itemsRight = [{
        icon: 'setting icon',
        iconAlignment: 'right',
        title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon2'),
        items: null
      }];

      var itemsSubmenu = [{
        icon: 'list layout icon',
        title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon3'),
        itemsAlignment: null,
        items: [{
          icon: 'search icon',
          title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'),
          items: null
        }, {
          icon: 'setting icon',
          iconAlignment: 'right',
          title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon2'),
          items: null
        }, {
          icon: 'list layout icon',
          title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon3'),
          itemsAlignment: 'left',
          items: [{
            icon: 'search icon',
            title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'),
            items: null
          }, {
            icon: 'setting icon',
            iconAlignment: 'right',
            title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon2'),
            items: null
          }, {
            icon: 'list layout icon',
            title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon3'),
            itemsAlignment: 'right',
            items: [{
              icon: 'search icon',
              title: i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'),
              items: null
            }]
          }]
        }]
      }];

      this.set('itemsLeft', itemsLeft);
      this.set('itemsRight', itemsRight);
      this.set('itemsSubmenu', itemsSubmenu);
    },


    /**
      Handles changes in i18n.locale.
       @method _menuTitle
      @private
     */
    _menuTitle: Ember.observer('i18n.locale', function () {
      var i18n = this.get('i18n');
      if (_typeof(this.get('itemsLeft.0.title')) === 'object') {
        this.set('itemsLeft.0.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'));
      }

      if (_typeof(this.get('itemsRight.0.title')) === 'object') {
        this.set('itemsRight.0.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon2'));
      }

      if (_typeof(this.get('itemsSubmenu.0.title')) === 'object') {
        this.set('itemsSubmenu.0.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon3'));
      }

      if (_typeof(this.get('itemsSubmenu.0.items.0.title')) === 'object') {
        this.set('itemsSubmenu.0.items.0.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'));
      }

      if (_typeof(this.get('itemsSubmenu.0.items.1.title')) === 'object') {
        this.set('itemsSubmenu.0.items.1.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon2'));
      }

      if (_typeof(this.get('itemsSubmenu.0.items.2.title')) === 'object') {
        this.set('itemsSubmenu.0.items.2.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon3'));
      }

      if (_typeof(this.get('itemsSubmenu.0.items.2.items.0.title')) === 'object') {
        this.set('itemsSubmenu.0.items.2.items.0.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'));
      }

      if (_typeof(this.get('itemsSubmenu.0.items.2.items.1.title')) === 'object') {
        this.set('itemsSubmenu.0.items.2.items.1.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon2'));
      }

      if (_typeof(this.get('itemsSubmenu.0.items.2.items.2.title')) === 'object') {
        this.set('itemsSubmenu.0.items.2.items.2.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon3'));
      }

      if (_typeof(this.get('itemsSubmenu.0.items.2.items.2.items.0.title')) === 'object') {
        this.set('itemsSubmenu.0.items.2.items.2.items.0.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'));
      }
    }),

    /**
      Handles changes in currentItem.title.
       @method _titleChanged
      @private
     */
    _titleChanged: Ember.observer('currentItem.title', function () {
      var i18n = this.get('i18n');
      if (this.get('currentItem.title') === this.get('i18n').t('forms.components-examples.flexberry-menu.settings-example.titleIcon1').toString()) {
        this.set('currentItem.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon1'));
      }

      if (this.get('currentItem.title') === this.get('i18n').t('forms.components-examples.flexberry-menu.settings-example.titleIcon2').toString()) {
        this.set('currentItem.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon2'));
      }

      if (this.get('currentItem.title') === this.get('i18n').t('forms.components-examples.flexberry-menu.settings-example.titleIcon3').toString()) {
        this.set('currentItem.title', i18n.t('forms.components-examples.flexberry-menu.settings-example.titleIcon3'));
      }
    }),

    menuPosition: Ember.computed('isVertical', function () {
      var isVertical = this.get('isVertical');
      if (isVertical === true) {
        return 'ui basic vertical buttons';
      } else {
        return 'ui basic buttons';
      }
    }),

    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
    */
    componentSettingsMetadata: Ember.computed(function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'icon',
        settingType: 'enumeration',
        settingDefaultValue: 'undefined',
        settingAvailableItems: ['search icon', 'bordered setting icon', 'inverted teal paw icon', 'big green tree icon', 'circular small record icon', 'olive list layout icon'],
        bindedControllerPropertieName: 'currentItem.icon'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'iconAlignment',
        settingType: 'enumeration',
        settingDefaultValue: 'undefined',
        settingAvailableItems: ['left', 'right'],
        bindedControllerPropertieName: 'currentItem.iconAlignment'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'title',
        settingType: 'string',
        settingDefaultValue: 'undefined',
        bindedControllerPropertieName: 'currentItem.title'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'itemsAlignment',
        settingType: 'enumeration',
        settingDefaultValue: 'undefined',
        settingAvailableItems: ['left', 'right'],
        bindedControllerPropertieName: 'currentItem.itemsAlignment'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'collapseMenuOnItemClick',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'collapseMenuOnItemClick'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'isVertical',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'isVertical'
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-cancel', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Parameter for use in the test beforeDeleteRecord.
       @property recordWasNotDelete
      @type bool
      @default false
     */
    recordWasNotDelete: false,

    actions: {
      beforeDeleteRecord: function beforeDeleteRecord(record, data) {
        this.set('recordWasNotDelete', !record.get('isDeleted'));
        data.cancel = true;
        return;
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-immediately', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Parameter for use in the test beforeDeleteRecord.
       @property recordWasNotDelete
      @type bool
      @default false
     */
    recordWasNotDelete: false,

    actions: {
      beforeDeleteRecord: function beforeDeleteRecord(record, data) {
        this.set('recordWasNotDelete', !record.get('isDeleted'));
        data.immediately = false;
        return;
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-cancel', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Parameter for use in the test beforeDeleteRecord.
       @property recordWasNotDelete
      @type bool
      @default false
     */
    recordWasNotDelete: false,

    actions: {
      beforeDeleteRecord: function beforeDeleteRecord(record, data) {
        var _this = this;

        return new Ember.RSVP.Promise(function (resolve) {
          _this.set('recordWasNotDelete', !record.get('isDeleted'));
          data.cancel = true;
          resolve();
        });
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-immediately', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Parameter for use in the test beforeDeleteRecord.
       @property recordWasNotDelete
      @type bool
      @default false
     */
    recordWasNotDelete: false,

    actions: {
      beforeDeleteRecord: function beforeDeleteRecord(record, data) {
        var _this = this;

        return new Ember.RSVP.Promise(function (resolve) {
          _this.set('recordWasNotDelete', !record.get('isDeleted'));
          data.immediately = false;
          resolve();
        });
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Parameter for use in the test beforeDeleteRecord.
       @property recordWasNotDelete
      @type bool
      @default false
     */
    recordWasNotDelete: false,

    actions: {
      /* eslint-disable no-unused-vars */
      beforeDeleteRecord: function beforeDeleteRecord(record, data) {
        var _this = this;

        return new Ember.RSVP.Promise(function (resolve) {
          _this.set('recordWasNotDelete', !record.get('isDeleted'));
          resolve();
        });
      }
      /* eslint-enable no-unused-vars */

    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Parameter for use in the test beforeDeleteRecord.
       @property recordWasNotDelete
      @type bool
      @default false
     */
    recordWasNotDelete: false,

    actions: {
      /* eslint-disable no-unused-vars */
      beforeDeleteRecord: function beforeDeleteRecord(record, data) {
        this.set('recordWasNotDelete', !record.get('isDeleted'));
        return;
      }
      /* eslint-enable no-unused-vars */

    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/configurate-rows', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of selected detail's model projection.
       @property _projectionName
      @type String
      @private
     */
    _projectionName: 'SuggestionL',

    /**
      Array of available model projections.
       @property _projections
      @type Object[]
     */
    _projections: Ember.computed('model.[]', function () {
      var records = this.get('model');
      var modelClass = Ember.get(records, 'length') > 0 ? Ember.get(records, 'firstObject').constructor : {};

      return Ember.get(modelClass, 'projections');
    }),

    /**
      Array of available model projections names.
       @property _projectionsNames
      @type String[]
     */
    _projectionsNames: Ember.computed('_projections.[]', function () {
      var projections = this.get('_projections');
      if (Ember.isNone(projections)) {
        return [];
      }

      return Object.keys(projections);
    }),

    /**
      Model projection for 'flexberry-objectlistview' component 'modelProjection' property.
       @property projection
      @type Object
     */
    projection: Ember.computed('_projections.[]', '_projectionName', function () {
      var projectionName = this.get('_projectionName');
      if (Ember.isBlank(projectionName)) {
        return null;
      }

      var projections = this.get('_projections');
      if (Ember.isNone(projections)) {
        return null;
      }

      return projections[projectionName];
    }),

    /**
      Name of related edit form route (for 'flexberry-objectlistview' component 'editFormRoute' property).
       @property editFormRoute
      @type String
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-edit',

    /**
      Current records.
       @property _records
      @type Object[]
      @protected
      @readOnly
    */
    records: undefined,

    /**
      Configurate rows 'flexberry-objectlistview' component by address.
       @property configurateRowByAddress
      @type String
     */
    configurateRowByAddress: undefined,

    _configurateRowByAddress: Ember.observer('configurateRowByAddress', function () {
      var _this = this;

      var rowConfig = { customClass: '' };

      this.get('records').forEach(function (record) {
        _this.send('configurateRow', rowConfig, record);
      });
    }),

    _modelObserver: Ember.observer('model', function () {
      if (Ember.isNone(this.get('configurateRowByAddress'))) {
        var model = this.get('model');
        if (model.get instanceof Function) {
          var firstRecord = model.get('firstObject');
          if (firstRecord) {
            this.set('configurateRowByAddress', firstRecord.get('address'));
          }
        }
      }
    }),

    /**
      Template text for 'flexberry-objectlistview' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('records', []);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-objectlistview<br>' + '  configurateRow=(action "configurateRow")<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();

      componentSettingsMetadata.pushObject({
        settingName: 'configurateRowByAddress',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'configurateRowByAddress'
      });

      return componentSettingsMetadata;
    }),

    actions: {
      /**
        Configurate rows on the condition.
      */
      configurateRow: function configurateRow(rowConfig, record) {
        if (record) {
          this.get('records').push(record);
        }

        if (record.get('address') === this.get('configurateRowByAddress')) {
          Ember.set(rowConfig, 'customClass', 'positive ');
        } else {
          Ember.set(rowConfig, 'customClass', 'negative ');
        }
      },


      /**
        Change attribute 2.
      */
      changeAttribute2: function changeAttribute2() {
        this.get('records')[1].set('address', 'Street, 200');
      }
    }

  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/custom-filter', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    filterByAnyWord: false,

    filterByAllWords: false,

    queryParams: ['filterCondition'],
    filterCondition: undefined,

    /**
      Observes current state of FilterCondition parameter
      & set right filter option after reload page.
       @method  _currentFilterCondition
      @private
    */
    _currentFilterCondition: Ember.observer('filterCondition', function () {
      var filterCondition = this.get('filterCondition');
      if (filterCondition === 'or') {
        this.set('filterByAnyWord', true);
        this.set('filterByAllWords', false);
      } else if (filterCondition === 'and') {
        this.set('filterByAnyWord', false);
        this.set('filterByAllWords', true);
      }

      return filterCondition;
    }),

    customButtons: Ember.computed('filterByAnyWord', 'filterByAllWords', function () {
      return [{
        buttonName: 'filterByAnyWord',
        buttonAction: 'toggleFilterByAnyWord',
        buttonClasses: this.get('filterByAnyWord') ? 'positive' : ''
      }, {
        buttonName: 'filterByAllWords',
        buttonAction: 'toggleFilterByAllWords',
        buttonClasses: this.get('filterByAllWords') ? 'positive' : ''
      }];
    }),

    actions: {
      toggleFilterByAnyWord: function toggleFilterByAnyWord() {
        this.toggleProperty('filterByAnyWord');
        if (this.get('filterByAnyWord')) {
          this.set('filterByAllWords', false);
        }
      },
      toggleFilterByAllWords: function toggleFilterByAllWords() {
        this.toggleProperty('filterByAllWords');
        if (this.get('filterByAllWords')) {
          this.set('filterByAnyWord', false);
        }
      },


      /* eslint-disable no-unused-vars */
      componentForFilter: function componentForFilter(type, relation) {
        switch (type) {
          case 'decimal':
            return { name: 'flexberry-textbox', properties: { class: 'compact fluid' } };
          default:
            return {};
        }
      },

      /* eslint-enable no-unused-vars */

      conditionsByType: function conditionsByType(type) {
        switch (type) {
          case 'file':
            return null;

          case 'date':
          case 'number':
            return ['eq', 'neq', 'le', 'ge'];

          case 'string':
            return ['eq', 'neq', 'like', 'empty'];

          case 'boolean':
            return ['eq'];

          default:
            return ['eq', 'neq'];
        }
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/downloading-files-from-olv-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'components-examples/flexberry-objectlistview/downloading-files-from-olv-list'
     */
    parentRoute: 'components-examples/flexberry-objectlistview/downloading-files-from-olv-list'

  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/downloading-files-from-olv-list', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'components-examples/flexberry-objectlistview/downloading-files-from-olv-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/downloading-files-from-olv-edit',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    /* eslint-disable no-unused-vars */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      if (bindingPath === 'file') {
        cellComponent = {
          componentName: 'flexberry-file',
          componentProperties: {
            readonly: true,
            showUploadButton: false,
            showModalDialogOnUploadError: true,
            showModalDialogOnDownloadError: true
          }
        };
      }

      return cellComponent;
    }
    /* eslint-enable no-unused-vars */
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/edit-form-with-detail-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'components-examples/flexberry-objectlistview/edit-form-with-detail-list'
     */
    parentRoute: 'components-examples/flexberry-objectlistview/edit-form-with-detail-list',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);

      if (attr.kind === 'belongsTo') {
        if (model.modelName === 'ember-flexberry-dummy-localized-suggestion-type' && bindingPath === 'localization') {
          cellComponent.componentProperties = {
            projection: 'LocalizationL',
            displayAttributeName: 'name',
            title: 'Localization',
            relationName: 'localization',
            choose: 'showLookupDialog',
            remove: 'removeLookupValue'
          };
        }
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/edit-form-with-detail-edit/new', ['exports', 'dummy/controllers/components-examples/flexberry-objectlistview/edit-form-with-detail-edit'], function (exports, _editFormWithDetailEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _editFormWithDetailEdit.default;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/edit-form-with-detail-list', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'components-examples/flexberry-objectlistview/edit-form-with-detail-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/edit-form-with-detail-edit'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/multi-list-controller', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _multiListController, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_multiListController.default, _editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-multi-list'
     */
    parentRoute: 'ember-flexberry-dummy-multi-list',

    /**
      Name of model.comments edit route.
       @property commentsEditRoute
      @type String
      @default 'ember-flexberry-dummy-comment-edit'
     */
    commentsEditRoute: 'ember-flexberry-dummy-comment-edit',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      if (model !== null) {
        if (attr.kind === 'belongsTo') {
          switch (model.modelName + '+' + bindingPath) {
            case 'ember-flexberry-dummy-vote+author':
              cellComponent.componentProperties = {
                choose: 'showLookupDialog',
                remove: 'removeLookupValue',
                preview: 'previewLookupValue',
                displayAttributeName: 'name',
                required: true,
                relationName: 'author',
                projection: 'ApplicationUserL',
                autocomplete: true,
                showPreviewButton: true,
                previewFormRoute: 'ember-flexberry-dummy-application-user-edit'
              };
              break;

            case 'ember-flexberry-dummy-comment+author':
              cellComponent.componentProperties = {
                choose: 'showLookupDialog',
                remove: 'removeLookupValue',
                displayAttributeName: 'name',
                required: true,
                relationName: 'author',
                projection: 'ApplicationUserL',
                autocomplete: true
              };
              break;

          }
        } else if (attr.kind === 'attr') {
          switch (model.modelName + '+' + bindingPath) {
            case 'ember-flexberry-dummy-vote+author.eMail':
              cellComponent.componentProperties = {
                readonly: true
              };
          }
        }

        if (model.modelName === 'ember-flexberry-dummy-application-user' || model.modelName === 'ember-flexberry-dummy-suggestion' || model.modelName === 'ember-flexberry-dummy-suggestion-type') {
          cellComponent.componentName = undefined;
        }
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit/new', ['exports', 'dummy/controllers/components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit'], function (exports, _emberFlexberryDummySuggestionMultiListEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _emberFlexberryDummySuggestionMultiListEdit.default;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/hierarchy-example', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Flag indicate when component is in the hierarchical mode.
       @property inHierarchicalMode
      @type Boolean
      @default false
      @private
    */
    inHierarchicalMode: true,

    /**
      Store the attribute parent set by `hierarchyByAttribute`.
       @property _hierarchicalAttribute
      @type String
      @private
    */
    hierarchicalAttribute: 'parent',

    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-type-edit'
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit'

  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/hierarchy-paging-example', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Flag indicate when component is in the hierarchical mode.
       @property inHierarchicalMode
      @type Boolean
      @default false
      @private
    */
    inHierarchicalMode: true,

    /**
      Flag used for disable the hierarchical paging.
       @property hierarchyPaging
      @type Boolean
      @default false
      @private
    */
    hierarchyPaging: true,

    /**
      Store the attribute parent set by `hierarchyByAttribute`.
       @property _hierarchicalAttribute
      @type String
      @private
    */
    hierarchicalAttribute: 'parent',

    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-type-edit'
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit'

  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({

    actions: {
      root: function root() {
        this.transitionToRoute('components-examples/flexberry-objectlistview/inheritance-models/parent-list');
      },
      successorPhone: function successorPhone() {
        this.transitionToRoute('components-examples/flexberry-objectlistview/inheritance-models/successor-phone-list');
      },
      successorSoc: function successorSoc() {
        this.transitionToRoute('components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-list');
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/parent-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
     Route name for transition after close edit form.
      @property parentRoute
     @type String
     @default 'components-examples/flexberry-objectlistview/inheritance-models/base-list'
    */
    parentRoute: 'components-examples/flexberry-objectlistview/inheritance-models/parent-list'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/parent-edit/new', ['exports', 'dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/parent-edit'], function (exports, _parentEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _parentEdit.default;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/parent-list', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'components-examples/flexberry-objectlistview/inheritance-models/base-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/inheritance-models/parent-edit'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
     Route name for transition after close edit form.
      @property parentRoute
     @type String
     @default 'components-examples/flexberry-objectlistview/inheritance-models/successor-phone-list'
    */
    parentRoute: 'components-examples/flexberry-objectlistview/inheritance-models/successor-phone-list'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit/new', ['exports', 'dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit'], function (exports, _successorPhoneEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _successorPhoneEdit.default;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-list', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
     Route name for transition after close edit form.
      @property parentRoute
     @type String
     @default 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-list'
    */
    parentRoute: 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-list'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit/new', ['exports', 'dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit'], function (exports, _successorSocialNetworkEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _successorSocialNetworkEdit.default;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-list', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/limit-function-example', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Current predicate to limit accessible values for olv.
      @property firstLimitType
      @type BasePredicate
      @default undefined
     */
    firstLimitType: undefined,

    /**
      Current predicate to limit accessible values for olv.
      @property secondLimitType
      @type BasePredicate
      @default undefined
     */
    secondLimitType: undefined,

    /**
      Current predicate to limit accessible values for olv.
      @property secondLimitType
      @type BasePredicate
      @default undefined
     */
    limitFunction: undefined,

    loadCount: 0,

    actions: {
      /**
        This method set controller.limitFunction for olv window.
        @method firstLimitFunction
       */
      firstLimitFunction: function firstLimitFunction() {
        this.set('limitFunction', this.get('firstLimitType'));
        this.send('refreshModel');
      },


      /**
        This method set controller.limitFunction for olv window.
        @method secondLimitFunction
       */
      secondLimitFunction: function secondLimitFunction() {
        this.set('limitFunction', this.get('secondLimitType'));
        this.send('refreshModel');
      },


      /**
        This method set controller.limitFunction for olv window.
        @method clearLimitFunction
       */
      clearLimitFunction: function clearLimitFunction() {
        this.set('limitFunction', undefined);
        this.send('refreshModel');
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/limited-text-size-example', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route (for 'flexberry-objectlistview' component 'editFormRoute' property).
       @property editFormRoute
      @type String
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-edit',

    /**
      'flexberry-text-cell' component's 'maxTextLength' property.
       @property maxTextLength
      @type Number
     */
    maxTextLength: 10,

    /**
      Flag for 'flexberry-text-cell' component 'cutBySpaces' property.
       @property cutBySpaces
      @type Boolean
     */
    cutBySpaces: false,

    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', 'model.content', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'maxTextLength',
        settingType: 'number',
        settingDefaultValue: 10,
        bindedControllerPropertieName: 'maxTextLength'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'cutBySpaces',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'cutBySpaces'
      });
      return componentSettingsMetadata;
    }),

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr) {
      var cellComponent = {
        componentName: 'object-list-view-cell',
        componentProperties: {
          maxTextLength: this.get('maxTextLength'),
          cutBySpaces: this.get('cutBySpaces'),
          displayMemberPath: Ember.get(attr, 'options.displayMemberPath')
        }
      };

      if (attr.caption === 'Text') {
        cellComponent = {
          componentName: 'flexberry-text-cell',
          componentProperties: {
            maxTextLength: this.get('maxTextLength'),
            cutBySpaces: this.get('cutBySpaces')
          }
        };
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/list-on-editform', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/on-edit-form/suggestion',

    exportExcelProjection: 'SuggestionL',

    actions: {
      /**
        Hook that executes before deleting all records on all pages.
        Need to be overriden in corresponding application controller.
      */
      beforeDeleteAllRecords: function beforeDeleteAllRecords(modelName, data) {
        data.cancel = false;
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/lock-services-editor-view-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-list'
     */
    parentRoute: 'components-examples/flexberry-objectlistview/lock-services-editor-view-list',

    /**
      Name of model.comments edit route.
       @property commentsEditRoute
      @type String
      @default 'ember-flexberry-dummy-comment-edit'
     */
    commentsEditRoute: 'ember-flexberry-dummy-comment-edit',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      if (attr.kind === 'belongsTo') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

          case 'ember-flexberry-dummy-comment+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

        }
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/lock-services-editor-view-list', ['exports', 'ember-flexberry/controllers/list-form', 'dummy/mixins/list-form-controller-operations-indication'], function (exports, _listForm, _listFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormControllerOperationsIndication.default, {
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/lock-services-editor-view-edit',

    exportExcelProjection: 'SuggestionL'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/object-list-view-resize', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Flag indicates that component have to check on model changes and display it.
       @property searchForContentChange
      @type Boolean
      @default true
    */
    searchForContentChange: true,

    actions: {
      addRecord: function addRecord() {
        var store = this.get('store');
        var model = this.get('model');
        var newRecord = store.createRecord('ember-flexberry-dummy-suggestion', {
          text: 'modelRecord'
        });
        model.addObject(newRecord);
      }
    }

  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/on-edit-form', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-application-user-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/on-edit-form/user'
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/on-edit-form/suggestion', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication', 'ember-flexberry/mixins/flexberry-objectlistview-on-edit-form-controller', 'ember-flexberry-data'], function (exports, _editForm, _editFormControllerOperationsIndication, _flexberryObjectlistviewOnEditFormController, _emberFlexberryData) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_flexberryObjectlistviewOnEditFormController.default, _editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-list'
     */
    parentRoute: 'components-examples/flexberry-objectlistview/on-edit-form',

    /**
      Name of model.comments edit route.
       @property commentsEditRoute
      @type String
      @default 'ember-flexberry-dummy-comment-edit'
     */
    commentsEditRoute: 'ember-flexberry-dummy-comment-edit',

    folvModelName: 'ember-flexberry-dummy-localized-suggestion-type',
    folvProjection: 'LocalizedSuggestionTypeE',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      if (Ember.isNone(model)) {
        return cellComponent;
      }

      if (attr.kind === 'belongsTo') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

          case 'ember-flexberry-dummy-comment+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

        }
      } else if (attr.kind === 'attr') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author.eMail':
            cellComponent.componentProperties = {
              readonly: true
            };
        }
      }

      return cellComponent;
    },


    objectListViewLimitPredicate: function objectListViewLimitPredicate(options) {
      var methodOptions = Ember.merge({
        modelName: undefined,
        projectionName: undefined,
        params: undefined
      }, options);

      if (methodOptions.modelName === this.get('folvModelName') && methodOptions.projectionName === this.get('folvProjection')) {
        var id = this.get('model.type.id');
        var limitFunction = new _emberFlexberryData.Query.SimplePredicate('suggestionType', _emberFlexberryData.Query.FilterOperator.Eq, id);
        return limitFunction;
      }

      return undefined;
    },

    customFolvContentObserver: Ember.observer('model', 'model.type', 'perPage', 'page', 'sorting', 'filter', 'filters', function () {
      Ember.run.scheduleOnce('afterRender', this, this.getCustomContent);
    })
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/on-edit-form/user', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/flexberry-objectlistview-on-edit-form-controller', 'ember-flexberry/mixins/edit-form-controller-operations-indication', 'ember-flexberry-data/query/predicate'], function (exports, _editForm, _flexberryObjectlistviewOnEditFormController, _editFormControllerOperationsIndication, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_flexberryObjectlistviewOnEditFormController.default, _editFormControllerOperationsIndication.default, {
    /**
     Route name for transition after close edit form.
      @property parentRoute
     @type String
     @default 'ember-flexberry-dummy-application-user-list'
    */
    parentRoute: 'components-examples/flexberry-objectlistview/on-edit-form',

    store: Ember.inject.service(),

    getCellComponent: null,

    /**
      Name of related to FOLV edit form route.
       @property folvEditFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-type-edit'
     */
    folvEditFormRoute: 'ember-flexberry-dummy-suggestion-type-edit',

    /**
      Name of FOLV model.
       @property folvModelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    folvModelName: 'ember-flexberry-dummy-suggestion-type',

    /**
      Name of FOLV projection.
       @property folvProjection
      @type String
      @default 'SuggestionTypeL'
     */
    folvProjection: 'SuggestionTypeL',

    objectListViewLimitPredicate: function objectListViewLimitPredicate(options) {
      var methodOptions = Ember.merge({
        modelName: undefined,
        projectionName: undefined,
        params: undefined
      }, options);

      if (methodOptions.modelName === this.get('folvModelName') && methodOptions.projectionName === this.get('folvProjection') && !this.get('inHierarchicalMode')) {
        var limitFunction = new _predicate.ComplexPredicate('or', new _predicate.StringPredicate('name').contains('1'), new _predicate.StringPredicate('name').contains('Type'));
        return limitFunction;
      }

      return undefined;
    },

    /**
      Property to form array of special structures of custom user buttons.
       @property customButtons
      @type Array
     */
    customButtons: Ember.computed('i18n.locale', function () {
      var i18n = this.get('i18n');
      return [{
        buttonName: i18n.t('forms.components-examples.flexberry-objectlistview.on-edit-form.add-button-name'),
        buttonAction: 'userButtonAddAction',
        buttonClasses: 'my-add-user-button add-click-button positive'
      }];
    }),

    actions: {
      /**
        Handler for click on custom user button.
         @method userButtonAddAction
       */
      userButtonAddAction: function userButtonAddAction() {
        var thisUrl = this.get('target.url');
        this.transitionToRoute(this.get('folvEditFormRoute') + '.new').then(function (newRoute) {
          newRoute.controller.set('parentRoute', thisUrl);
        });
      },

      /* eslint-disable no-unused-vars */
      componentForFilter: function componentForFilter(type, relation) {
        switch (type) {
          case 'string':
            return { name: 'flexberry-textbox', properties: { class: 'compact fluid' } };
          default:
            return {};
        }
      },

      /* eslint-enable no-unused-vars */

      conditionsByType: function conditionsByType(type) {
        switch (type) {
          case 'file':
            return null;

          case 'date':
          case 'number':
            return ['eq', 'neq', 'le', 'ge'];

          case 'string':
            return ['eq', 'neq', 'like'];

          case 'boolean':
            return ['eq'];

          default:
            return ['eq', 'neq'];
        }
      }
    }

  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-list'
     */
    parentRoute: 'components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-list',

    /**
      Name of model.comments edit route.
       @property commentsEditRoute
      @type String
      @default 'ember-flexberry-dummy-comment-edit'
     */
    commentsEditRoute: 'ember-flexberry-dummy-comment-edit',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      if (attr.kind === 'belongsTo') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

          case 'ember-flexberry-dummy-comment+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

        }
      }

      return cellComponent;
    },


    actions: {
      /**
        This method set controller.limitFunction for olv window.
        @method onButtonClick
       */
      onButtonClick: function onButtonClick() {
        this.transitionToRoute(this.parentRoute, { queryParams: { perPage: 1 } });
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-list', ['exports', 'ember-flexberry/controllers/list-form', 'dummy/mixins/list-form-controller-operations-indication'], function (exports, _listForm, _listFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormControllerOperationsIndication.default, {
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-edit'
     */
    editFormRoute: 'components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-edit',

    exportExcelProjection: 'SuggestionL',

    /**
      Cout of list loading.
       @property loadCount
      @type Int
    */
    loadCount: 0
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/selected-rows', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-type-edit'
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit',

    /**
      Name of compoent.
       @property componentName
      @type String
      @default 'suggestionTypeLocalizedTypesObjectListView'
     */
    componentName: 'suggestionTypeLocalizedTypesObjectListView',

    /**
      Count selected rows.
       @property countSelectedRows
      @type Number
      @default 0
    */
    countSelectedRows: 0,

    actions: {
      configurateSelectedRows: function configurateSelectedRows(selectedRecords) {
        if (this.get('allSelect')) {
          this.set('countSelectedRows', this.model.meta.count);
        } else {
          this.set('countSelectedRows', selectedRecords.length);
        }
      }
    },

    /* eslint-disable no-unused-vars */
    _selectAll: function _selectAll(componentName, selectAllParameter, skipConfugureRows) {
      if (componentName === this.get('componentName')) {
        this.set('allSelect', selectAllParameter);
      }
    },

    /* eslint-enable no-unused-vars */

    init: function init() {
      this.get('objectlistviewEventsService').on('updateSelectAll', this, this._selectAll);
      this._super.apply(this, arguments);
    },

    willDestroyElement: function willDestroyElement() {
      this.get('objectlistviewEventsService').off('updateSelectAll', this, this._selectAll);
      this._super.apply(this, arguments);
    }
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/settings-example', ['exports', 'ember-flexberry/controllers/list-form', 'ember-i18n'], function (exports, _listForm, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of selected detail's model projection.
       @property _projectionName
      @type String
      @private
     */
    _projectionName: 'SuggestionL',

    /**
      Array of available model projections.
       @property _projections
      @type Object[]
     */
    _projections: Ember.computed('model.[]', function () {
      var records = this.get('model');
      var modelClass = Ember.get(records, 'length') > 0 ? Ember.get(records, 'firstObject').constructor : {};

      return Ember.get(modelClass, 'projections');
    }),

    /**
      Array of available model projections names.
       @property _projectionsNames
      @type String[]
     */
    _projectionsNames: Ember.computed('_projections.[]', function () {
      var projections = this.get('_projections');
      if (Ember.isNone(projections)) {
        return [];
      }

      return Object.keys(projections);
    }),

    /**
      Model projection for 'flexberry-objectlistview' component 'modelProjection' property.
       @property projection
      @type Object
     */
    projection: Ember.computed('_projections.[]', '_projectionName', function () {
      var projectionName = this.get('_projectionName');
      if (Ember.isBlank(projectionName)) {
        return null;
      }

      var projections = this.get('_projections');
      if (Ember.isNone(projections) && this.get('model.content') === undefined) {
        return {}; // модель не загрузилась ещё, свойство пересчитывается, потому что грузится страница.
      }

      if (Ember.isNone(projections)) {
        return null;
      }

      return projections[projectionName];
    }),

    /**
      Name of related edit form route (for 'flexberry-objectlistview' component 'editFormRoute' property).
       @property editFormRoute
      @type String
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-edit',

    /**
      Text for 'flexberry-objectlistview' component 'placeholder' property.
       @property placeholder
      @type String
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-objectlistview.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
    **/
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-objectlistview.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-objectlistview.placeholder'));
      }
    }),

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Flag for 'flexberry-objectlistview' component 'colsConfigButton' property.
       @property colsConfigButton
      @type Boolean
     */
    colsConfigButton: true,

    /**
      Flag for 'flexberry-objectlistview' component 'exportExcelButton' property.
       @property exportExcelButton
      @type Boolean
     */
    exportExcelButton: false,

    /**
      Flag for 'flexberry-objectlistview' component 'tableStriped' property.
       @property tableStriped
      @type Boolean
     */
    tableStriped: true,

    /**
      Flag for 'flexberry-objectlistview' component 'allowColumnResize' property.
       @property allowColumnResize
      @type Boolean
     */
    allowColumnResize: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'createNewButton' mode or not.
       @property createNewButton
      @type Boolean
     */
    createNewButton: false,

    /**
      Flag for 'flexberry-objectlistview' component 'deleteButton' property.
       @property deleteButton
      @type Boolean
     */
    deleteButton: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'enableFilters' mode or not.
       @property enableFilters
      @type Boolean
     */
    enableFilters: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'filterButton' mode or not.
       @property filterButton
      @type Boolean
     */
    filterButton: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'refreshButton' mode or not.
       @property refreshButton
      @type Boolean
     */
    refreshButton: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'defaultSortingButton' mode or not
       @property defaultSortingButton
      @type Boolean
      @default true
    */
    defaultSortingButton: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showCheckBoxInRow' mode or not.
       @property showCheckBoxInRow
      @type Boolean
     */
    showCheckBoxInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteButtonInRow' mode or not.
       @property showDeleteButtonInRow
      @type Boolean
     */
    showDeleteButtonInRow: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showEditButtonInRow' mode or not.
       @property showEditButtonInRow
      @type Boolean
     */
    showEditButtonInRow: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showPrototypeButtonInRow' mode or not.
       @property showPrototypeButtonInRow
      @type Boolean
     */
    showPrototypeButtonInRow: false,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showDeleteMenuItemInRow' mode or not.
       @property showDeleteMenuItemInRow
      @type Boolean
     */
    showDeleteMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showEditMenuItemInRow' mode or not.
       @property showEditMenuItemInRow
      @type Boolean
     */
    showEditMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'showPrototypeMenuItemInRow' mode or not.
       @property showPrototypeMenuItemInRow
      @type Boolean
     */
    showPrototypeMenuItemInRow: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'rowClickable' mode or not.
       @property rowClickable
      @type Boolean
     */
    rowClickable: true,

    /**
      Flag: indicates whether 'flexberry-objectlistview' component is in 'orderable' mode or not.
       @property orderable
      @type Boolean
     */
    orderable: true,

    /**
      ext for 'flexberry-objectlistview' component 'singleColumnHeaderTitle' property.
       @property singleColumnHeaderTitle
      @type String
     */
    singleColumnHeaderTitle: undefined,

    /**
      'Flexberry-objectlistview' component's 'minAutoColumnWidth' property.
       @property minAutoColumnWidth
      @type Number
     */
    minAutoColumnWidth: 150,

    /**
      Flag for 'flexberry-objectlistview' component 'columnsWidthAutoresize' property.
       @property columnsWidthAutoresize
      @type Boolean
     */
    columnsWidthAutoresize: false,

    /**
      Flag indicate when available the hierarchical mode.
       @property availableHierarchicalMode
      @type Boolean
      @default false
      @private
    */
    availableHierarchicalMode: false,

    /**
      Flag indicate when available the collapse/expand all hierarchies mode.
       @property availableCollExpandMode
      @type Boolean
      @default false
      @private
    */
    availableCollExpandMode: false,

    /**
      Flag for 'flexberry-objectlistview' component 'fixedHeader' property.
       @property fixedHeader
      @type Boolean
     */
    fixedHeader: false,

    /**
      Flag for 'flexberry-objectlistview' component 'advLimitButton' property.
       @property fixedHeader
      @type Boolean
     */
    advLimitButton: false,

    /**
      Current records.
       @property _records
      @type Object[]
      @protected
      @readOnly
    */
    records: undefined,

    /**
      Template text for 'flexberry-objectlistview' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('records', []);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-objectlistview<br>' + '  componentName="SuggestionsObjectListView"<br>' + '  colsConfigButton=colsConfigButton<br>' + '  exportExcelButton=exportExcelButton<br>' + '  content=model<br>' + '  modelName="ember-flexberry-dummy-suggestion"<br>' + '  editFormRoute="ember-flexberry-dummy-suggestion"<br>' + '  modelProjection=projection<br>' + '  placeholder=placeholder<br>' + '  readonly=readonly<br>' + '  tableStriped=tableStriped<br>' + '  allowColumnResize=allowColumnResize<br>' + '  minAutoColumnWidth=minAutoColumnWidth<br>' + '  columnsWidthAutoresize=columnsWidthAutoresize<br>' + '  createNewButton=createNewButton<br>' + '  deleteButton=deleteButton<br>' + '  enableFilters=enableFilters<br>' + '  filters=filters<br>' + '  applyFilters=(action "applyFilters")<br>' + '  resetFilters=(action "resetFilters")<br>' + '  refreshButton=refreshButton<br>' + '  defaultSortingButton=defaultSortingButton<br>' + '  filterButton=filterButton<br>' + '  showCheckBoxInRow=showCheckBoxInRow<br>' + '  showEditButtonInRow=showEditButtonInRow<br>' + '  showPrototypeButtonInRow=showPrototypeButtonInRow<br>' + '  showDeleteButtonInRow=showDeleteButtonInRow<br>' + '  showEditMenuItemInRow=showEditMenuItemInRow<br>' + '  showPrototypeMenuItemInRow=showPrototypeMenuItemInRow<br>' + '  showDeleteMenuItemInRow=showDeleteMenuItemInRow<br>' + '  rowClickable=rowClickable<br>' + '  orderable=orderable<br>' + '  filterByAnyMatch=(action "filterByAnyMatch")<br>' + '  filterText=filter<br>' + '  filterByAnyWord=filterByAnyWord<br>' + '  filterByAllWords=filterByAllWords<br>' + '  sorting=computedSorting<br>' + '  sortByColumn=(action "sortByColumn")<br>' + '  addColumnToSorting=(action "addColumnToSorting")<br>' + '  _availableHierarchicalMode=availableHierarchicalMode<br>' + '  availableCollExpandMode=availableCollExpandMode<br>' + '  pages=pages<br>' + '  perPageValue=perPageValue<br>' + '  perPageValues=perPageValues<br>' + '  hasPreviousPage=hasPreviousPage<br>' + '  hasNextPage=hasNextPage<br>' + '  previousPage=(action "previousPage")<br>' + '  gotoPage=(action "gotoPage")<br>' + '  nextPage=(action "nextPage")<br>' + '  fixedHeader=fixedHeader<br>' + '  advLimitButton=advLimitButton<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', 'model.content', function () {
      var componentSettingsMetadata = Ember.A();

      componentSettingsMetadata.pushObject({
        settingName: 'componentName',
        settingType: 'string',
        settingValue: 'SuggestionsObjectListView',
        settingDefaultValue: undefined,
        settingIsWithoutUI: true
      });
      componentSettingsMetadata.pushObject({
        settingName: 'colsConfigButton',
        settingType: 'boolean',
        settingValue: true,
        settingDefaultValue: true,
        bindedControllerPropertieName: 'colsConfigButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'exportExcelButton',
        settingType: 'boolean',
        settingValue: false,
        settingDefaultValue: false,
        bindedControllerPropertieName: 'exportExcelButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'content',
        settingType: 'hasManyArray',
        settingValue: this.get('model'),
        settingDefaultValue: null,
        settingIsWithoutUI: true,
        bindedControllerPropertieName: 'model'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'modelProjection',
        settingType: 'enumeration',
        settingAvailableItems: this.get('_projectionsNames'),
        settingDefaultValue: null,
        bindedControllerPropertieName: '_projectionName',
        bindedControllerPropertieDisplayName: 'projection'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'modelName',
        settingType: 'string',
        settingValue: 'ember-flexberry-dummy-suggestion',
        settingDefaultValue: undefined,
        settingIsWithoutUI: true
      });
      componentSettingsMetadata.pushObject({
        settingName: 'placeholder',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-objectlistview.placeholder'),
        bindedControllerPropertieName: 'placeholder'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'tableStriped',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'tableStriped'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'allowColumnResize',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'allowColumnResize'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'minAutoColumnWidth',
        settingType: 'number',
        settingDefaultValue: 150,
        bindedControllerPropertieName: 'minAutoColumnWidth'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'columnsWidthAutoresize',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'columnsWidthAutoresize'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'createNewButton',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'createNewButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'deleteButton',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'deleteButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'enableFilters',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'enableFilters'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'filterButton',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'filterButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'filterByAnyWord',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'filterByAnyWord'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'filterByAllWords',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'filterByAllWords'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'refreshButton',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'refreshButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'defaultSortingButton',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'defaultSortingButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showCheckBoxInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showCheckBoxInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showEditButtonInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showEditButtonInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showPrototypeButtonInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showPrototypeButtonInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showDeleteButtonInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showDeleteButtonInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showEditMenuItemInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showEditMenuItemInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showPrototypeMenuItemInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showPrototypeMenuItemInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'showDeleteMenuItemInRow',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'showDeleteMenuItemInRow'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'rowClickable',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'rowClickable'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'orderable',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'orderable'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'singleColumnHeaderTitle',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'singleColumnHeaderTitle'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'availableHierarchicalMode',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'availableHierarchicalMode'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'availableCollExpandMode',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'availableCollExpandMode'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'fixedHeader',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'fixedHeader'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'advLimitButton',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'advLimitButton'
      });

      return componentSettingsMetadata;
    }),

    _enableFilters: Ember.observer('enableFilters', function () {
      if (this.get('enableFilters')) {
        this.set('refreshButton', true);
      }
    })
  });
});
define('dummy/controllers/components-examples/flexberry-objectlistview/toolbar-custom-buttons-example', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Property to count clicks on user button.
       @property clickCounter
      @type Number
      @default 1
    */
    clickCounter: 1,

    /**
      Property to show user message after click on user button.
       @property messageForUser
      @type String
    */
    messageForUser: undefined,

    /**
      The state of the hi button, is disabled if `true` or enabled if `false`.
       @property hiButtonState
      @type Boolean
      @default true
    */
    hiButtonState: true,

    /**
      Property to form array of special structures of custom user buttons.
       @property customButtons
      @type Array
     */
    customButtons: Ember.computed('i18n.locale', 'hiButtonState', function () {
      var i18n = this.get('i18n');
      var hiButtonState = this.get('hiButtonState');
      var togglerButtonType = hiButtonState ? 'enable' : 'disable';
      var hiButtonText = i18n.t('forms.components-examples.flexberry-objectlistview.toolbar-custom-buttons-example.custom-button-name');
      var togglerButtonText = i18n.t('forms.components-examples.flexberry-objectlistview.toolbar-custom-buttons-example.' + togglerButtonType + '-button-name');
      return [{
        buttonName: hiButtonText,
        buttonAction: 'userButtonActionTest',
        buttonClasses: 'test-click-button',
        iconClasses: 'paw icon',
        buttonTitle: hiButtonText,
        disabled: hiButtonState
      }, {
        buttonName: togglerButtonText,
        buttonAction: 'toggleHiButton',
        buttonClasses: 'toggle-hi-button',
        buttonTitle: togglerButtonText,
        disabled: false
      }];
    }),

    customButtonsInRow: Ember.computed('i18n.locale', function () {
      var i18n = this.get('i18n');
      return [{
        buttonName: i18n.t('forms.components-examples.flexberry-objectlistview.toolbar-custom-buttons-example.custom-row-button-name'),
        buttonAction: 'userButtonInRowActionTest',
        buttonClasses: 'icon',
        buttonIcon: 'bug icon',
        buttonTitle: i18n.t('forms.components-examples.flexberry-objectlistview.toolbar-custom-buttons-example.custom-row-button-name')
      }];
    }),

    actions: {
      /**
        Handler for click on custom user button.
         @method actions.userButtonActionTest
      */
      userButtonActionTest: function userButtonActionTest() {
        var i18n = this.get('i18n');
        var clickCounter = this.get('clickCounter');
        this.set('clickCounter', clickCounter + 1);
        this.set('messageForUser', i18n.t('forms.components-examples.flexberry-objectlistview.toolbar-custom-buttons-example.custom-message').string + ' ' + clickCounter);
      },


      /**
        Toggles the state of the hi button.
         @method actions.toggleHiButton
      */
      toggleHiButton: function toggleHiButton() {
        this.toggleProperty('hiButtonState');
      },


      /**
        Handler for click on custom user button in row.
         @method userButtonActionTest
      */
      userButtonInRowActionTest: function userButtonInRowActionTest(model) {
        this.set('modelFromClickedRow', model);
      }
    }
  });
});
define('dummy/controllers/components-examples/flexberry-simpledatetime/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Datetime picker type.
       @property type
      @type String
      @default 'datetime-local'
    */
    type: 'datetime-local',

    /**
      Enabled default date value.
       @property _value
      @type Boolean
      @default false
      @private
    */
    _value: false,

    /**
      Store real date value.
       @property __value
      @type Date
    */
    __value: undefined,

    /**
      Instead of `model.date` value.
       @property value
      @type Date
    */
    value: Ember.computed('_value', '__value', {
      get: function get() {
        var value = this.get('__value');
        if (value === undefined) {
          return this.get('_value') ? new Date() : undefined;
        } else {
          return value;
        }
      },
      set: function set(key, value) {
        if (typeof value === 'boolean') {
          return this.set('_value', value) ? new Date() : undefined;
        } else {
          return this.set('__value', value);
        }
      }
    }),

    /**
      Enabled min date value.
       @property _min
      @type Boolean
      @default true
      @private
    */
    _min: true,

    /**
      Minimum value of this component.
       @property min
      @type Date
      @default 'seven days under'
    */
    min: Ember.computed('_min', {
      get: function get() {
        var min = new Date();
        min.setDate(min.getDate() - 7);
        return this.get('_min') ? min : null;
      },
      set: function set(key, value) {
        var min = new Date();
        min.setDate(min.getDate() - 7);
        return this.set('_min', value) ? min : null;
      }
    }),

    /**
      Enabled max date value.
       @property _max
      @type Boolean
      @default true
      @private
    */
    _max: true,

    /**
      Maximum value of this component.
       @property max
      @type Date
      @default 'seven days older'
     */
    max: Ember.computed('_max', {
      get: function get() {
        var max = new Date();
        max.setDate(max.getDate() + 7);
        return this.get('_max') ? max : null;
      },
      set: function set(key, value) {
        var max = new Date();
        max.setDate(max.getDate() + 7);
        return this.set('_max', value) ? max : null;
      }
    }),

    /**
      Flag indicates whether 'flexberry-simpledatetime' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Flag indicates whether 'flexberry-simpledatetime' component has remove button or not.
       @property removeButton
      @type Boolean
      @default true
     */
    removeButton: true,

    /**
      Template text for 'flexberry-simpledatetime' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-simpledatetime<br>' + '  type=type<br>' + '  removeButton=removeButton<br>' + '  value=model.date<br>' + '  min=min<br>' + '  max=max<br>' + '  readonly=readonly<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();

      componentSettingsMetadata.pushObject({
        settingName: 'type',
        settingType: 'enumeration',
        settingAvailableItems: ['datetime-local', 'datetime', 'date'],
        settingDefaultValue: 'datetime-local',
        bindedControllerPropertieName: 'type',
        bindedControllerPropertieDisplayName: 'type'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'removeButton',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'removeButton'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'min',
        settingType: 'boolean',
        settingDefaultValue: this.get('min'),
        bindedControllerPropertieName: 'min'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'max',
        settingType: 'boolean',
        settingDefaultValue: this.get('max'),
        bindedControllerPropertieName: 'max'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'boolean',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'value',
        bindedControllerPropertieDisplayName: 'model.date'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: 'false',
        bindedControllerPropertieName: 'readonly'
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-text-cell/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      'flexberry-text-cell' component's 'value' property.
       @property value
      @type String
    */
    value: 'test string',

    /**
      'flexberry-text-cell' component's 'maxTextLength' property.
       @property maxTextLength
      @type Number
    */
    maxTextLength: 7,

    /**
      Flag for 'flexberry-text-cell' component 'cutBySpaces' property.
       @property cutBySpaces
      @type Boolean
    */
    cutBySpaces: false,

    /**
      Template text for 'flexberry-textarea' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-text-cell<br>' + '  value=value<br>' + '  maxTextLength=maxTextLength<br>' + '  cutBySpaces=cutBySpaces<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
    */
    componentSettingsMetadata: Ember.computed('i18n.locale', 'model.content', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'string',
        settingDefaultValue: 'test string',
        bindedControllerPropertieName: 'value'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'maxTextLength',
        settingType: 'number',
        settingDefaultValue: 7,
        bindedControllerPropertieName: 'maxTextLength'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'cutBySpaces',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'cutBySpaces'
      });
      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-textarea/settings-example', ['exports', 'ember-i18n'], function (exports, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Text for 'flexberry-textarea' component 'placeholder' property.
       @property placeholder
      @type String
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-textarea.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-textarea.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-textarea.placeholder'));
      }
    }),

    /**
      Possible selectionDirection values.
       @property _selectionDirections
      @type String[]
     */
    _selectionDirections: undefined,

    /**
      Possible wrap values.
       @property _wrapValues
      @type String[]
     */
    _wrapValues: undefined,

    /**
      Flag: indicates whether 'flexberry-textarea' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
      @default false
     */
    readonly: false,

    /**
      Flag: indicates whether 'flexberry-textarea' component is required for complete or not.
       @property required
      @type Boolean
      @default false
     */
    required: false,

    /**
      Flag: indicates whether 'flexberry-textarea' component is in 'disabled' mode or not.
       @property disabled
      @type Boolean
      @default false
     */
    disabled: false,

    /**
      Flag: indicates whether 'flexberry-textarea' component should be autofocused on page open or not.
       @property autofocus
      @type Boolean
      @default false
     */
    autofocus: false,

    /**
      Flag: indicates whether 'flexberry-textarea' component is in 'spellcheck' mode or not.
       @property spellcheck
      @type Boolean
      @default true
     */
    spellcheck: true,

    /**
      Number of columns for 'textarea' element.
       @property cols
      @type Number
      @default 20
     */
    cols: 20,

    /**
      Number of rows for 'textarea' element.
       @property rows
      @type Number
      @default 8
     */
    rows: 8,

    /**
      Wrap value for 'textarea' element.
       @property wrap
      @type String
      @default 'soft'
     */
    wrap: 'soft',

    /**
      Template text for 'flexberry-textarea' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('_selectionDirections', ['forward', 'backward', 'none']);
      this.set('_wrapValues', ['soft', 'hard', 'off']);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{textarea<br>' + '  value=model.text<br>' + '  placeholder=placeholder<br>' + '  readonly=readonly<br>' + '  class=class<br>' + '  required=required<br>' + '  rows=rows<br>' + '  cols=cols<br>' + '  disabled=disabled<br>' + '  maxlength=maxlength<br>' + '  selectionStart=selectionStart<br>' + '  selectionEnd=selectionEnd<br>' + '  selectionDirection=selectionDirection<br>' + '  wrap=wrap<br>' + '  autofocus=autofocus<br>' + '  spellcheck=spellcheck<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'model.text'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'placeholder',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-textarea.placeholder'),
        bindedControllerPropertieName: 'placeholder'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'class',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['fluid input', 'mini input', 'huge input'],
        bindedControllerPropertieName: 'class'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'required',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'required'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'rows',
        settingType: 'number',
        settingDefaultValue: 8,
        bindedControllerPropertieName: 'rows'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'cols',
        settingType: 'number',
        settingDefaultValue: 20,
        bindedControllerPropertieName: 'cols'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'disabled',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'disabled'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'maxlength',
        settingType: 'number',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'maxlength'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'selectionStart',
        settingType: 'number',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'selectionStart'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'selectionEnd',
        settingType: 'number',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'selectionEnd'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'selectionDirection',
        settingType: 'enumeration',
        settingAvailableItems: this.get('_selectionDirections'),
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'selectionDirection',
        bindedControllerPropertieDisplayName: 'selectionDirection'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'wrap',
        settingType: 'enumeration',
        settingAvailableItems: this.get('_wrapValues'),
        settingDefaultValue: 'soft',
        bindedControllerPropertieName: 'wrap',
        bindedControllerPropertieDisplayName: 'wrap'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'autofocus',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'autofocus'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'spellcheck',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'spellcheck'
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-textbox/settings-example', ['exports', 'ember-i18n'], function (exports, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Text for 'flexberry-textbox' component 'placeholder' property.
       @property placeholder
      @type String
     */
    placeholder: (0, _emberI18n.translationMacro)('components.flexberry-textbox.placeholder'),
    /**
      Handles changes in placeholder.
       @method _placeholderChanged
      @private
     */
    _placeholderChanged: Ember.observer('placeholder', function () {
      if (this.get('placeholder') === this.get('i18n').t('components.flexberry-textbox.placeholder').toString()) {
        this.set('placeholder', (0, _emberI18n.translationMacro)('components.flexberry-textbox.placeholder'));
      }
    }),
    /**
      Flag: indicates whether 'flexberry-textbox' component is in 'readonly' mode or not.
       @property readonly
      @type Boolean
     */
    readonly: false,

    /**
      Maxlength of 'flexberry-textbox' component.
       @property maxlength
      @type Number
     */
    maxlength: undefined,

    /**
      Template text for 'flexberry-textbox' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{flexberry-textbox<br>' + '  value=model.text<br>' + '  placeholder=placeholder<br>' + '  readonly=readonly<br>' + '  class=class<br>' + '  maxlength=maxlength<br>' + '}}'));
    },


    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed('i18n.locale', function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'value',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'model.text'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'placeholder',
        settingType: 'string',
        settingDefaultValue: this.get('i18n').t('components.flexberry-textbox.placeholder'),
        bindedControllerPropertieName: 'placeholder'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'readonly',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'readonly'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'class',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['fluid input', 'transparent input', 'mini input', 'huge input', 'input error'],
        bindedControllerPropertieName: 'class'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'maxlength',
        settingType: 'number',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'maxlength'
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-toggler/ge-into-toggler-example', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-toggler-example-master-e'
    */
    editFormRoute: 'ember-flexberry-dummy-toggler-example-master-e'
  });
});
define('dummy/controllers/components-examples/flexberry-toggler/settings-example-inner', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Text for 'flexberry-togggler' component 'caption' property.
       @property caption
      @type String
     */
    caption: '',

    /**
      Text for inner 'flexberry-togggler' component 'caption' property.
       @property innerCaption
      @type String
     */
    innerCaption: '',

    /**
      Text for 'flexberry-togggler' component 'expandedCaption' property.
       @property expandedCaption
      @type String
     */
    expandedCaption: null,

    /**
      Text for inner 'flexberry-togggler' component 'expandedCaption' property.
       @property expandedInnerCaption
      @type String
     */
    expandedInnerCaption: null,

    /**
      Text for 'flexberry-togggler' component 'collapsedCaption' property.
       @property collapsedCaption
      @type String
     */
    collapsedCaption: null,

    /**
      Text for inner 'flexberry-togggler' component 'collapsedCaption' property.
       @property collapsedInnerCaption
      @type String
     */
    collapsedInnerCaption: null,

    /**
      CSS clasess for i tag.
       @property iconClass
      @type String
    */
    iconClass: '',

    /**
      Is accordion expanded?
       @property expanded
      @type Boolean
      @default true
    */
    expanded: true,

    /**
      Is inner accordion expanded?
       @property innerExpanded
      @type Boolean
      @default true
    */
    innerExpanded: false,

    /**
      Template text for 'flexberry-textbox' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: '',

    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed(function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'caption',
        settingType: 'string',
        settingDefaultValue: '',
        bindedControllerPropertieName: 'caption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'expandedCaption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'expandedCaption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'collapsedCaption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'collapsedCaption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'expanded',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'expanded'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'innerCaption',
        settingType: 'string',
        settingDefaultValue: '',
        bindedControllerPropertieName: 'innerCaption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'expandedInnerCaption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'expandedInnerCaption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'collapsedInnerCaption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'collapsedInnerCaption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'innerExpanded',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'innerExpanded'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'iconClass',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'iconClass'
      });

      return componentSettingsMetadata;
    }),

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{#flexberry-toggler<br>' + '  caption=caption<br>' + '  expandedCaption=expandedCaption<br>' + '  collapsedCaption=collapsedCaption<br>' + '  expanded=expanded<br>' + '  iconClass=iconClass<br>' + '  componentName="myToggler"<br>' + '}}<br>' + '  {{t "forms.components-examples.flexberry-toggler.settings-example-inner.togglerContent"}}<br>' + '  {{#flexberry-toggler<br>' + '    caption=innerCaption<br>' + '    expandedCaption=expandedInnerCaption<br>' + '    collapsedCaption=collapsedInnerCaption<br>' + '    expanded=innerExpanded<br>' + '    iconClass=iconClass<br>' + '    componentName="myInnerToggler"<br>' + '  }}<br>' + '    {{t "forms.components-examples.flexberry-toggler.settings-example-inner.innerTogglerContent"}}<br>' + '  {{/flexberry-toggler}}<br>' + '{{/flexberry-toggler}}'));
    }
  });
});
define('dummy/controllers/components-examples/flexberry-toggler/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    /**
      Text for 'flexberry-togggler' component 'caption' property.
       @property caption
      @type String
     */
    caption: '',

    /**
      Text for 'flexberry-togggler' component 'expandedCaption' property.
       @property expandedCaption
      @type String
     */
    expandedCaption: null,

    /**
      Text for 'flexberry-togggler' component 'collapsedCaption' property.
       @property collapsedCaption
      @type String
     */
    collapsedCaption: null,

    /**
      CSS clasess for i tag.
       @property iconClass
      @type String
    */
    iconClass: '',

    /**
      Current visibility state.
       @property expanded
      @type Boolean
      @default true
    */
    expanded: true,

    /**
      Template text for 'flexberry-textbox' component.
       @property componentTemplateText
      @type String
     */
    componentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('componentTemplateText', new Ember.String.htmlSafe('{{#flexberry-toggler<br>' + '  caption=caption<br>' + '  expandedCaption=expandedCaption<br>' + '  collapsedCaption=collapsedCaption<br>' + '  expanded=true<br>' + '  iconClass=iconClass<br>' + '}}<br>' + '  {{t "forms.components-examples.flexberry-toggler.settings-example.togglerContent"}}<br>' + '{{/flexberry-toggler}}'));
    },

    /**
      Component settings metadata.
       @property componentSettingsMetadata
      @type Object[]
     */
    componentSettingsMetadata: Ember.computed(function () {
      var componentSettingsMetadata = Ember.A();
      componentSettingsMetadata.pushObject({
        settingName: 'caption',
        settingType: 'string',
        settingDefaultValue: '',
        bindedControllerPropertieName: 'caption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'expandedCaption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'expandedCaption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'collapsedCaption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'collapsedCaption'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'expanded',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'expanded'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'iconClass',
        settingType: 'string',
        settingDefaultValue: undefined,
        bindedControllerPropertieName: 'iconClass'
      });

      return componentSettingsMetadata;
    })
  });
});
define('dummy/controllers/components-examples/flexberry-tree/settings-example', ['exports', 'ember-flexberry/mixins/flexberry-treenode-actions-handler', 'ember-flexberry/objects/tree-node'], function (exports, _flexberryTreenodeActionsHandler, _treeNode) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend(_flexberryTreenodeActionsHandler.default, {
    /**
      Component's wrapper CSS classes.
       @property jsonTreeClass
      @type String
    */
    jsonTreeClass: '',

    /**
      Flag: indicates whether only one tree node can be expanded at the same time.
      If true, all expanded tree nodes will be automatically collapsed, on some other node expand.
       @property jsonTreeExclusive
      @type Boolean
      @default false
    */
    jsonTreeExclusive: false,

    /**
      Flag: indicates whether it is allowed for already expanded tree nodes to collapse.
       @property jsonTreeCollapsible
      @type Boolean
      @default true
    */
    jsonTreeCollapsible: true,

    /**
      Flag: indicates whether nested child nodes content opacity should be animated
      (if true, it may cause performance issues with many nested child nodes).
       @property jsonTreeAnimateChildren
      @type Boolean
      @default false
    */
    jsonTreeAnimateChildren: false,

    /**
      Tree nodes expand/collapse animation duration in milliseconds.
       @property jsonTreeDuration
      @type Number
      @default 350
    */
    jsonTreeDuration: 350,

    /**
      Tree nodes hierarchy with nodes settings.
       @property jsonTreeNodes
      @type TreeNodeObject[]
    */
    jsonTreeNodes: Ember.A([_treeNode.default.create({
      caption: 'Node 1 (with child nodes)',
      nodes: Ember.A([_treeNode.default.create({
        caption: 'Node 1.1 (leaf node)',
        nodes: null
      }), _treeNode.default.create({
        caption: 'Node 1.2 (with child nodes)',
        nodes: Ember.A([_treeNode.default.create({
          caption: 'Node 1.2.1 (with child nodes)',
          nodes: Ember.A([_treeNode.default.create({
            caption: 'Node 1.2.1.1 (leaf node)',
            nodes: null
          })])
        }), _treeNode.default.create({
          caption: 'Node 1.2.2 (leaf node)',
          nodes: null
        })])
      })])
    }), _treeNode.default.create({
      caption: 'Node 2 (leaf node)',
      nodes: null
    }), _treeNode.default.create({
      caption: 'Node 3 (with child nodes)',
      nodes: Ember.A([_treeNode.default.create({
        caption: 'Node 3.1 (leaf node)',
        nodes: null
      })])
    })]),

    /**
      Component's template text.
       @property jsonTreeComponentTemplateText
      @type String
    */
    jsonTreeComponentTemplateText: undefined,

    init: function init() {
      this._super.apply(this, arguments);
      this.set('jsonTreeComponentTemplateText', new Ember.String.htmlSafe('{{flexberry-tree<br>' + '  class=jsonTreeClass<br>' + '  exclusive=jsonTreeExclusive<br>' + '  collapsible=jsonTreeCollapsible<br>' + '  animateChildren=jsonTreeAnimateChildren<br>' + '  duration=jsonTreeDuration<br>' + '  nodes=(get-with-dynamic-actions this "jsonTreeNodes"<br>' + '    hierarchyPropertyName="nodes"<br>' + '    pathKeyword="nodePath"<br>' + '    dynamicActions=(array<br>' + '      (hash<br>' + '        on="headerClick"<br>' + '        actionName="onTreenodeHeaderClick"<br>' + '        actionArguments=(array "{% nodePath %}")<br>' + '      )<br>' + '    )<br>' + '  )<br>' + '}}'));
    },


    /**
      Component settings metadata.
      @property jsonTreeComponentSettingsMetadata
      @type Object[]
    */
    jsonTreeComponentSettingsMetadata: Ember.computed(function () {
      var componentSettingsMetadata = Ember.A();

      componentSettingsMetadata.pushObject({
        settingName: 'class',
        settingType: 'css',
        settingDefaultValue: '',
        settingAvailableItems: ['styled', 'fluid'],
        bindedControllerPropertieName: 'jsonTreeClass'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'exclusive',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'jsonTreeExclusive'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'collapsible',
        settingType: 'boolean',
        settingDefaultValue: true,
        bindedControllerPropertieName: 'jsonTreeCollapsible'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'animateChildren',
        settingType: 'boolean',
        settingDefaultValue: false,
        bindedControllerPropertieName: 'jsonTreeAnimateChildren'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'duration',
        settingType: 'number',
        settingDefaultValue: 350,
        bindedControllerPropertieName: 'jsonTreeDuration'
      });
      componentSettingsMetadata.pushObject({
        settingName: 'nodes',
        settingType: 'object',
        settingDefaultValue: null,
        bindedControllerPropertieName: 'jsonTreeNodes'
      });

      return componentSettingsMetadata;
    }),

    /**
      Path to controller's property representing latest clicked tree node.
       @property jsonTreeLatestClickedNodePath
      @type String
      @default null
    */
    jsonTreeLatestClickedNodePath: null,

    /**
      Component settings metadata for latest clicked tree node.
       @property jsonTreeLatestClickedNodeComponentSettingsMetadata
      @type Object[]
    */
    jsonTreeLatestClickedNodeComponentSettingsMetadata: Ember.computed('jsonTreeLatestClickedNodePath', function () {
      var jsonTreeLatestClickedNodePath = this.get('jsonTreeLatestClickedNodePath');
      var componentSettingsMetadata = Ember.A();

      if (Ember.isBlank(jsonTreeLatestClickedNodePath)) {
        return componentSettingsMetadata;
      }

      componentSettingsMetadata.pushObject({
        settingName: 'caption',
        settingType: 'string',
        settingDefaultValue: null,
        bindedControllerPropertieName: jsonTreeLatestClickedNodePath + '.caption'
      });

      return componentSettingsMetadata;
    }),

    actions: {
      /**
        Handles tree nodes 'headerClick' action.
         @method actions.onTreenodeHeaderClick
        @param {String} clickedNodePropertiesPath Path to controller's property representing clicked tree node.
        @param {Object} e Action's event object
        @param {Object} e.originalEvent [jQuery event object](http://api.jquery.com/category/events/event-object/)
        which describes event that triggers this action.
      */
      onTreenodeHeaderClick: function onTreenodeHeaderClick() {
        var _ref;

        var actionEventObject = (_ref = arguments.length - 1, arguments.length <= _ref ? undefined : arguments[_ref]);
        var clickedNodePropertiesPath = arguments.length <= 0 ? undefined : arguments[0];
        var clickedNodeSettingsPrefix = Ember.$(actionEventObject.originalEvent.currentTarget).closest('.tab.segment').attr('data-tab');

        // Remember latest clicked node path to a tree-related controller's property.
        this.set(clickedNodeSettingsPrefix + 'LatestClickedNodePath', clickedNodePropertiesPath);
      },
      onMyButtonClick: function onMyButtonClick() {
        window.alert('My button clicked');
      }
    }
  });
});
define('dummy/controllers/components-examples/modal-dialog/index', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    actions: {
      openLightbox: function openLightbox() {
        this.set('appContextSidepageIsOpen', false);
        this.set('appContextLightboxIsOpen', true);
        this.send('showModalDialog', 'modal/modal-dialog', { controller: 'components-examples/modal-dialog/index' });
      },
      openSidepage: function openSidepage() {
        this.set('appContextLightboxIsOpen', false);
        this.set('appContextSidepageIsOpen', true);
        this.send('showModalDialog', 'modal/modal-dialog', { controller: 'components-examples/modal-dialog/index' });
      },
      closeLightbox: function closeLightbox() {
        this.set('appContextLightboxIsOpen', false);
        if (!this.get('appContextSidepageIsOpen')) {
          this.send('removeModalDialog');
        }
      },
      closeSidepage: function closeSidepage() {
        this.set('appContextSidepageIsOpen', false);
        if (!this.get('appContextLightboxIsOpen')) {
          this.send('removeModalDialog');
        }
      }
    }
  });
});
define('dummy/controllers/components-examples/ui-message/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({

    module: 'message',

    /**
      A message can be set to visible to force itself to be shown.
       @property visible
      @type Boolean
      @default true
    */
    visible: true,

    /**
      A message can float above content that it is related to content.
       @property floating
      @type Boolean
      @default false
    */
    floating: false,

    /**
      A message can only take up the width of its content.
       @property compact
      @type Boolean
      @default false
    */
    compact: false,

    /**
      A message can be formatted to attach itself to other content.
       @property attached
      @type Boolean
      @default false
    */
    attached: false,

    /**
      A message that the user can choose to hide.
       @property closeable
      @type Boolean
      @default false
    */
    closeable: false,

    /**
      Message type.
       @property type
      @type String
      @default null
    */
    type: null,

    /**
      A message can be formatted to be different colors.
       @property color
      @type String
      @default null
    */
    color: null,

    /**
      A message can have different sizes.
        @property size
      @type String
      @default null
    */
    size: null,

    /**
      A message can contain an icon.
       @property icon
      @type String
      @default null
    */
    icon: null,

    /**
      Message title.
       @property caption
      @type String
      @default null
    */
    caption: null,

    /**
      Message body.
       @property message
      @type String
      @default null
    */
    message: null
  });
});
define('dummy/controllers/detail-edit-form', ['exports', 'ember-flexberry/controllers/detail-edit-form'], function (exports, _detailEditForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _detailEditForm.default;
    }
  });
});
define('dummy/controllers/edit-form', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _editForm.default;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-application-user-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
     Route name for transition after close edit form.
      @property parentRoute
     @type String
     @default 'ember-flexberry-dummy-application-user-list'
    */
    parentRoute: 'ember-flexberry-dummy-application-user-list'
  });
});
define('dummy/controllers/ember-flexberry-dummy-application-user-edit/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-application-user-edit'], function (exports, _emberFlexberryDummyApplicationUserEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _emberFlexberryDummyApplicationUserEdit.default;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-application-user-list', ['exports', 'ember-flexberry/controllers/list-form', 'dummy/mixins/list-form-controller-operations-indication'], function (exports, _listForm, _listFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormControllerOperationsIndication.default, {
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-application-user-edit'
     */
    editFormRoute: 'ember-flexberry-dummy-application-user-edit'
  });
});
define('dummy/controllers/ember-flexberry-dummy-comment-edit', ['exports', 'ember-flexberry/controllers/detail-edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _detailEditForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _detailEditForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Name of model.commentsVote edit route.
       @property commentsVoteEditRoute
      @type String
      @default 'ember-flexberry-dummy-comment-vote-edit'
     */
    commentsVoteEditRoute: 'ember-flexberry-dummy-comment-vote-edit',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);

      if (attr.kind === 'belongsTo') {
        if (model.modelName === 'ember-flexberry-dummy-comment-vote' && bindingPath === 'applicationUser') {
          cellComponent.componentProperties = {
            projection: 'ApplicationUserL',
            displayAttributeName: 'name',
            title: 'Application user',
            relationName: 'applicationUser',
            choose: 'showLookupDialog',
            remove: 'removeLookupValue'
          };
        }
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-comment-edit/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-comment-edit'], function (exports, _emberFlexberryDummyCommentEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _emberFlexberryDummyCommentEdit.default;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-comment-vote-edit', ['exports', 'ember-flexberry/controllers/detail-edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _detailEditForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _detailEditForm.default.extend(_editFormControllerOperationsIndication.default, {});
});
define('dummy/controllers/ember-flexberry-dummy-comment-vote-edit/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-comment-vote-edit'], function (exports, _emberFlexberryDummyCommentVoteEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var EmberFlexberryDummyCommentVoteEditNewController = _emberFlexberryDummyCommentVoteEdit.default;
  exports.default = EmberFlexberryDummyCommentVoteEditNewController;
});
define('dummy/controllers/ember-flexberry-dummy-localization-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-localization-list'
    */
    parentRoute: 'ember-flexberry-dummy-localization-list'
  });
});
define('dummy/controllers/ember-flexberry-dummy-localization-edit/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-localization-edit'], function (exports, _emberFlexberryDummyLocalizationEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _emberFlexberryDummyLocalizationEdit.default;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-localization-list', ['exports', 'ember-flexberry/controllers/list-form', 'dummy/mixins/list-form-controller-operations-indication'], function (exports, _listForm, _listFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormControllerOperationsIndication.default, {
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-localization-edit'
     */
    editFormRoute: 'ember-flexberry-dummy-localization-edit'
  });
});
define('dummy/controllers/ember-flexberry-dummy-multi-list-user-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/multi-list-controller', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _multiListController, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, _multiListController.default, {
    /**
     Route name for transition after close edit form.
      @property parentRoute
     @type String
     @default 'ember-flexberry-dummy-application-user-list'
    */
    parentRoute: 'ember-flexberry-dummy-multi-list',

    getCellComponent: null
  });
});
define('dummy/controllers/ember-flexberry-dummy-multi-list-user-edit/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-multi-list-user-edit'], function (exports, _emberFlexberryDummyMultiListUserEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _emberFlexberryDummyMultiListUserEdit.default;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-multi-list', ['exports', 'ember-flexberry/controllers/list-form', 'ember-flexberry/mixins/multi-list-controller'], function (exports, _listForm, _multiListController) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_multiListController.default, {});
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication', 'ember-i18n'], function (exports, _editForm, _editFormControllerOperationsIndication, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-list'
     */
    parentRoute: 'ember-flexberry-dummy-suggestion-list',

    /**
      Name of model.comments edit route.
       @property commentsEditRoute
      @type String
      @default 'ember-flexberry-dummy-comment-edit'
     */
    commentsEditRoute: 'ember-flexberry-dummy-comment-edit',

    title: (0, _emberI18n.translationMacro)('forms.application.flexberry-objectlistview-modal-question-caption.delete-at-editform-question-caption'),

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);
      var i18n = this.get('i18n');
      if (attr.kind === 'belongsTo') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              preview: 'previewLookupValue',
              displayAttributeName: 'name',
              title: i18n.t('forms.ember-flexberry-dummy-application-user-list.caption'),
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true,
              showPreviewButton: true,
              previewFormRoute: 'ember-flexberry-dummy-application-user-edit'
            };
            break;

          case 'ember-flexberry-dummy-comment+author':
            cellComponent.componentProperties = {
              choose: 'showLookupDialog',
              remove: 'removeLookupValue',
              displayAttributeName: 'name',
              required: true,
              relationName: 'author',
              projection: 'ApplicationUserL',
              autocomplete: true
            };
            break;

        }
      } else if (attr.kind === 'attr') {
        switch (model.modelName + '+' + bindingPath) {
          case 'ember-flexberry-dummy-vote+author.eMail':
            cellComponent.componentProperties = {
              readonly: true
            };
        }
      }

      return cellComponent;
    },


    actions: {
      /**
        This method returns custom properties for lookup window.
        @method getLookupFolvProperties
         @param {Object} options Parameters of lookup that called this method.
        @param {String} [options.projection] Lookup projection.
        @param {String} [options.relationName] Lookup relation name.
        @return {Object} Set of options for lookup window.
       */
      getLookupFolvProperties: function getLookupFolvProperties(options) {
        var methodArgs = Ember.merge({
          projection: undefined,
          relationName: undefined
        }, options);

        if (methodArgs.relationName === 'editor1' || methodArgs.relationName === 'author') {
          return {
            refreshButton: true,
            enableFilters: true,
            filterButton: true,
            colsConfigButton: true
          };
        }
      },

      /**
        Show delete modal dialog before deleting.
      */
      delete: function _delete(skipTransition) {
        var _this = this;

        this.set('approveDeleting', function () {
          _this.delete(skipTransition);
        });
        this.set('denyDeleting', function () {});

        this.send('showModalDialog', 'modal/delete-record-modal-dialog', {
          controller: 'ember-flexberry-dummy-suggestion-edit'
        });
      },


      /**
        Close modal dialog and clear actions.
      */
      closeModalDialog: function closeModalDialog() {
        this.set('approveDeleting', null);
        this.set('denyDeleting', null);

        this.send('removeModalDialog');
      }
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-edit/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-suggestion-edit'], function (exports, _emberFlexberryDummySuggestionEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _emberFlexberryDummySuggestionEdit.default;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-file-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-file-list'
    */
    parentRoute: 'ember-flexberry-dummy-suggestion-file-list'
  });
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-file-edit/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-suggestion-file-edit'], function (exports, _emberFlexberryDummySuggestionFileEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _emberFlexberryDummySuggestionFileEdit.default;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-file-list', ['exports', 'ember-flexberry/controllers/list-form', 'dummy/mixins/list-form-controller-operations-indication'], function (exports, _listForm, _listFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormControllerOperationsIndication.default, {
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-file-edit'
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-file-edit'
  });
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-list', ['exports', 'ember-flexberry/controllers/list-form', 'dummy/mixins/list-form-controller-operations-indication', 'ember-i18n'], function (exports, _listForm, _listFormControllerOperationsIndication, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormControllerOperationsIndication.default, {
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-edit'
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-edit',

    exportExcelProjection: 'SuggestionL',

    title: (0, _emberI18n.translationMacro)('forms.application.flexberry-objectlistview-modal-question-caption.delete-at-listform-question-caption'),

    actions: {
      /**
        Hook that executes before deleting all records on all pages.
        Need to be overriden in corresponding application controller.
      */
      beforeDeleteAllRecords: function beforeDeleteAllRecords(modelName, data) {
        data.cancel = false;
      },


      /**
        Show delete modal dialog before deleting.
      */
      beforeDeleteRecord: function beforeDeleteRecord() {
        var _this = this;

        return new Ember.RSVP.Promise(function (resolve, reject) {
          _this.set('approveDeleting', resolve);
          _this.set('denyDeleting', reject);

          _this.send('showModalDialog', 'modal/delete-record-modal-dialog', {
            controller: 'ember-flexberry-dummy-suggestion-list'
          });
        });
      },

      /**
        Close modal dialog and clear actions.
      */
      closeModalDialog: function closeModalDialog() {
        this.set('approveDeleting', null);
        this.set('denyDeleting', null);

        this.send('removeModalDialog');
      }
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-type-edit', ['exports', 'ember-flexberry/controllers/edit-form', 'ember-flexberry/mixins/edit-form-controller-operations-indication'], function (exports, _editForm, _editFormControllerOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormControllerOperationsIndication.default, {
    /**
      Route name for transition after close edit form.
       @property parentRoute
      @type String
      @default 'ember-flexberry-dummy-application-user-list'
     */
    parentRoute: 'ember-flexberry-dummy-suggestion-type-list',

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);

      if (attr.kind === 'belongsTo') {
        if (model.modelName === 'ember-flexberry-dummy-localized-suggestion-type' && bindingPath === 'localization') {
          cellComponent.componentProperties = {
            projection: 'LocalizationL',
            displayAttributeName: 'name',
            title: 'Localization',
            relationName: 'localization',
            choose: 'showLookupDialog',
            remove: 'removeLookupValue'
          };
        }
      }

      return cellComponent;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-type-edit/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-suggestion-type-edit'], function (exports, _emberFlexberryDummySuggestionTypeEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _emberFlexberryDummySuggestionTypeEdit.default;
    }
  });
});
define('dummy/controllers/ember-flexberry-dummy-suggestion-type-list', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of related edit form route.
       @property editFormRoute
      @type String
      @default 'ember-flexberry-dummy-suggestion-type-edit'
     */
    editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit',

    exportExcelProjection: 'SuggestionTypeL'
  });
});
define('dummy/controllers/ember-flexberry-dummy-toggler-example-master-e', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
     Route name for transition after close edit form.
      @property parentRoute
     @type String
     @default 'components-examples/flexberry-toggler/ge-into-toggler-example'
    */
    parentRoute: 'components-examples/flexberry-toggler/ge-into-toggler-example'
  });
});
define('dummy/controllers/ember-flexberry-dummy-toggler-example-master-e/new', ['exports', 'dummy/controllers/ember-flexberry-dummy-toggler-example-master-e'], function (exports, _emberFlexberryDummyTogglerExampleMasterE) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var EmberFlexberryDummyTogglerExampleMasterENewController = _emberFlexberryDummyTogglerExampleMasterE.default;
  exports.default = EmberFlexberryDummyTogglerExampleMasterENewController;
});
define('dummy/controllers/filters-dialog', ['exports', 'ember-flexberry/controllers/filters-dialog'], function (exports, _filtersDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _filtersDialog.default;
});
define('dummy/controllers/flexberry-file-view-dialog', ['exports', 'ember-flexberry/controllers/flexberry-file-view-dialog'], function (exports, _flexberryFileViewDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryFileViewDialog.default;
});
define('dummy/controllers/i-i-s-caseberry-logging-objects-application-log-e', ['exports', 'ember-flexberry/controllers/i-i-s-caseberry-logging-objects-application-log-e'], function (exports, _iISCaseberryLoggingObjectsApplicationLogE) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iISCaseberryLoggingObjectsApplicationLogE.default;
    }
  });
});
define('dummy/controllers/i-i-s-caseberry-logging-objects-application-log-l', ['exports', 'ember-flexberry/controllers/i-i-s-caseberry-logging-objects-application-log-l'], function (exports, _iISCaseberryLoggingObjectsApplicationLogL) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iISCaseberryLoggingObjectsApplicationLogL.default;
    }
  });
});
define('dummy/controllers/integration-examples/edit-form/readonly-mode', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Flag: indicates whether the form is in readonly mode or not.
       @property readonly
      @type Boolean
      @default true
     */
    readonly: true,

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {DS.Model} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
     */
    /* eslint-disable no-unused-vars */
    getCellComponent: function getCellComponent(attr, bindingPath, model) {
      var cellComponent = this._super.apply(this, arguments);

      if (attr.kind === 'belongsTo' && bindingPath === 'master') {
        cellComponent.componentProperties = {
          projection: 'MasterL',
          displayAttributeName: 'text',
          title: 'Master',
          relationName: 'master',
          choose: 'showLookupDialog',
          remove: 'removeLookupValue'
        };
      }

      if (attr.kind === 'belongsTo' && bindingPath === 'masterDropdown') {
        cellComponent.componentProperties = {
          projection: 'MasterDropdownL',
          displayAttributeName: 'text',
          dropdown: true,
          title: 'Master dropdown',
          relationName: 'masterDropdown',
          choose: 'showLookupDialog',
          remove: 'removeLookupValue'
        };
      }

      return cellComponent;
    }
    /* eslint-enable no-unused-vars */
  });
});
define('dummy/controllers/integration-examples/edit-form/validation', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Lookup events service.
    */
    lookupEvents: Ember.inject.service('lookup-events'),

    actions: {
      /**
        Handles click on lookup's choose button.
      */
      showLookupDialog: function showLookupDialog() {
        // Create new master & add to model.
        var master = this.get('store').createRecord('integration-examples/edit-form/validation/master', { text: 'Master text' });
        this.get('model').set('master', master);

        this.get('lookupEvents').lookupDialogOnHiddenTrigger('IntegrationExamplesValidationsMaster');
      }
    }
  });
});
define('dummy/controllers/list-form', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _listForm.default;
    }
  });
});
define('dummy/controllers/log-service-examples/clear-log-form', ['exports', 'dummy/config/environment', 'ember-flexberry-data/utils/get-serialized-date-value', 'ember-flexberry-data/query/builder', 'ember-flexberry-data/query/filter-operator'], function (exports, _environment, _getSerializedDateValue, _builder, _filterOperator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({
    logRecordsTotalCount: 0,
    logRecordsOlderDate: null,
    logRecordsOlderDateCount: 0,
    queryInExecutingState: false,
    getCounts: function getCounts() {
      var _this2 = this;

      var _this = this;
      this.set('queryInExecutingState', true);
      var modelName = 'i-i-s-caseberry-logging-objects-application-log';
      var builder = new _builder.default(this.store, modelName).top(1).count();
      this.store.query(modelName, builder.build()).then(function (data) {
        _this.set('logRecordsTotalCount', data.meta.count);
        if (_this.logRecordsOlderDate) {
          builder = new _builder.default(_this2.store, modelName).top(1).where('timestamp', _filterOperator.default.Leq, _this.logRecordsOlderDate).count();
          _this2.store.query(modelName, builder.build()).then(function (data) {
            _this.set('logRecordsOlderDateCount', data.meta.count);
            _this2.set('queryInExecutingState', false);
          });
        } else {
          _this2.set('queryInExecutingState', false);
        }
      });
    },

    actions: {
      getCounts: function getCounts() {
        this.getCounts();
      },
      clearLogRecords: function clearLogRecords() {
        var _this = this;
        this.set('queryInExecutingState', true);
        var date = _this.logRecordsOlderDate;
        if (!date) {
          date = new Date();
        }

        var stringedDate = _getSerializedDateValue.default.call(_this, date);
        stringedDate = stringedDate.substring(0, stringedDate.indexOf('T'));

        Ember.$.ajax({
          type: 'GET',
          url: _environment.default.APP.backendUrls.api + '/ClearLogRecords(dateTime=\'' + stringedDate + '\')',
          /* eslint-disable no-unused-vars */
          success: function success(result) {
            _this.set('queryInExecutingState', false);
            _this.getCounts();
          },

          /* eslint-enable no-unused-vars */
          error: function error(xhr, textStatus, errorThrown) {
            _this.set('queryInExecutingState', false);
            window.alert(textStatus + ' ' + errorThrown + ' Please check browser error console.');
          }
        });
      }
    }
  });
});
define('dummy/controllers/log-service-examples/settings-example', ['exports', 'ember-flexberry/controllers/i-i-s-caseberry-logging-objects-application-log-l'], function (exports, _iISCaseberryLoggingObjectsApplicationLogL) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _iISCaseberryLoggingObjectsApplicationLogL.default.extend({
    /**
      Object list view custom buttons, which will be used to imitate different log service events.
       @property objectListViewCustomButtons
      @type Object[]
    */
    objectListViewCustomButtons: Ember.computed('i18n.locale', function () {
      return [{
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.throw-exception-button-caption'),
        buttonAction: 'onThrowExceptionButtonClick',
        buttonClasses: 'small red'
      }, {
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.reject-rsvp-promise-button-caption'),
        buttonAction: 'onRejectRsvpPromiseButtonClick',
        buttonClasses: 'small red'
      }, {
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.ember-assert-button-caption'),
        buttonAction: 'onEmberAssertButtonClick',
        buttonClasses: 'small red'
      }, {
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-error-button-caption'),
        buttonAction: 'onEmberLoggerErrorButtonClick',
        buttonClasses: 'small red'
      }, {
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-warn-button-caption'),
        buttonAction: 'onEmberLoggerWarnButtonClick',
        buttonClasses: 'small orange'
      }, {
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.ember-deprecate-button-caption'),
        buttonAction: 'onEmberDeprecateButtonClick',
        buttonClasses: 'small yellow'
      }, {
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-log-button-caption'),
        buttonAction: 'onEmberLoggerLogButtonClick',
        buttonClasses: 'small green'
      }, {
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-info-button-caption'),
        buttonAction: 'onEmberLoggerInfoButtonClick',
        buttonClasses: 'small teal'
      }, {
        buttonName: this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-debug-button-caption'),
        buttonAction: 'onEmberLoggerDebugButtonClick',
        buttonClasses: 'small blue'
      }];
    }),

    messagesToRefreshList: null,

    init: function init() {
      this._super.apply(this, arguments);
      this.get('logService').on('error', this, this._refreshList);
      this.get('logService').on('warn', this, this._refreshList);
      this.get('logService').on('info', this, this._refreshList);
      this.get('logService').on('log', this, this._refreshList);
      this.get('logService').on('debug', this, this._refreshList);
      this.get('logService').on('deprecation', this, this._refreshList);
      this.get('logService').on('promise', this, this._refreshList);

      var i18nService = this.get('i18n');
      var messagesToRefreshList = [i18nService.t('forms.log-service-examples.settings-example.throw-exception-button-message'), i18nService.t('forms.log-service-examples.settings-example.reject-rsvp-promise-button-message'), i18nService.t('forms.log-service-examples.settings-example.ember-assert-button-message'), i18nService.t('forms.log-service-examples.settings-example.ember-logger-error-button-message'), i18nService.t('forms.log-service-examples.settings-example.ember-logger-warn-button-message'), i18nService.t('forms.log-service-examples.settings-example.ember-deprecate-button-message'), i18nService.t('forms.log-service-examples.settings-example.ember-logger-log-button-message'), i18nService.t('forms.log-service-examples.settings-example.ember-logger-info-button-message'), i18nService.t('forms.log-service-examples.settings-example.ember-logger-debug-button-message')];

      this.set('messagesToRefreshList', messagesToRefreshList);
    },
    willDestroy: function willDestroy() {
      this.get('logService').off('error', this, this._refreshList);
      this.get('logService').off('warn', this, this._refreshList);
      this.get('logService').off('info', this, this._refreshList);
      this.get('logService').off('log', this, this._refreshList);
      this.get('logService').off('debug', this, this._refreshList);
      this.get('logService').off('deprecation', this, this._refreshList);
      this.get('logService').off('promise', this, this._refreshList);
    },


    actions: {
      /**
        Handles throw exception button click.
        Emulates exception thrown somewhere in application.
         @method actions.onThrowExceptionButtonClick
        @public
      */
      onThrowExceptionButtonClick: function onThrowExceptionButtonClick() {
        throw new Error(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.throw-exception-button-message'));
      },


      /**
        Handles throw exception button click.
        Emulates exception thrown somewhere in application.
         @method actions.onRejectRsvpPromiseButtonClick
        @public
      */
      onRejectRsvpPromiseButtonClick: function onRejectRsvpPromiseButtonClick() {
        Ember.RSVP.reject(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.reject-rsvp-promise-button-message'));
      },


      /**
        Handles ember assert button click.
        Emulates failed assert call happened somewhere in application.
         @method actions.onEmberAssertButtonClick
        @public
      */
      onEmberAssertButtonClick: function onEmberAssertButtonClick() {
        (true && !(false) && Ember.assert(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.ember-assert-button-message'), false));
      },


      /**
        Handles ember logger error button click.
        Emulates Ember.Logger.error call happened somewhere in application.
         @method actions.onEmberLoggerErrorButtonClick
        @public
      */
      onEmberLoggerErrorButtonClick: function onEmberLoggerErrorButtonClick() {
        Ember.Logger.error(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-error-button-message'));
      },


      /**
        Handles ember logger warn button click.
        Emulates Ember.warn call happened somewhere in application.
         @method actions.onEmberLoggerWarnButtonClick
        @public
      */
      onEmberLoggerWarnButtonClick: function onEmberLoggerWarnButtonClick() {
        (true && Ember.warn(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-warn-button-message'), false, { id: 'ember-flexberry-debug.feature-logger-warn-test' }));
      },


      /**
        Handles ember deprecate button click.
        Emulates Ember.deprecate call happened somewhere in application.
         @method actions.onEmberDeprecateButtonClick
        @public
      */
      onEmberDeprecateButtonClick: function onEmberDeprecateButtonClick() {
        Ember.deprecate(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.ember-deprecate-button-message'), false, { id: 'ember-flexberry-debug.feature-logger-deprecate-test', until: '0' });
      },


      /**
        Handles ember logger log button click.
        Emulates Ember.Logger.log call happened somewhere in application.
         @method actions.onEmberLoggerLogButtonClick
        @public
      */
      onEmberLoggerLogButtonClick: function onEmberLoggerLogButtonClick() {
        Ember.Logger.log(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-log-button-message'));
      },


      /**
        Handles ember logger info button click.
        Emulates Ember.Logger.info call happened somewhere in application.
         @method actions.onEmberLoggerInfoButtonClick
        @public
      */
      onEmberLoggerInfoButtonClick: function onEmberLoggerInfoButtonClick() {
        Ember.Logger.info(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-info-button-message'));
      },


      /**
        Handles ember logger debug button click.
        Emulates Ember.debug call happened somewhere in application.
         @method actions.onEmberLoggerDebugButtonClick
        @public
      */
      onEmberLoggerDebugButtonClick: function onEmberLoggerDebugButtonClick() {
        Ember.debug(this._generateUniqueMessagePrefix() + this.get('i18n').t('forms.log-service-examples.settings-example.ember-logger-debug-button-message'));
      }
    },

    /**
      Method to get type and attributes of a component,
      which will be embeded in object-list-view cell.
       @method getCellComponent.
      @param {Object} attr Attribute of projection property related to current table cell.
      @param {String} bindingPath Path to model property related to current table cell.
      @param {Object} modelClass Model class of data record related to current table row.
      @return {Object} Object containing name & properties of component, which will be used to render current table cell.
      { componentName: 'my-component',  componentProperties: { ... } }.
    */
    /* eslint-disable no-unused-vars */
    getCellComponent: function getCellComponent(attr, bindingPath, modelClass) {
      if (bindingPath === 'timestamp') {
        return {
          componentName: 'object-list-view-cell',
          componentProperties: {
            dateFormat: 'DD.MM.YYYY, hh:mm:ss'
          }
        };
      }

      return this._super.apply(this, arguments);
    },
    /* eslint-enable no-unused-vars */

    /**
      Generates unique message prefix to avoid possible lost of same messages.
      If several message have same content logging service send only first to avoid possible loop on error sending stage.
       @method _generateUniqueMessagePrefix
      @return {String} Unique message prefix.
      @private
    */
    _generateUniqueMessagePrefix: function _generateUniqueMessagePrefix() {
      return '№' + Ember.generateGuid(null, '') + ': ';
    },


    /**
      Refreshes list of log messages on form.
       @method _refreshList
      @private
    */
    _refreshList: function _refreshList(applicationLogModel) {
      var messagesToRefreshList = this.get('messagesToRefreshList');
      if (applicationLogModel) {
        var message = applicationLogModel.get('message');
        var needToRefresh = false;
        for (var i = 0; i < messagesToRefreshList.length; i++) {
          if (message.indexOf(messagesToRefreshList[i]) > -1) {
            needToRefresh = true;
            break;
          }
        }

        if (needToRefresh) {
          this.send('refreshList');
        }
      }
    }
  });
});
define('dummy/controllers/login', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Controller.extend({

    actions: {

      /**
        Обработчик события 'submit' логин-формы.
         @method onLoginFormSubmit.login
      */
      onLoginFormSubmit: function onLoginFormSubmit() {
        this.transitionToRoute('index');
      }
    }
  });
});
define('dummy/controllers/lookup-dialog', ['exports', 'ember-flexberry/controllers/lookup-dialog'], function (exports, _lookupDialog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _lookupDialog.default;
});
define('dummy/controllers/new-platform-flexberry-services-lock-list', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/controllers/new-platform-flexberry-services-lock-list'], function (exports, _editForm, _newPlatformFlexberryServicesLockList) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _newPlatformFlexberryServicesLockList.default.extend({
    /**
      Current value `defaultBehaviorLock.openReadOnly` from {{#crossLink "EditFormRoute"}}{{/crossLink}}.
       @property openReadOnly
      @type Boolean
      @default false
    */
    openReadOnly: false,

    /**
      Current value `defaultBehaviorLock.unlockObject` from {{#crossLink "EditFormRoute"}}{{/crossLink}}.
       @property unlockObject
      @type Boolean
      @default false
    */
    unlockObject: false,

    /**
      Custom buttons for `flexberry-objectlistview` on `new-platform-flexberry-services-lock-list` route.
       @property customButtons
      @type Array
    */
    customButtons: Ember.computed('i18n.locale', 'openReadOnly', 'unlockObject', function () {
      var i18n = this.get('i18n');
      var baseClasses = 'floated tiny compact';
      var openReadOnly = this.get('openReadOnly') ? 'positive' : 'negative';
      var unlockObject = this.get('unlockObject') ? 'positive' : 'negative';
      return [{
        buttonName: i18n.t('forms.new-platform-flexberry-services-lock-list.change-user-name'),
        buttonAction: 'changeUserName',
        buttonClasses: baseClasses
      }, {
        buttonName: i18n.t('forms.new-platform-flexberry-services-lock-list.open-read-only'),
        buttonAction: 'openReadOnly',
        buttonClasses: baseClasses + ' ' + openReadOnly
      }, {
        buttonName: i18n.t('forms.new-platform-flexberry-services-lock-list.unlock-object'),
        buttonAction: 'unlockObject',
        buttonClasses: baseClasses + ' ' + unlockObject
      }];
    }),

    actions: {
      /**
        Change current value `userName` for {{#crossLink "EditFormRoute"}}{{/crossLink}}.
         @method actions.changeUserName
      */
      changeUserName: function changeUserName() {
        var i18n = this.get('i18n');
        var userService = Ember.getOwner(this).lookup('service:user');
        var currentUserName = userService.getCurrentUserName();
        var newUserName = window.prompt(i18n.t('forms.new-platform-flexberry-services-lock-list.enter-new-user-name'), currentUserName);
        if (typeof newUserName === 'string') {
          userService.set('userName', newUserName);
        }
      },


      /**
        Change current value `defaultBehaviorLock.openReadOnly` for {{#crossLink "EditFormRoute"}}{{/crossLink}}.
         @method actions.openReadOnly
      */
      openReadOnly: function openReadOnly() {
        var currentDefaultBehaviorLock = _editForm.default.create().get('defaultBehaviorLock');
        currentDefaultBehaviorLock.openReadOnly = !currentDefaultBehaviorLock.openReadOnly;
        _editForm.default.reopen({ defaultBehaviorLock: currentDefaultBehaviorLock });
        this.set('openReadOnly', currentDefaultBehaviorLock.openReadOnly);
      },


      /**
        Change current value `defaultBehaviorLock.unlockObject` for {{#crossLink "EditFormRoute"}}{{/crossLink}}.
         @method actions.unlockObject
      */
      unlockObject: function unlockObject() {
        var currentDefaultBehaviorLock = _editForm.default.create().get('defaultBehaviorLock');
        currentDefaultBehaviorLock.unlockObject = !currentDefaultBehaviorLock.unlockObject;
        _editForm.default.reopen({ defaultBehaviorLock: currentDefaultBehaviorLock });
        this.set('unlockObject', currentDefaultBehaviorLock.unlockObject);
      }
    },

    /**
      An overridable method called when objects are instantiated.
      [More info](https://www.emberjs.com/api/ember/release/classes/Route/methods/init?anchor=init).
       @method init
    */
    init: function init() {
      this._super.apply(this, arguments);
      var currentDefaultBehaviorLock = _editForm.default.create().get('defaultBehaviorLock');
      if (currentDefaultBehaviorLock) {
        this.set('openReadOnly', currentDefaultBehaviorLock.openReadOnly);
        this.set('unlockObject', currentDefaultBehaviorLock.unlockObject);
      }
    }
  });
});
define('dummy/controllers/user-setting-forms/user-setting-delete', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Property to form array of special structures of custom user buttons.
       @property customButtons
      @type Array
     */
    customButtons: Ember.computed('i18n.locale', function () {
      var i18n = this.get('i18n');
      return [{
        buttonName: i18n.t('forms.user-setting-forms.user-setting-delete.all-del-button-name'),
        buttonAction: 'allDelButtonAction',
        buttonClasses: 'all-del-user-button'
      }];
    }),

    actions: {
      /**
        Handler for click on custom user button.
         @method allDelButtonAction
       */
      allDelButtonAction: function allDelButtonAction() {
        var _this = this;

        var proms = [];
        this.get('store').findAll('new-platform-flexberry-flexberry-user-setting').then(function (settings) {
          settings.forEach(function (setting) {
            proms.push(setting.destroyRecord());
          });
        }).then(function () {
          Ember.RSVP.all(proms).then(function () {
            _this.get('target').router.refresh();
          });
        });
      }
    }
  });
});
define('dummy/ember-flexberry/tests/addon.lint-test', [], function () {
  'use strict';

  QUnit.module('ESLint | addon');

  QUnit.test('addon/components/advlimit-dialog-content.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/advlimit-dialog-content.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/colsconfig-dialog-content.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/colsconfig-dialog-content.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/filters-dialog-content.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/filters-dialog-content.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-base-component.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-base-component.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-button.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-button.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-checkbox.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-checkbox.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-colorpicker.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-colorpicker.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-ddau-checkbox.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-ddau-checkbox.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-ddau-slider.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-ddau-slider.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-dropdown.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-dropdown.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-error.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-error.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-field.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-field.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-file.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-file.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-groupedit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-groupedit.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-icon.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-icon.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-jsonarea.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-jsonarea.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-lookup.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-lookup.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-menu.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-menu.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-menuitem.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-menuitem.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-objectlistview.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-objectlistview.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-sidebar.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-sidebar.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-simpledatetime.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-simpledatetime.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-sitemap-guideline.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-sitemap-guideline.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-sitemap.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-sitemap.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-tab-bar.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-tab-bar.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-text-cell.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-text-cell.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-textarea.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-textarea.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-textbox.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-textbox.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-toggler.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-toggler.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-tree.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-tree.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-treenode.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-treenode.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-validationmessage.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-validationmessage.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/flexberry-validationsummary.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/flexberry-validationsummary.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/form-load-time-tracker.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/form-load-time-tracker.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/groupedit-toolbar.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/groupedit-toolbar.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/mobile/flexberry-file.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/mobile/flexberry-file.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/mobile/flexberry-groupedit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/mobile/flexberry-groupedit.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/mobile/flexberry-objectlistview.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/mobile/flexberry-objectlistview.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/mobile/flexberry-sitemap-guideline.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/mobile/flexberry-sitemap-guideline.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/mobile/object-list-view-row.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/mobile/object-list-view-row.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/mobile/object-list-view.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/mobile/object-list-view.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/modal-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/modal-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/object-list-view-cell.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/object-list-view-cell.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/object-list-view-row.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/object-list-view-row.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/object-list-view-single-column-cell.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/object-list-view-single-column-cell.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/object-list-view.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/object-list-view.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/olv-filter-interval.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/olv-filter-interval.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/olv-setconfigdialogbutton.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/olv-setconfigdialogbutton.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/olv-toolbar.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/olv-toolbar.js should pass ESLint\n\n');
  });

  QUnit.test('addon/components/ui-message.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/components/ui-message.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/advlimit-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/advlimit-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/colsconfig-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/colsconfig-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/detail-edit-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/detail-edit-form.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/edit-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/edit-form.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/filters-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/filters-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/flexberry-file-view-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/flexberry-file-view-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/i-i-s-caseberry-logging-objects-application-log-e.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/i-i-s-caseberry-logging-objects-application-log-e.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/i-i-s-caseberry-logging-objects-application-log-l.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/i-i-s-caseberry-logging-objects-application-log-l.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/list-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/list-form.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/lookup-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/lookup-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('addon/controllers/new-platform-flexberry-services-lock-list.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/controllers/new-platform-flexberry-services-lock-list.js should pass ESLint\n\n');
  });

  QUnit.test('addon/helpers/array-contains.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/helpers/array-contains.js should pass ESLint\n\n');
  });

  QUnit.test('addon/helpers/array.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/helpers/array.js should pass ESLint\n\n');
  });

  QUnit.test('addon/helpers/flexberry-enum.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/helpers/flexberry-enum.js should pass ESLint\n\n');
  });

  QUnit.test('addon/helpers/get-formatted.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/helpers/get-formatted.js should pass ESLint\n\n');
  });

  QUnit.test('addon/helpers/get-with-dynamic-actions.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/helpers/get-with-dynamic-actions.js should pass ESLint\n\n');
  });

  QUnit.test('addon/helpers/readonly-cell.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/helpers/readonly-cell.js should pass ESLint\n\n');
  });

  QUnit.test('addon/initializers/i18n.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/initializers/i18n.js should pass ESLint\n\n');
  });

  QUnit.test('addon/initializers/log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/initializers/log.js should pass ESLint\n\n');
  });

  QUnit.test('addon/initializers/moment.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/initializers/moment.js should pass ESLint\n\n');
  });

  QUnit.test('addon/initializers/perf.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/initializers/perf.js should pass ESLint\n\n');
  });

  QUnit.test('addon/initializers/render-perf-logger.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/initializers/render-perf-logger.js should pass ESLint\n\n');
  });

  QUnit.test('addon/initializers/user-settings.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/initializers/user-settings.js should pass ESLint\n\n');
  });

  QUnit.test('addon/instance-initializers/block-slots.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/instance-initializers/block-slots.js should pass ESLint\n\n');
  });

  QUnit.test('addon/instance-initializers/device.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/instance-initializers/device.js should pass ESLint\n\n');
  });

  QUnit.test('addon/instance-initializers/i18n.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/instance-initializers/i18n.js should pass ESLint\n\n');
  });

  QUnit.test('addon/instance-initializers/lock.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/instance-initializers/lock.js should pass ESLint\n\n');
  });

  QUnit.test('addon/instance-initializers/log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/instance-initializers/log.js should pass ESLint\n\n');
  });

  QUnit.test('addon/instance-initializers/moment.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/instance-initializers/moment.js should pass ESLint\n\n');
  });

  QUnit.test('addon/instance-initializers/perf.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/instance-initializers/perf.js should pass ESLint\n\n');
  });

  QUnit.test('addon/locales/en/translations.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/locales/en/translations.js should pass ESLint\n\n');
  });

  QUnit.test('addon/locales/ru/translations.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/locales/ru/translations.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/colsconfig-dialog-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/colsconfig-dialog-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/dom-actions.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/dom-actions.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/dynamic-actions.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/dynamic-actions.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/dynamic-properties.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/dynamic-properties.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/edit-form-controller-operations-indication.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/edit-form-controller-operations-indication.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/edit-form-route-operations-indication.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/edit-form-route-operations-indication.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/errorable-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/errorable-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/errorable-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/errorable-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/fixable-component.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/fixable-component.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-ddau-checkbox-actions-handler.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-ddau-checkbox-actions-handler.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-ddau-slider-actions-handler.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-ddau-slider-actions-handler.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-file-compatible-component.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-file-compatible-component.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-file-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-file-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-groupedit-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-groupedit-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-lookup-compatible-component.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-lookup-compatible-component.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-lookup-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-lookup-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-objectlistview-hierarchical-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-objectlistview-hierarchical-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-objectlistview-hierarchical-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-objectlistview-hierarchical-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-objectlistview-on-edit-form-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-objectlistview-on-edit-form-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-objectlistview-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-objectlistview-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/flexberry-treenode-actions-handler.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/flexberry-treenode-actions-handler.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/limited-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/limited-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/limited-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/limited-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/lock-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/lock-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/modal-application-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/modal-application-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/multi-list-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/multi-list-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/multi-list-model-edit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/multi-list-model-edit.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/multi-list-model.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/multi-list-model.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/multi-list-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/multi-list-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/olv-toolbar-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/olv-toolbar-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/paginated-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/paginated-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/paginated-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/paginated-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/predicate-from-filters.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/predicate-from-filters.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/reload-list-mixin.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/reload-list-mixin.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/required-actions.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/required-actions.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/sortable-column.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/sortable-column.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/sortable-controller.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/sortable-controller.js should pass ESLint\n\n');
  });

  QUnit.test('addon/mixins/sortable-route.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/mixins/sortable-route.js should pass ESLint\n\n');
  });

  QUnit.test('addon/models/flexberry-adv-limit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/models/flexberry-adv-limit.js should pass ESLint\n\n');
  });

  QUnit.test('addon/models/i-i-s-caseberry-logging-objects-application-log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/models/i-i-s-caseberry-logging-objects-application-log.js should pass ESLint\n\n');
  });

  QUnit.test('addon/models/new-platform-flexberry-flexberry-user-setting.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/models/new-platform-flexberry-flexberry-user-setting.js should pass ESLint\n\n');
  });

  QUnit.test('addon/models/new-platform-flexberry-services-lock.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/models/new-platform-flexberry-services-lock.js should pass ESLint\n\n');
  });

  QUnit.test('addon/objects/dynamic-action.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/objects/dynamic-action.js should pass ESLint\n\n');
  });

  QUnit.test('addon/objects/list-parameters.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/objects/list-parameters.js should pass ESLint\n\n');
  });

  QUnit.test('addon/objects/tree-node.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/objects/tree-node.js should pass ESLint\n\n');
  });

  QUnit.test('addon/objects/validation-data.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/objects/validation-data.js should pass ESLint\n\n');
  });

  QUnit.test('addon/resolver.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/resolver.js should pass ESLint\n\n');
  });

  QUnit.test('addon/routes/edit-form-new.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/routes/edit-form-new.js should pass ESLint\n\n');
  });

  QUnit.test('addon/routes/edit-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/routes/edit-form.js should pass ESLint\n\n');
  });

  QUnit.test('addon/routes/i-i-s-caseberry-logging-objects-application-log-e.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/routes/i-i-s-caseberry-logging-objects-application-log-e.js should pass ESLint\n\n');
  });

  QUnit.test('addon/routes/i-i-s-caseberry-logging-objects-application-log-l.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/routes/i-i-s-caseberry-logging-objects-application-log-l.js should pass ESLint\n\n');
  });

  QUnit.test('addon/routes/list-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/routes/list-form.js should pass ESLint\n\n');
  });

  QUnit.test('addon/routes/new-platform-flexberry-services-lock-list.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/routes/new-platform-flexberry-services-lock-list.js should pass ESLint\n\n');
  });

  QUnit.test('addon/routes/projected-model-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/routes/projected-model-form.js should pass ESLint\n\n');
  });

  QUnit.test('addon/serializers/flexberry-adv-limit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/serializers/flexberry-adv-limit.js should pass ESLint\n\n');
  });

  QUnit.test('addon/serializers/i-i-s-caseberry-logging-objects-application-log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/serializers/i-i-s-caseberry-logging-objects-application-log.js should pass ESLint\n\n');
  });

  QUnit.test('addon/serializers/new-platform-flexberry-flexberry-user-setting.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/serializers/new-platform-flexberry-flexberry-user-setting.js should pass ESLint\n\n');
  });

  QUnit.test('addon/serializers/new-platform-flexberry-services-lock.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/serializers/new-platform-flexberry-services-lock.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/adv-limit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/adv-limit.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/app-state.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/app-state.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/cols-config-menu.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/cols-config-menu.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/detail-interaction.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/detail-interaction.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/device.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/device.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/form-load-time-tracker.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/form-load-time-tracker.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/log.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/lookup-events.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/lookup-events.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/objectlistview-events.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/objectlistview-events.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/offline-globals.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/offline-globals.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/perf.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/perf.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/store.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/store.js should pass ESLint\n\n');
  });

  QUnit.test('addon/services/user-settings.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/services/user-settings.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/cut-string-by-length.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/cut-string-by-length.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/deserialize-sorting-param.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/deserialize-sorting-param.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/extended-get.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/extended-get.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/extended-set.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/extended-set.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/filter.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/filter.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/get-current-agregator.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/get-current-agregator.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/get-projection-by-name.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/get-projection-by-name.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/need-save-current-agregator.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/need-save-current-agregator.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/run-after.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/run-after.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/serialize-sorting-param.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/serialize-sorting-param.js should pass ESLint\n\n');
  });

  QUnit.test('addon/utils/string.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/utils/string.js should pass ESLint\n\n');
  });

  QUnit.test('addon/validators/local/datetime.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'addon/validators/local/datetime.js should pass ESLint\n\n');
  });
});
define('dummy/ember-flexberry/tests/app.lint-test', [], function () {
  'use strict';

  QUnit.module('ESLint | app');

  QUnit.test('app/browserify.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/browserify.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/advlimit-dialog-content.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/advlimit-dialog-content.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/colsconfig-dialog-content.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/colsconfig-dialog-content.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/filters-dialog-content.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/filters-dialog-content.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-button.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-button.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-checkbox.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-checkbox.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-colorpicker.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-colorpicker.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-ddau-checkbox.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-ddau-checkbox.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-ddau-slider.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-ddau-slider.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-dropdown.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-dropdown.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-error.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-error.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-field.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-field.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-file.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-file.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-groupedit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-groupedit.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-icon.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-icon.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-jsonarea.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-jsonarea.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-lookup.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-lookup.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-menu.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-menu.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-menuitem.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-menuitem.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-objectlistview.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-objectlistview.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-sidebar.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-sidebar.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-simpledatetime.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-simpledatetime.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-sitemap-guideline.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-sitemap-guideline.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-sitemap.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-sitemap.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-tab-bar.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-tab-bar.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-text-cell.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-text-cell.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-textarea.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-textarea.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-textbox.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-textbox.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-toggler.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-toggler.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-tree.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-tree.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-treenode.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-treenode.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-validationmessage.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-validationmessage.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/flexberry-validationsummary.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/flexberry-validationsummary.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/form-load-time-tracker.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/form-load-time-tracker.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/groupedit-toolbar.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/groupedit-toolbar.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/mobile/flexberry-file.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/mobile/flexberry-file.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/mobile/flexberry-groupedit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/mobile/flexberry-groupedit.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/mobile/flexberry-objectlistview.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/mobile/flexberry-objectlistview.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/mobile/flexberry-sitemap-guideline.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/mobile/flexberry-sitemap-guideline.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/mobile/object-list-view-row.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/mobile/object-list-view-row.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/mobile/object-list-view.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/mobile/object-list-view.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/modal-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/modal-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/object-list-view-cell.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/object-list-view-cell.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/object-list-view-row.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/object-list-view-row.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/object-list-view-single-column-cell.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/object-list-view-single-column-cell.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/object-list-view.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/object-list-view.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/olv-filter-interval.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/olv-filter-interval.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/olv-setconfigdialogbutton.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/olv-setconfigdialogbutton.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/olv-toolbar.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/olv-toolbar.js should pass ESLint\n\n');
  });

  QUnit.test('app/components/ui-message.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/components/ui-message.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/advlimit-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/advlimit-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/colsconfig-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/colsconfig-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/detail-edit-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/detail-edit-form.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/edit-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/edit-form.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/filters-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/filters-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/flexberry-file-view-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/flexberry-file-view-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/i-i-s-caseberry-logging-objects-application-log-e.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/i-i-s-caseberry-logging-objects-application-log-e.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/i-i-s-caseberry-logging-objects-application-log-l.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/i-i-s-caseberry-logging-objects-application-log-l.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/list-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/list-form.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/lookup-dialog.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/lookup-dialog.js should pass ESLint\n\n');
  });

  QUnit.test('app/controllers/new-platform-flexberry-services-lock-list.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/controllers/new-platform-flexberry-services-lock-list.js should pass ESLint\n\n');
  });

  QUnit.test('app/helpers/array-contains.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/helpers/array-contains.js should pass ESLint\n\n');
  });

  QUnit.test('app/helpers/array.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/helpers/array.js should pass ESLint\n\n');
  });

  QUnit.test('app/helpers/flexberry-enum.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/helpers/flexberry-enum.js should pass ESLint\n\n');
  });

  QUnit.test('app/helpers/get-formatted.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/helpers/get-formatted.js should pass ESLint\n\n');
  });

  QUnit.test('app/helpers/get-with-dynamic-actions.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/helpers/get-with-dynamic-actions.js should pass ESLint\n\n');
  });

  QUnit.test('app/helpers/readonly-cell.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/helpers/readonly-cell.js should pass ESLint\n\n');
  });

  QUnit.test('app/initializers/i18n.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/initializers/i18n.js should pass ESLint\n\n');
  });

  QUnit.test('app/initializers/log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/initializers/log.js should pass ESLint\n\n');
  });

  QUnit.test('app/initializers/moment.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/initializers/moment.js should pass ESLint\n\n');
  });

  QUnit.test('app/initializers/perf.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/initializers/perf.js should pass ESLint\n\n');
  });

  QUnit.test('app/initializers/render-perf-logger.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/initializers/render-perf-logger.js should pass ESLint\n\n');
  });

  QUnit.test('app/initializers/user-settings.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/initializers/user-settings.js should pass ESLint\n\n');
  });

  QUnit.test('app/instance-initializers/block-slots.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/instance-initializers/block-slots.js should pass ESLint\n\n');
  });

  QUnit.test('app/instance-initializers/device.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/instance-initializers/device.js should pass ESLint\n\n');
  });

  QUnit.test('app/instance-initializers/i18n.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/instance-initializers/i18n.js should pass ESLint\n\n');
  });

  QUnit.test('app/instance-initializers/lock.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/instance-initializers/lock.js should pass ESLint\n\n');
  });

  QUnit.test('app/instance-initializers/log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/instance-initializers/log.js should pass ESLint\n\n');
  });

  QUnit.test('app/instance-initializers/moment.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/instance-initializers/moment.js should pass ESLint\n\n');
  });

  QUnit.test('app/instance-initializers/perf.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/instance-initializers/perf.js should pass ESLint\n\n');
  });

  QUnit.test('app/models/flexberry-adv-limit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/models/flexberry-adv-limit.js should pass ESLint\n\n');
  });

  QUnit.test('app/models/i-i-s-caseberry-logging-objects-application-log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/models/i-i-s-caseberry-logging-objects-application-log.js should pass ESLint\n\n');
  });

  QUnit.test('app/models/new-platform-flexberry-flexberry-user-setting.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/models/new-platform-flexberry-flexberry-user-setting.js should pass ESLint\n\n');
  });

  QUnit.test('app/models/new-platform-flexberry-services-lock.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/models/new-platform-flexberry-services-lock.js should pass ESLint\n\n');
  });

  QUnit.test('app/routes/edit-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/routes/edit-form.js should pass ESLint\n\n');
  });

  QUnit.test('app/routes/i-i-s-caseberry-logging-objects-application-log-e.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/routes/i-i-s-caseberry-logging-objects-application-log-e.js should pass ESLint\n\n');
  });

  QUnit.test('app/routes/i-i-s-caseberry-logging-objects-application-log-l.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/routes/i-i-s-caseberry-logging-objects-application-log-l.js should pass ESLint\n\n');
  });

  QUnit.test('app/routes/list-form.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/routes/list-form.js should pass ESLint\n\n');
  });

  QUnit.test('app/routes/new-platform-flexberry-services-lock-list.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/routes/new-platform-flexberry-services-lock-list.js should pass ESLint\n\n');
  });

  QUnit.test('app/serializers/flexberry-adv-limit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/serializers/flexberry-adv-limit.js should pass ESLint\n\n');
  });

  QUnit.test('app/serializers/i-i-s-caseberry-logging-objects-application-log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/serializers/i-i-s-caseberry-logging-objects-application-log.js should pass ESLint\n\n');
  });

  QUnit.test('app/serializers/new-platform-flexberry-flexberry-user-setting.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/serializers/new-platform-flexberry-flexberry-user-setting.js should pass ESLint\n\n');
  });

  QUnit.test('app/serializers/new-platform-flexberry-services-lock.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/serializers/new-platform-flexberry-services-lock.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/adv-limit.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/adv-limit.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/app-state.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/app-state.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/cols-config-menu.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/cols-config-menu.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/detail-interaction.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/detail-interaction.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/device.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/device.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/form-load-time-tracker.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/form-load-time-tracker.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/log.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/log.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/lookup-events.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/lookup-events.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/objectlistview-events.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/objectlistview-events.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/offline-globals.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/offline-globals.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/perf.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/perf.js should pass ESLint\n\n');
  });

  QUnit.test('app/services/user-settings.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/services/user-settings.js should pass ESLint\n\n');
  });

  QUnit.test('app/utils/cut-string-by-length.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/cut-string-by-length.js should pass ESLint\n\n');
  });

  QUnit.test('app/utils/deserialize-sorting-param.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/deserialize-sorting-param.js should pass ESLint\n\n');
  });

  QUnit.test('app/utils/get-current-agregator.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/get-current-agregator.js should pass ESLint\n\n');
  });

  QUnit.test('app/utils/get-projection-by-name.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/get-projection-by-name.js should pass ESLint\n\n');
  });

  QUnit.test('app/utils/need-save-current-agregator.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/need-save-current-agregator.js should pass ESLint\n\n');
  });

  QUnit.test('app/utils/run-after.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/run-after.js should pass ESLint\n\n');
  });

  QUnit.test('app/utils/serialize-sorting-param.js', function (assert) {
    assert.expect(1);
    assert.ok(true, 'app/utils/serialize-sorting-param.js should pass ESLint\n\n');
  });
});
define('dummy/enums/components-examples/flexberry-dropdown/conditional-render-example/enumeration', ['exports', 'ember-flexberry-data/utils/enum-functions'], function (exports, _enumFunctions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = (0, _enumFunctions.createEnum)({
    Value1: 'Enum value №1',
    Value2: 'Enum value №2',
    Value3: 'Enum value №3'
  });
});
define('dummy/enums/components-examples/flexberry-dropdown/empty-value-example/enumeration', ['exports', 'ember-flexberry-data/utils/enum-functions'], function (exports, _enumFunctions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = (0, _enumFunctions.createEnum)({
    Value1: '',
    Value2: 'Enum value №1',
    Value3: 'Enum value №2',
    Value4: 'Enum value №3'
  });
});
define('dummy/enums/components-examples/flexberry-dropdown/settings-example/enumeration', ['exports', 'ember-flexberry-data/utils/enum-functions'], function (exports, _enumFunctions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = (0, _enumFunctions.createEnum)({
    Value1: 'Enum value №1',
    Value2: 'Enum value №2',
    Value3: 'Enum value №3',
    Value4: 'Enum value №4',
    Value5: 'Enum value №5',
    Value6: 'Enum value №6',
    Value7: 'Enum value №7',
    Value8: 'Enum value №8',
    Value9: 'Enum value №9'
  });
});
define('dummy/enums/components-examples/flexberry-groupedit/shared/detail-enumeration', ['exports', 'ember-flexberry-data/utils/enum-functions'], function (exports, _enumFunctions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = (0, _enumFunctions.createEnum)({
    Value1: 'Enum value №1',
    Value2: 'Enum value №2',
    Value3: 'Enum value №3'
  });
});
define('dummy/enums/ember-flexberry-dummy-gender', ['exports', 'ember-flexberry-data/utils/enum-functions'], function (exports, _enumFunctions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = (0, _enumFunctions.createEnum)({
    Male: 'Male',
    Female: 'Female',
    Unknown: 'Unknown'
  });
});
define('dummy/enums/ember-flexberry-dummy-vote-type', ['exports', 'ember-flexberry-data/utils/enum-functions'], function (exports, _enumFunctions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = (0, _enumFunctions.createEnum)({
    Like: 'Like',
    Dislike: 'Dislike'
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant', ['exports', 'ember-flexberry-data/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsTExecutionVariant) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsTExecutionVariant.default;
    }
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation', ['exports', 'ember-flexberry-data/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation.default;
    }
  });
});
define('dummy/enums/integration-examples/edit-form/readonly-mode/enumeration', ['exports', 'ember-flexberry-data/utils/enum-functions'], function (exports, _enumFunctions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = (0, _enumFunctions.createEnum)({
    Value1: 'Enum value №1',
    Value2: 'Enum value №2',
    Value3: 'Enum value №3'
  });
});
define('dummy/enums/integration-examples/edit-form/validation/enumeration', ['exports', 'ember-flexberry-data/utils/enum-functions'], function (exports, _enumFunctions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = (0, _enumFunctions.createEnum)({
    Value1: 'Enum value №1',
    Value2: 'Enum value №2',
    Value3: 'Enum value №3'
  });
});
define('dummy/helpers/and', ['exports', 'ember-truth-helpers/helpers/and'], function (exports, _and) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _and.default;
    }
  });
  Object.defineProperty(exports, 'and', {
    enumerable: true,
    get: function () {
      return _and.and;
    }
  });
});
define('dummy/helpers/app-version', ['exports', 'dummy/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.appVersion = appVersion;
  function appVersion(_) {
    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var version = _environment.default.APP.version;
    // e.g. 1.0.0-alpha.1+4jds75hf

    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility
    var versionOnly = hash.versionOnly || hash.hideSha;
    var shaOnly = hash.shaOnly || hash.hideVersion;

    var match = null;

    if (versionOnly) {
      if (hash.showExtended) {
        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1
      }
      // Fallback to just version
      if (!match) {
        match = version.match(_regexp.versionRegExp); // 1.0.0
      }
    }

    if (shaOnly) {
      match = version.match(_regexp.shaRegExp); // 4jds75hf
    }

    return match ? match[0] : version;
  }

  exports.default = Ember.Helper.helper(appVersion);
});
define('dummy/helpers/array-contains', ['exports', 'ember-flexberry/helpers/array-contains'], function (exports, _arrayContains) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _arrayContains.default;
    }
  });
  Object.defineProperty(exports, 'arrayContains', {
    enumerable: true,
    get: function () {
      return _arrayContains.arrayContains;
    }
  });
});
define('dummy/helpers/array', ['exports', 'ember-flexberry/helpers/array'], function (exports, _array) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _array.default;
    }
  });
});
define('dummy/helpers/block-params', ['exports', 'ember-block-slots/helpers/block-params'], function (exports, _blockParams) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _blockParams.default;
    }
  });
  Object.defineProperty(exports, 'blockParams', {
    enumerable: true,
    get: function () {
      return _blockParams.blockParams;
    }
  });
});
define('dummy/helpers/eq', ['exports', 'ember-truth-helpers/helpers/equal'], function (exports, _equal) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _equal.default;
    }
  });
  Object.defineProperty(exports, 'equal', {
    enumerable: true,
    get: function () {
      return _equal.equal;
    }
  });
});
define('dummy/helpers/flexberry-enum', ['exports', 'ember-flexberry/helpers/flexberry-enum'], function (exports, _flexberryEnum) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryEnum.default;
    }
  });
});
define('dummy/helpers/get-formatted', ['exports', 'ember-flexberry/helpers/get-formatted'], function (exports, _getFormatted) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _getFormatted.default;
    }
  });
});
define('dummy/helpers/get-with-dynamic-actions', ['exports', 'ember-flexberry/helpers/get-with-dynamic-actions'], function (exports, _getWithDynamicActions) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _getWithDynamicActions.default;
    }
  });
});
define('dummy/helpers/gt', ['exports', 'ember-truth-helpers/helpers/gt'], function (exports, _gt) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _gt.default;
    }
  });
  Object.defineProperty(exports, 'gt', {
    enumerable: true,
    get: function () {
      return _gt.gt;
    }
  });
});
define('dummy/helpers/gte', ['exports', 'ember-truth-helpers/helpers/gte'], function (exports, _gte) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _gte.default;
    }
  });
  Object.defineProperty(exports, 'gte', {
    enumerable: true,
    get: function () {
      return _gte.gte;
    }
  });
});
define('dummy/helpers/is-after', ['exports', 'ember-moment/helpers/is-after'], function (exports, _isAfter) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _isAfter.default;
    }
  });
});
define('dummy/helpers/is-array', ['exports', 'ember-truth-helpers/helpers/is-array'], function (exports, _isArray) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _isArray.default;
    }
  });
  Object.defineProperty(exports, 'isArray', {
    enumerable: true,
    get: function () {
      return _isArray.isArray;
    }
  });
});
define('dummy/helpers/is-before', ['exports', 'ember-moment/helpers/is-before'], function (exports, _isBefore) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _isBefore.default;
    }
  });
});
define('dummy/helpers/is-between', ['exports', 'ember-moment/helpers/is-between'], function (exports, _isBetween) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _isBetween.default;
    }
  });
});
define('dummy/helpers/is-equal', ['exports', 'ember-truth-helpers/helpers/is-equal'], function (exports, _isEqual) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _isEqual.default;
    }
  });
  Object.defineProperty(exports, 'isEqual', {
    enumerable: true,
    get: function () {
      return _isEqual.isEqual;
    }
  });
});
define('dummy/helpers/is-same-or-after', ['exports', 'ember-moment/helpers/is-same-or-after'], function (exports, _isSameOrAfter) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _isSameOrAfter.default;
    }
  });
});
define('dummy/helpers/is-same-or-before', ['exports', 'ember-moment/helpers/is-same-or-before'], function (exports, _isSameOrBefore) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _isSameOrBefore.default;
    }
  });
});
define('dummy/helpers/is-same', ['exports', 'ember-moment/helpers/is-same'], function (exports, _isSame) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _isSame.default;
    }
  });
});
define('dummy/helpers/lt', ['exports', 'ember-truth-helpers/helpers/lt'], function (exports, _lt) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _lt.default;
    }
  });
  Object.defineProperty(exports, 'lt', {
    enumerable: true,
    get: function () {
      return _lt.lt;
    }
  });
});
define('dummy/helpers/lte', ['exports', 'ember-truth-helpers/helpers/lte'], function (exports, _lte) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _lte.default;
    }
  });
  Object.defineProperty(exports, 'lte', {
    enumerable: true,
    get: function () {
      return _lte.lte;
    }
  });
});
define('dummy/helpers/moment-add', ['exports', 'ember-moment/helpers/moment-add'], function (exports, _momentAdd) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentAdd.default;
    }
  });
});
define('dummy/helpers/moment-calendar', ['exports', 'ember-moment/helpers/moment-calendar'], function (exports, _momentCalendar) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentCalendar.default;
    }
  });
});
define('dummy/helpers/moment-diff', ['exports', 'ember-moment/helpers/moment-diff'], function (exports, _momentDiff) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentDiff.default;
    }
  });
});
define('dummy/helpers/moment-duration', ['exports', 'ember-moment/helpers/moment-duration'], function (exports, _momentDuration) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentDuration.default;
    }
  });
});
define('dummy/helpers/moment-format', ['exports', 'ember-moment/helpers/moment-format'], function (exports, _momentFormat) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentFormat.default;
    }
  });
});
define('dummy/helpers/moment-from-now', ['exports', 'ember-moment/helpers/moment-from-now'], function (exports, _momentFromNow) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentFromNow.default;
    }
  });
});
define('dummy/helpers/moment-from', ['exports', 'ember-moment/helpers/moment-from'], function (exports, _momentFrom) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentFrom.default;
    }
  });
});
define('dummy/helpers/moment-subtract', ['exports', 'ember-moment/helpers/moment-subtract'], function (exports, _momentSubtract) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentSubtract.default;
    }
  });
});
define('dummy/helpers/moment-to-date', ['exports', 'ember-moment/helpers/moment-to-date'], function (exports, _momentToDate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentToDate.default;
    }
  });
});
define('dummy/helpers/moment-to-now', ['exports', 'ember-moment/helpers/moment-to-now'], function (exports, _momentToNow) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentToNow.default;
    }
  });
});
define('dummy/helpers/moment-to', ['exports', 'ember-moment/helpers/moment-to'], function (exports, _momentTo) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _momentTo.default;
    }
  });
});
define('dummy/helpers/moment-unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _unix) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _unix.default;
    }
  });
});
define('dummy/helpers/moment', ['exports', 'ember-moment/helpers/moment'], function (exports, _moment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _moment.default;
    }
  });
});
define('dummy/helpers/not-eq', ['exports', 'ember-truth-helpers/helpers/not-equal'], function (exports, _notEqual) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _notEqual.default;
    }
  });
  Object.defineProperty(exports, 'notEq', {
    enumerable: true,
    get: function () {
      return _notEqual.notEq;
    }
  });
});
define('dummy/helpers/not', ['exports', 'ember-truth-helpers/helpers/not'], function (exports, _not) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _not.default;
    }
  });
  Object.defineProperty(exports, 'not', {
    enumerable: true,
    get: function () {
      return _not.not;
    }
  });
});
define('dummy/helpers/now', ['exports', 'ember-moment/helpers/now'], function (exports, _now) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _now.default;
    }
  });
});
define('dummy/helpers/or', ['exports', 'ember-truth-helpers/helpers/or'], function (exports, _or) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _or.default;
    }
  });
  Object.defineProperty(exports, 'or', {
    enumerable: true,
    get: function () {
      return _or.or;
    }
  });
});
define('dummy/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _pluralize.default;
});
define('dummy/helpers/readonly-cell', ['exports', 'ember-flexberry/helpers/readonly-cell'], function (exports, _readonlyCell) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _readonlyCell.default;
    }
  });
  Object.defineProperty(exports, 'readonlyCell', {
    enumerable: true,
    get: function () {
      return _readonlyCell.readonlyCell;
    }
  });
});
define('dummy/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _singularize.default;
});
define('dummy/helpers/t', ['exports', 'ember-i18n/helper'], function (exports, _helper) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _helper.default;
    }
  });
});
define('dummy/helpers/to-safe-string', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _slicedToArray = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();

  exports.default = Ember.Helper.extend({
    compute: function compute(_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          value = _ref2[0];

      return new Ember.String.htmlSafe(value);
    }
  });
});
define('dummy/helpers/to-string', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _slicedToArray = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();

  exports.default = Ember.Helper.extend({
    compute: function compute(_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          value = _ref2[0];

      return '' + value;
    }
  });
});
define('dummy/helpers/unix', ['exports', 'ember-moment/helpers/unix'], function (exports, _unix) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _unix.default;
    }
  });
});
define('dummy/helpers/utc', ['exports', 'ember-moment/helpers/utc'], function (exports, _utc) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _utc.default;
    }
  });
  Object.defineProperty(exports, 'utc', {
    enumerable: true,
    get: function () {
      return _utc.utc;
    }
  });
});
define('dummy/helpers/xor', ['exports', 'ember-truth-helpers/helpers/xor'], function (exports, _xor) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _xor.default;
    }
  });
  Object.defineProperty(exports, 'xor', {
    enumerable: true,
    get: function () {
      return _xor.xor;
    }
  });
});
define('dummy/initializers/allow-link-action', ['exports', 'ember-link-action/initializers/allow-link-action'], function (exports, _allowLinkAction) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _allowLinkAction.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _allowLinkAction.initialize;
    }
  });
});
define('dummy/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'dummy/config/environment'], function (exports, _initializerFactory, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var name = void 0,
      version = void 0;
  if (_environment.default.APP) {
    name = _environment.default.APP.name;
    version = _environment.default.APP.version;
  }

  exports.default = {
    name: 'App Version',
    initialize: (0, _initializerFactory.default)(name, version)
  };
});
define('dummy/initializers/component-prop-types', ['exports', 'ember-prop-types/initializers/component-prop-types'], function (exports, _componentPropTypes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _componentPropTypes.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _componentPropTypes.initialize;
    }
  });
});
define('dummy/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = {
    name: 'container-debug-adapter',

    initialize: function initialize() {
      var app = arguments[1] || arguments[0];

      app.register('container-debug-adapter:main', _containerDebugAdapter.default);
      app.inject('container-debug-adapter:main', 'namespace', 'application:main');
    }
  };
});
define('dummy/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = {
    name: 'ember-data',
    initialize: _setupContainer.default
  };
});
define('dummy/initializers/ember-i18n-cp-validations', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.initialize = initialize;
  function initialize() {
    // intentionally left blank to not break upgrade path
  }

  exports.default = {
    name: 'ember-i18n-cp-validations',
    initialize: initialize
  };
});
define('dummy/initializers/ember-i18n', ['exports', 'ember-i18n/initializers/ember-i18n'], function (exports, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _emberI18n.default;
});
define('dummy/initializers/export-application-global', ['exports', 'dummy/config/environment'], function (exports, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.initialize = initialize;
  function initialize() {
    var application = arguments[1] || arguments[0];
    if (_environment.default.exportApplicationGlobal !== false) {
      var theGlobal;
      if (typeof window !== 'undefined') {
        theGlobal = window;
      } else if (typeof global !== 'undefined') {
        theGlobal = global;
      } else if (typeof self !== 'undefined') {
        theGlobal = self;
      } else {
        // no reasonable global, just bail
        return;
      }

      var value = _environment.default.exportApplicationGlobal;
      var globalName;

      if (typeof value === 'string') {
        globalName = value;
      } else {
        globalName = Ember.String.classify(_environment.default.modulePrefix);
      }

      if (!theGlobal[globalName]) {
        theGlobal[globalName] = application;

        application.reopen({
          willDestroy: function willDestroy() {
            this._super.apply(this, arguments);
            delete theGlobal[globalName];
          }
        });
      }
    }
  }

  exports.default = {
    name: 'export-application-global',

    initialize: initialize
  };
});
define('dummy/initializers/flexberry-enum', ['exports', 'ember-flexberry-data/initializers/flexberry-enum'], function (exports, _flexberryEnum) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryEnum.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _flexberryEnum.initialize;
    }
  });
});
define('dummy/initializers/i18n', ['exports', 'ember-flexberry/initializers/i18n'], function (exports, _i18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _i18n.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _i18n.initialize;
    }
  });
});
define('dummy/initializers/local-store', ['exports', 'ember-flexberry-data/initializers/local-store'], function (exports, _localStore) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _localStore.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _localStore.initialize;
    }
  });
});
define('dummy/initializers/log', ['exports', 'ember-flexberry/initializers/log'], function (exports, _log) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _log.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _log.initialize;
    }
  });
});
define('dummy/initializers/moment', ['exports', 'ember-flexberry/initializers/moment'], function (exports, _moment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _moment.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _moment.initialize;
    }
  });
});
define('dummy/initializers/offline-globals', ['exports', 'ember-flexberry-data/initializers/offline-globals'], function (exports, _offlineGlobals) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _offlineGlobals.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _offlineGlobals.initialize;
    }
  });
});
define('dummy/initializers/perf', ['exports', 'ember-flexberry/initializers/perf'], function (exports, _perf) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _perf.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _perf.initialize;
    }
  });
});
define('dummy/initializers/render-perf-logger', ['exports', 'ember-flexberry/initializers/render-perf-logger'], function (exports, _renderPerfLogger) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _renderPerfLogger.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _renderPerfLogger.initialize;
    }
  });
});
define('dummy/initializers/user-settings', ['exports', 'ember-flexberry/initializers/user-settings'], function (exports, _userSettings) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _userSettings.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _userSettings.initialize;
    }
  });
});
define('dummy/instance-initializers/block-slots', ['exports', 'ember-flexberry/instance-initializers/block-slots'], function (exports, _blockSlots) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _blockSlots.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _blockSlots.initialize;
    }
  });
});
define('dummy/instance-initializers/device', ['exports', 'ember-flexberry/instance-initializers/device'], function (exports, _device) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _device.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _device.initialize;
    }
  });
});
define("dummy/instance-initializers/ember-data", ["exports", "ember-data/initialize-store-service"], function (exports, _initializeStoreService) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = {
    name: "ember-data",
    initialize: _initializeStoreService.default
  };
});
define('dummy/instance-initializers/ember-i18n', ['exports', 'ember-i18n/instance-initializers/ember-i18n'], function (exports, _emberI18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _emberI18n.default;
});
define('dummy/instance-initializers/i18n', ['exports', 'ember-flexberry/instance-initializers/moment'], function (exports, _moment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _moment.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _moment.initialize;
    }
  });
});
define('dummy/instance-initializers/lock', ['exports', 'ember-flexberry/instance-initializers/lock'], function (exports, _lock) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _lock.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _lock.initialize;
    }
  });
});
define('dummy/instance-initializers/log', ['exports', 'ember-flexberry/instance-initializers/log'], function (exports, _log) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _log.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _log.initialize;
    }
  });
});
define('dummy/instance-initializers/moment', ['exports', 'ember-flexberry/instance-initializers/i18n'], function (exports, _i18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _i18n.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _i18n.initialize;
    }
  });
});
define('dummy/instance-initializers/perf', ['exports', 'ember-flexberry/instance-initializers/perf'], function (exports, _perf) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _perf.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _perf.initialize;
    }
  });
});
define('dummy/instance-initializers/set-singletons', ['exports', 'ember-flexberry-data/instance-initializers/set-singletons'], function (exports, _setSingletons) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _setSingletons.default;
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function () {
      return _setSingletons.initialize;
    }
  });
});
define('dummy/locales/en/translations', ['exports', 'ember-flexberry/locales/en/translations'], function (exports, _translations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var translations = {};
  Ember.$.extend(true, translations, _translations.default);

  Ember.$.extend(true, translations, {
    'models': {
      'ember-flexberry-dummy-suggestion': {
        'projections': {
          'SuggestionL': {
            'address': {
              __caption__: 'Address'
            },
            'text': {
              __caption__: 'Text'
            },
            'date': {
              __caption__: 'Date'
            },
            'votes': {
              __caption__: 'Votes'
            },
            'author': {
              __caption__: 'Author',
              'eMail': {
                __caption__: 'Email'
              }
            },
            'editor1': {
              __caption__: 'Editor',
              'eMail': {
                __caption__: 'Email'
              }
            },
            'moderated': {
              __caption__: 'Moderated'
            },
            'type': {
              __caption__: 'Type'
            },
            'commentsCount': {
              __caption__: 'Comments count'
            },
            'comments': {
              __caption__: 'Comments'
            }
          },
          'SuggestionE': {
            'address': {
              __caption__: 'Address'
            },
            'text': {
              __caption__: 'Text'
            },
            'date': {
              __caption__: 'Date'
            },
            'votes': {
              __caption__: 'Votes'
            },
            'moderated': {
              __caption__: 'Moderated'
            },
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              }
            },
            'author': {
              __caption__: 'Author',
              'name': {
                __caption__: 'Author'
              }
            },
            'editor1': {
              __caption__: 'Editor',
              'name': {
                __caption__: 'Editor'
              }
            },
            'userVotes': {
              'name': {
                __caption__: 'Name'
              },
              'voteType': {
                __caption__: 'Vote type'
              },
              'author': {
                __caption__: 'Application User',
                'eMail': {
                  __caption__: 'Email'
                }
              }
            },
            'files': {
              'order': {
                __caption__: 'Order'
              },
              'file': {
                __caption__: 'File'
              }
            },
            'comments': {
              'name': {
                __caption__: 'Name'
              },
              'text': {
                __caption__: 'Text'
              },
              'votes': {
                __caption__: 'Votes'
              },
              'moderated': {
                __caption__: 'Moderated'
              },
              'author': {
                __caption__: 'Application User',
                'eMail': {
                  __caption__: 'Mail'
                }
              }
            }
          },
          'SuggestionEWithComputedField': {
            'address': {
              __caption__: 'address'
            },
            'text': {
              __caption__: 'text'
            },
            'date': {
              __caption__: 'date'
            },
            'votes': {
              __caption__: 'votes'
            },
            'moderated': {
              __caption__: 'moderated'
            },
            'author': {
              __caption__: 'author',
              'name': {
                __caption__: 'name'
              }
            },
            'type': {
              __caption__: 'type',
              'name': {
                __caption__: 'name'
              },
              'moderated': {
                __caption__: 'moderated'
              },
              'computedField': {
                __caption__: 'computedField'
              },
              'creator': {
                __caption__: 'creator'
              }
            },
            'editor1': {
              __caption__: 'editor1',
              'name': {
                __caption__: 'name'
              }
            },
            'createTime': {
              __caption__: 'createTime'
            },
            'creator': {
              __caption__: 'creator'
            },
            'editTime': {
              __caption__: 'editTime'
            },
            'editor': {
              __caption__: 'editor'
            }
          },
          'SuggestionMainModelProjectionTest': {
            'userVotes': {
              'voteType': {
                __caption__: 'Temp text for test'
              }
            }
          },
          'SettingLookupExampleView': {
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              }
            }
          },
          'CustomizeLookupWindowExampleView': {
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              }
            }
          },
          'LookupWithLimitFunctionExampleView': {
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              }
            }
          },
          'DropDownLookupExampleView': {
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              }
            }
          },
          'FolvWithLimitFunctionExampleView': {
            'address': {
              __caption__: 'Address'
            },
            'text': {
              __caption__: 'Text'
            },
            'votes': {
              __caption__: 'Votes'
            },
            'moderated': {
              __caption__: 'Moderated'
            },
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              }
            }
          },
          'LookupInBlockFormView': {
            'editor1': {
              __caption__: 'Editor',
              'name': {
                __caption__: 'Editor'
              },
              'eMail': {
                __caption__: 'E-mail'
              },
              'gender': {
                __caption__: 'Gender'
              }
            }
          },
          'FlexberryObjectlistviewCustomFilter': {
            'address': {
              __caption__: 'Address'
            },
            'date': {
              __caption__: 'Date'
            },
            'votes': {
              __caption__: 'Votes'
            },
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              },
              'moderated': {
                __caption__: 'Moderated'
              },
              'parent': {
                __caption__: 'Parent',
                'name': {
                  __caption__: 'Type'
                },
                'moderated': {
                  __caption__: 'Moderated'
                }
              }
            },
            'author': {
              __caption__: 'Author',
              'name': {
                __caption__: 'Author'
              },
              'eMail': {
                __caption__: 'E-mail'
              }
            },
            'editor1': {
              __caption__: 'Editor',
              'name': {
                __caption__: 'Editor'
              }
            }
          },
          'DefaultOrderingExampleView': {
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              }
            }
          },
          'FlexberryObjectlistviewFilterTest': {
            'address': {
              __caption__: 'Address'
            },
            'date': {
              __caption__: 'Date'
            },
            'votes': {
              __caption__: 'Votes'
            },
            'moderated': {
              __caption__: 'Moderated'
            },
            'type': {
              __caption__: 'Type',
              'name': {
                __caption__: 'Type'
              }
            },
            'author': {
              __caption__: 'Author',
              'name': {
                __caption__: 'Author'
              }
            }
          }
        }
      },
      'ember-flexberry-dummy-application-user': {
        'projections': {
          'ApplicationUserL': {
            'name': {
              __caption__: 'Name'
            },
            'eMail': {
              __caption__: 'E-mail'
            },
            'activated': {
              __caption__: 'Activated'
            },
            'birthday': {
              __caption__: 'Birthday'
            },
            'gender': {
              __caption__: 'Gender'
            },
            'karma': {
              __caption__: 'Karma'
            }
          }
        }
      },
      'ember-flexberry-dummy-localization': {
        'projections': {
          'LocalizationL': {
            'name': {
              __caption__: 'Name'
            }
          }
        }
      },
      'ember-flexberry-dummy-suggestion-type': {
        'projections': {
          'SuggestionTypeL': {
            'name': {
              __caption__: 'Name'
            },
            'moderated': {
              __caption__: 'Moderated'
            },
            'parent': {
              __caption__: 'Parent'
            }
          },
          'SuggestionTypeE': {
            'name': {
              __caption__: 'Name'
            },
            'moderated': {
              __caption__: 'Moderated'
            },
            'parent': {
              __caption__: 'Parent'
            },
            'localizedTypes': {
              'name': {
                __caption__: 'Name'
              },
              'localization': {
                __caption__: 'Localization',
                'name': {
                  __caption__: 'Name'
                }
              }
            }
          },
          'SettingLookupExampleView': {
            'name': {
              __caption__: 'Name'
            },
            'moderated': {
              __caption__: 'Moderated'
            }
          },
          'CustomizeLookupWindowExampleView': {
            'name': {
              __caption__: 'Name'
            },
            'moderated': {
              __caption__: 'Moderated'
            }
          },
          'LookupWithLimitFunctionExampleView': {
            'name': {
              __caption__: 'Name'
            },
            'moderated': {
              __caption__: 'Moderated'
            }
          },
          'DropDownLookupExampleView': {
            'name': {
              __caption__: 'Name'
            },
            'moderated': {
              __caption__: 'Moderated'
            }
          },
          'SuggestionTypeEWithComputedField': {
            'name': {
              __caption__: 'name'
            },
            'moderated': {
              __caption__: 'moderated'
            },
            'computedField': {
              __caption__: 'computedField'
            },
            'parent': {
              __caption__: 'parent',
              'name': {
                __caption__: 'name'
              },
              'moderated': {
                __caption__: 'moderated'
              },
              'computedField': {
                __caption__: 'computedField'
              },
              'creator': {
                __caption__: 'creator'
              }
            },
            'createTime': {
              __caption__: 'createTime'
            },
            'creator': {
              __caption__: 'creator'
            },
            'editTime': {
              __caption__: 'editTime'
            },
            'editor': {
              __caption__: 'editor'
            }
          }
        }
      },
      'integration-examples/edit-form/validation/base': {
        'projections': {
          'BaseE': {
            'flag': {
              __caption__: 'Flag'
            },
            'number': {
              __caption__: 'Number'
            },
            'text': {
              __caption__: 'Text'
            },
            'longText': {
              __caption__: 'Long text'
            },
            'date': {
              __caption__: 'Date'
            },
            'enumeration': {
              __caption__: 'Enumeration'
            },
            'file': {
              __caption__: 'File'
            },
            'master': {
              __caption__: 'Master',
              'text': {
                __caption__: 'Text'
              }
            },
            'details': {
              __caption__: 'Details',
              'flag': {
                __caption__: 'Flag'
              },
              'number': {
                __caption__: 'Number'
              },
              'text': {
                __caption__: 'Text'
              }
            }
          }
        }
      }
    },

    'application-name': 'Test stand for ember-flexberry',

    'forms': {
      'loading': {
        'spinner-caption': 'Loading stuff, please have a cold beer...'
      },
      'index': {
        'greeting': 'Welcome to ember-flexberry test stand!',
        'components': 'Some of the components',
        'log-service': {
          'title': 'Log service',
          'app-log': 'Application log',
          'settings-example': 'Settings example',
          'log-cleaning': 'Log cleaning'
        },
        'users': 'Application users',
        'localization': 'Localization',
        'log': 'Application log',
        'blocking': 'Block list',
        'search': {
          'title': 'Search',
          'field-label': 'Field name',
          'field-placeholder': 'Last name, first name and middle name',
          'date-field-placeholder': 'DD.MM.YYYY or choose from the calendar',
          'button-caption': 'Search',
          'checkbox-label': 'Search all pages'
        }
      },

      'application': {
        'header': {
          'menu': {
            'sitemap-button': {
              'title': 'Menu'
            },
            'user-settings-service-checkbox': {
              'caption': 'Save settings',
              'title': 'Use service to save user settings'
            },
            'show-menu': {
              'caption': 'Show menu'
            },
            'hide-menu': {
              'caption': 'Hide menu'
            },
            'language-dropdown': {
              'caption': 'Application language',
              'placeholder': 'Choose language'
            },
            'suggestion-file': {
              'caption': 'Suggestion file',
              'title': ''
            }
          },
          'login': {
            'caption': 'Login'
          },
          'logout': {
            'caption': 'Logout'
          },
          'profile': {
            'caption': 'Profile'
          }
        },

        'flexberry-objectlistview-modal-question-caption': {
          'confirm-button-caption': 'Delete',
          'cancel-button-caption': 'Cancel',
          'delete-at-listform-question-caption': 'Are you sure you want to delete the selected entries?',
          'delete-at-editform-question-caption': 'Are you sure you want to delete entries?'
        },

        'footer': {
          'application-name': 'Test stand for ember-flexberry',
          'application-version': {
            'caption': 'Addon version {{version}}',
            'title': 'It is version of ember-flexberry addon, which uses in this dummy application ' + '(npm version + commit sha). ' + 'Click to open commit on GitHub.'
          }
        },

        'sitemap': {
          'application-name': {
            'caption': 'Test stand for ember-flexberry',
            'title': ''
          },
          'application-version': {
            'caption': 'Addon version {{version}}',
            'title': 'It is version of ember-flexberry addon, which uses in this dummy application ' + '(npm version + commit sha). ' + 'Click to open commit on GitHub.'
          },
          'index': {
            'caption': 'Home',
            'title': ''
          },
          'application': {
            'caption': 'Application',
            'title': '',
            'application-users': {
              'caption': 'Application users',
              'title': ''
            },
            'localizations': {
              'caption': 'Localizations',
              'title': ''
            },
            'suggestion-types': {
              'caption': 'Suggestion types',
              'title': ''
            },
            'suggestions': {
              'caption': 'Suggestions',
              'title': ''
            },
            'multi': {
              'caption': 'Multi list',
              'title': ''
            }
          },
          'log-service-examples': {
            'caption': 'Log service',
            'title': '',
            'application-log': {
              'caption': 'Application log',
              'title': ''
            },
            'settings-example': {
              'caption': 'Settings example',
              'title': ''
            },
            'clear-log-form': {
              'caption': 'Clear log',
              'title': ''
            }
          },
          'lock': {
            'caption': 'Blocking',
            'title': 'Block list'
          },
          'components-examples': {
            'caption': 'Components examples',
            'title': '',
            'flexberry-button': {
              'caption': 'flexberry-button',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-checkbox': {
              'caption': 'flexberry-checkbox',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-ddau-checkbox': {
              'caption': 'flexberry-ddau-checkbox',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-dropdown': {
              'caption': 'flexberry-dropdown',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              },
              'conditional-render-example': {
                'caption': 'Conditional render example',
                'title': ''
              },
              'empty-value-example': {
                'caption': 'Example dropdown with empty value',
                'title': ''
              },
              'items-example': {
                'caption': 'Example values of the items',
                'title': ''
              }
            },
            'flexberry-field': {
              'caption': 'flexberry-field',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-file': {
              'caption': 'flexberry-file',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              },
              'flexberry-file-in-modal': {
                'caption': 'Flexberry file in modal window',
                'title': ''
              }
            },
            'flexberry-groupedit': {
              'caption': 'flexberry-groupedit',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              },
              'model-update-example': {
                'caption': 'Model update example',
                'title': ''
              },
              'custom-buttons-example': {
                'caption': 'Custom user buttons example',
                'title': ''
              },
              'configurate-row-example': {
                'caption': 'Configurate rows',
                'title': ''
              },
              'groupedit-with-lookup-with-computed-atribute': {
                'caption': 'Computed attributes LookUp  in GroupEdit',
                'title': ''
              },
              'readonly-columns-by-configurate-row-example': {
                'caption': 'GrouptEdit readonly columns by configurateRow',
                'title': ''
              }
            },
            'flexberry-lookup': {
              'caption': 'flexberry-lookup',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              },
              'customizing-window-example': {
                'caption': 'Window customization',
                'title': ''
              },
              'compute-autocomplete': {
                'caption': 'Example lookup with compute autocomplete',
                'title': ''
              },
              'numeric-autocomplete': {
                'caption': 'Example lookup with autocomplete and dropdwon with numeric displayAttributeName',
                'title': ''
              },
              'hierarchy-olv-in-lookup-example': {
                'caption': 'Example hierarchical OLV in lookup',
                'title': ''
              },
              'limit-function-example': {
                'caption': 'Limit function example',
                'title': ''
              },
              'autofill-by-limit-example': {
                'caption': 'Example autofillByLimit',
                'title': ''
              },
              'limit-function-through-dynamic-properties-example': {
                'caption': 'Limit function with dinamic properties example',
                'title': ''
              },
              'lookup-block-form-example': {
                'caption': 'Lookup block form example',
                'title': ''
              },
              'lookup-in-modal': {
                'caption': 'Lookup in modal window',
                'title': ''
              },
              'dropdown-mode-example': {
                'caption': 'Dropdown mode example',
                'title': ''
              },
              'default-ordering-example': {
                'caption': 'Default ordering example',
                'title': ''
              },
              'autocomplete-order-example': {
                'caption': 'Example for autocomplete with order',
                'title': ''
              }
            },
            'flexberry-menu': {
              'caption': 'flexberry-menu',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-objectlistview': {
              'caption': 'flexberry-objectlistview',
              'title': '',
              'limit-function-example': {
                'caption': 'Limit function example',
                'title': ''
              },
              'inheritance-models': {
                'caption': 'Inheritance models',
                'title': ''
              },
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              },
              'toolbar-custom-buttons-example': {
                'caption': 'Custom buttons on toolbar',
                'title': ''
              },
              'on-edit-form': {
                'caption': 'Placement on edit form',
                'title': ''
              },
              'list-on-editform': {
                'caption': 'Placement of the list of detail of the master on the editing form',
                'title': ''
              },
              'custom-filter': {
                'caption': 'Custom filter',
                'title': ''
              },
              'edit-form-with-detail-list': {
                'caption': 'List example',
                'title': ''
              },
              'hierarchy-example': {
                'caption': 'Hierarchy example',
                'title': ''
              },
              'hierarchy-paging-example': {
                'caption': 'Hierarchy with paginig example',
                'title': ''
              },
              'configurate-rows': {
                'caption': 'Configurate rows',
                'title': ''
              },
              'selected-rows': {
                'caption': 'Selected rows',
                'title': ''
              },
              'downloading-files-from-olv-list': {
                'caption': 'Downloading files from the list',
                'title': ''
              },
              'object-list-view-resize': {
                'caption': 'Columns markup',
                'title': ''
              },
              'return-from-ediform': {
                'title': 'Return from edit-form to list-form with queryParameter',
                'return-button': 'Return'
              },
              'lock-services-editor-view-list': {
                'caption': 'Example displaying username which the object was locked',
                'title': ''
              },
              'limited-text-size-example': {
                'caption': 'Limited text size example',
                'title': ''
              }
            },
            'flexberry-simpledatetime': {
              'caption': 'flexberry-simpledatetime',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-text-cell': {
              'caption': 'flexberry-text-cell',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-textarea': {
              'caption': 'flexberry-textarea',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-textbox': {
              'caption': 'flexberry-textbox',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'flexberry-toggler': {
              'caption': 'flexberry-toggler',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              },
              'settings-example-inner': {
                'caption': 'Settings example (toggler in a toggler)',
                'title': ''
              },
              'ge-into-toggler-example': {
                'caption': 'GroupEdit into toggler example'
              }
            },
            'flexberry-tree': {
              'caption': 'flexberry-tree',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            },
            'modal-dialog': {
              'caption': 'modal-dialog',
              'title': ''
            },
            'ui-message': {
              'caption': 'ui-message',
              'title': '',
              'settings-example': {
                'caption': 'Settings example',
                'title': ''
              }
            }
          },
          'integration-examples': {
            'caption': 'Integration examples',
            'title': '',
            'edit-form': {
              'caption': 'Edit form',
              'title': '',
              'readonly-mode': {
                'caption': 'Readonly mode',
                'title': ''
              },
              'validation': {
                'caption': 'Validation',
                'title': ''
              }
            }
          },
          'user-setting-forms': {
            'caption': 'User settings',
            'title': '',
            'user-setting-delete': {
              'caption': 'Settings deletion',
              'title': ''
            }
          },
          'components-acceptance-tests': {
            'caption': 'Acceptance tests',
            'title': ''
          }
        }
      },

      'login-form': {
        'header': 'Sign in',
        'sign-up-caption': 'Or register',
        'enter-login-caption': 'Enter login',
        'enter-password-caption': 'Enter password',
        'reset-password-caption': 'Forgot your password?',
        'login-button-caption': 'Login'
      },

      'support-form': {
        'caption': 'Write to tech support',
        'contacts-caption': 'Technical support contacts: 8 (800) 300-44-44, rgirsk-support@ics.perm.ru',
        'enter-name-caption': 'Enter your name',
        'enter-email-caption': 'Enter your mail',
        'enter-message-placeholder': 'If you encounter a problem, describe in detail: how it manifests itself, what actions and in what order you performed. If possible, attach a screenshot',
        'send-button-caption': 'Submit',
        'attach-file-caption': 'Attach file'
      },

      'edit-form': {
        'save-success-message-caption': 'Save operation succeed',
        'save-success-message': 'Object saved',
        'save-error-message-caption': 'Save operation failed',
        'delete-success-message-caption': 'Delete operation succeed',
        'delete-success-message': 'Object deleted',
        'delete-error-message-caption': 'Delete operation failed'
      },

      'list-form': {
        'delete-success-message-caption': 'Delete operation succeed',
        'delete-success-message': 'Object deleted',
        'delete-error-message-caption': 'Delete operation failed',
        'load-success-message-caption': 'Load operation succeed',
        'load-success-message': 'Object loaded',
        'load-error-message-caption': 'Load operation failed'
      },

      'ember-flexberry-dummy-application-user-edit': {
        'caption': 'Application user',
        'name-caption': 'Name',
        'eMail-caption': 'E-Mail',
        'phone1-caption': 'Phone1',
        'phone2-caption': 'Phone2',
        'phone3-caption': 'Phone3',
        'activated-caption': 'Activated',
        'vK-caption': 'VK',
        'facebook-caption': 'Facebook',
        'twitter-caption': 'Twitter',
        'birthday-caption': 'Birthday',
        'gender-caption': 'Gender',
        'vip-caption': 'VIP',
        'karma-caption': 'Karma',
        'name-validation-message-caption': 'Name is required',
        'eMail-validation-message-caption': 'E-Mail is required'
      },

      'ember-flexberry-dummy-comment-edit': {
        'caption': 'Comment',
        'text-caption': 'Text',
        'votes-caption': 'Votes',
        'moderated-caption': 'Moderated',
        'author-caption': 'Author',
        'userVotes-caption': 'User votes',
        'date-caption': 'Date',
        'author-validation-message-caption': 'Author is required'
      },

      'ember-flexberry-dummy-comment-vote-edit': {
        'caption': 'User Vote',
        'voteType-caption': 'Vote type',
        'applicationUser-caption': 'Application user'
      },

      'ember-flexberry-dummy-localization-edit': {
        'caption': 'Localization',
        'name-caption': 'Name',
        'name-validation-message-caption': 'Name is required'
      },

      'ember-flexberry-dummy-suggestion-edit': {
        'caption': 'Suggestion',
        'address-caption': 'Address',
        'text-caption': 'Text',
        'date-caption': 'Date',
        'votes-caption': 'Votes',
        'moderated-caption': 'Moderated',
        'type-caption': 'Type',
        'author-caption': 'Author',
        'editor1-caption': 'Editor',
        'files-caption': 'Files',
        'userVotes-caption': 'User votes',
        'comments-caption': 'Comments',
        'type-validation-message-caption': 'Type is required',
        'author-validation-message-caption': 'Author is required',
        'editor-validation-message-caption': 'Editor is required',
        'readonly-groupedit-with-lookup-with-computed-atribute-field': 'Readonly for LookUp "Application User" in GroupEdit "User votes"',
        'limit-function-groupedit-with-lookup-with-computed-atribute-field': 'Limitations for LookUp "Application User" in GroupEdit "User votes"'
      },

      'ember-flexberry-dummy-suggestion-file-list': {
        'header': 'Suggestion files'
      },

      'ember-flexberry-dummy-suggestion-file-edit': {
        'header': 'Suggestion file',
        'suggestion': 'Suggestion',
        'order': 'Order',
        'file': 'File'
      },

      'ember-flexberry-dummy-toggler-example-master-e': {
        'caption': 'Master',
        'toggler-example-master-property-caption': 'Master property',
        'toggler-example-deteil-property-caption': 'Deteil'
      },

      'ember-flexberry-dummy-suggestion-type-edit': {
        'caption': 'Suggestion type',
        'name-caption': 'Name',
        'moderated-caption': 'Moderated',
        'parent-caption': 'Parent',
        'localized-types-caption': 'Localized types',
        'name-validation-message-caption': 'Name is required'
      },

      'ember-flexberry-dummy-application-user-list': {
        'caption': 'Application users'
      },

      'ember-flexberry-dummy-localization-list': {
        'caption': 'Localizations'
      },

      'ember-flexberry-dummy-suggestion-list': {
        'caption': 'Suggestions'
      },

      'ember-flexberry-dummy-suggestion-type-list': {
        'caption': 'Suggestion types'
      },

      'ember-flexberry-dummy-multi-list': {
        'caption': 'Multi list form',
        'multi-edit-form': 'Multi list edit form'
      },

      'log-service-examples': {
        'settings-example': {
          'caption': 'Log service. Settings example',
          'setting-column-header-caption': 'Log service setting',
          'settings-value-column-header-caption': 'Setting current value',
          'throw-exception-button-caption': 'Throw exception',
          'reject-rsvp-promise-button-caption': 'Reject promise',
          'ember-assert-button-caption': 'assert',
          'ember-logger-error-button-caption': 'Error',
          'ember-logger-warn-button-caption': 'Warn',
          'ember-deprecate-button-caption': 'Deprecate',
          'ember-logger-log-button-caption': 'Log',
          'ember-logger-info-button-caption': 'Info',
          'ember-logger-debug-button-caption': 'Debug',
          'throw-exception-button-message': 'Exception thrown',
          'reject-rsvp-promise-button-message': 'Promise rejected',
          'ember-assert-button-message': 'assert called',
          'ember-logger-error-button-message': 'Ember.Logger.error called',
          'ember-logger-warn-button-message': 'Ember.warn called',
          'ember-deprecate-button-message': 'Ember.deprecate called',
          'ember-logger-log-button-message': 'Ember.Logger.log called',
          'ember-logger-info-button-message': 'Ember.Logger.info called',
          'ember-logger-debug-button-message': 'Ember.debug called'
        }
      },

      'new-platform-flexberry-services-lock-list': {
        'change-user-name': 'Change user name',
        'open-read-only': 'Open read only',
        'unlock-object': 'Unlock object',
        'enter-new-user-name': 'Enter new user name:'
      },

      'components-examples': {
        'flexberry-button': {
          'settings-example': {
            'caption': 'Settings example for flexberry-button'
          }
        },
        'flexberry-checkbox': {
          'settings-example': {
            'caption': 'Flexberry-checkbox. Settings example'
          }
        },
        'flexberry-ddau-checkbox': {
          'settings-example': {
            'caption': 'Settings example for flexberry-ddau-checkbox'
          }
        },
        'flexberry-dropdown': {
          'settings-example': {
            'caption': 'Flexberry-dropdown. Settings example'
          },
          'conditional-render-example': {
            'caption': 'Flexberry-dropdown. Conditional render example',
            'info-caption': 'Use case description',
            'info-message': 'The page template looks like following:' + '{{pageTemplate}}' + 'So, once the value is selected, the component will be rendered as &lt;span&gt;selected value&lt;/span&gt;,<br>' + 'after that check browser\'s console, it must be free from "Semantic-UI" and other errors.'
          },
          'empty-value-example': {
            'caption': 'Flexberry-dropdown. Example dropdown with empty value',
            'message': 'When you open the form in the Dropdown should not be empty. Should be: Enum value №2.',
            'enumeration-caption': 'Dropdown with empty value'
          },
          'items-example': {
            'caption': 'Flexberry-dropdown. Example values of the items',
            'checkbox-caption': 'use the itemsObject'
          }
        },
        'flexberry-field': {
          'settings-example': {
            'caption': 'Flexberry-field. Settings example'
          }
        },
        'flexberry-file': {
          'settings-example': {
            'caption': 'Flexberry-file. Settings example'
          }
        },
        'flexberry-groupedit': {
          'settings-example': {
            'caption': 'Flexberry-groupedit. Settings example'
          },
          'custom-buttons-example': {
            'caption': 'Flexberry-groupedit. Custom buttons example',
            'custom-message': 'Hello!',
            'custom-button-name': 'Send hello',
            'disable-button-name': 'Disable adjacent button',
            'enable-button-name': 'Enable adjacent button'
          },
          'configurate-row-example': {
            'caption': 'Flexberry-groupedit. Configurate rows'
          },
          'model-update-example': {
            'caption': 'Flexberry-groupedit. Model update example',
            'addDetailButton': 'Add detail',
            'removeDetailButton': 'Remove detail'
          }
        },
        'flexberry-lookup': {
          'settings-example': {
            'caption': 'Flexberry-lookup. Settings example'
          },
          'customizing-window-example': {
            'caption': 'Flexberry-lookup. Window customization',
            'titleLookup': 'Master'
          },
          'compute-autocomplete': {
            'caption': 'Example lookup with compute autocomplete',
            'title': ''
          },
          'numeric-autocomplete': {
            'caption': 'Example lookup with autocomplete and dropdwon with numeric displayAttributeName',
            'title': ''
          },
          'hierarchy-olv-in-lookup-example': {
            'caption': 'Flexberry-lookup. Example hierarchical OLV in lookup',
            'titleLookup': 'Master'
          },
          'limit-function-example': {
            'caption': 'Flexberry-lookup. Limit function example',
            'titleLookup': 'Master'
          },
          'limit-function-through-dynamic-properties-example': {
            'caption': 'Flexberry-lookup. Limit function through dynamic properties example',
            'titleLookup': 'Master',
            'captionFirstLimitFunction': 'Limit function №1',
            'captionSecondLimitFunction': 'Limit function №2',
            'captionClearLimitFunction': 'Clear limit function'
          },
          'autofill-by-limit-example': {
            'caption': 'Flexberry-lookup. Example autofillByLimit in lookup',
            'titleLookup': 'Master'
          },
          'lookup-block-form-example': {
            'caption': 'Flexberry-lookup. Lookup block form example',
            'message': 'This test only works on the mobile site. To start a mobile version should be:',
            'paragraph1': 'Go to developer mode (press "F12").',
            'paragraph2': 'Enable mobile site (press "Ctrl + Shift + M" in Chrome and Firefox)',
            'paragraph3': 'Refresh page (press "F5")'
          },
          'lookup-in-modal': {
            'caption': 'Flexberry-lookup. Lookup in modal window',
            'captionModal': 'Custom modal window №1',
            'captionModalDouble': 'Custom modal window №2',
            'buttonModal': 'Modal window №1',
            'buttonModalDouble': 'Modal window №2',
            'buttonClose': 'Close'
          },
          'dropdown-mode-example': {
            'caption': 'Flexberry-lookup. Dropdown mode example'
          },
          'default-ordering-example': {
            'caption': 'Flexberry-lookup. Default ordering example',
            'titleLookup': 'Master'
          },
          'autocomplete-order-example': {
            'caption': 'Flexberry-lookup. Example for autocomplete with order',
            'titleLookup': 'Master'
          }
        },
        'flexberry-menu': {
          'settings-example': {
            'caption': 'Flexberry-menu. Settings example',
            'titleIcon1': 'Left side aligned icon',
            'titleIcon2': 'Right side aligned icon',
            'titleIcon3': 'Submenu'
          }
        },
        'flexberry-objectlistview': {
          'limit-function-example': {
            'caption': 'Flexberry-objectlistview. Limit function example',
            'captionFirstLimitFunction': 'Limit function №1',
            'captionSecondLimitFunction': 'Limit function №2',
            'captionClearLimitFunction': 'Clear limit function'
          },
          'inheritance-models': {
            'caption': 'Flexberry-objectlistview. Inheritance models example',
            'message': 'Сheck projection in OLV. (ProjectionE=ProjectionL)',
            'projectionBase': 'Projection \'Base\': Name, E-mail, Birthday',
            'projectionSuccessorPhone': 'Projection \'Successor phone\': Name, Phone1, Phone2, Phone3',
            'projectionSuccessorSoc': 'Projection \'Successor social network\': Name, VK, Facebook, Twitter',
            'buttonRoot': 'Base',
            'buttonSuccessorPhone': 'Successor phone',
            'buttonSuccessorSoc': 'Successor social network',
            'name-caption': 'Name',
            'eMail-caption': 'E-Mail',
            'phone1-caption': 'Phone1',
            'phone2-caption': 'Phone2',
            'phone3-caption': 'Phone3',
            'vK-caption': 'VK',
            'facebook-caption': 'Facebook',
            'twitter-caption': 'Twitter',
            'birthday-caption': 'Birthday'
          },
          'settings-example': {
            'caption': 'Flexberry-objectlistview. Settings example'
          },
          'limited-text-size-example': {
            'caption': 'Flexberry-objectlistview. Limited text size example'
          },
          'toolbar-custom-buttons-example': {
            'caption': 'Flexberry-objectlistview. Custom buttons on toolbar',
            'custom-message': 'Hello!',
            'custom-button-name': 'Send hello',
            'disable-button-name': 'Disable adjacent button',
            'enable-button-name': 'Enable adjacent button',
            'custom-row-button-name': 'Custom button in row'
          },
          'on-edit-form': {
            'caption': 'Flexberry-objectlistview. FlexberryObjectlistview on edit form',
            'add-button-name': 'Добавить'
          },
          'list-on-editform': {
            'caption': 'List of children Type'
          },
          'custom-filter': {
            'caption': 'Flexberry-objectlistview. Custom filter'
          },
          'hierarchy-example': {
            'caption': 'Flexberry-objectlistview. Hierarchy example'
          },
          'hierarchy-paging-example': {
            'caption': 'Flexberry-objectlistview. Hierarchy paging example'
          },
          'configurate-rows': {
            'caption': 'Flexberry-objectlistview. Configurate rows'
          },
          'selected-rows': {
            'caption': 'Flexberry-objectlistview. Setected rows'
          },
          'downloading-files-from-olv-list': {
            'caption': 'Flexberry-objectlistview. Downloading files from the list'
          },
          'object-list-view-resize': {
            'caption': 'Flexberry-objectlistview. Columns markup',
            'button-сaption': 'Add',
            'title': ''
          },
          'lock-services-editor-view': {
            'blocked-by': 'Blocked by user'
          }
        },
        'flexberry-simpledatetime': {
          'settings-example': {
            'caption': 'Flexberry-simpledatetime. Settings example'
          }
        },
        'flexberry-text-cell': {
          'settings-example': {
            'caption': 'Flexberry-text-cell. Settings example'
          }
        },
        'flexberry-textarea': {
          'settings-example': {
            'caption': 'Flexberry-textarea. Settings example'
          }
        },
        'flexberry-textbox': {
          'settings-example': {
            'caption': 'Flexberry-textbox. Settings example'
          }
        },
        'flexberry-toggler': {
          'settings-example': {
            'caption': 'Flexberry-toggler. Settings example',
            'togglerContent': 'Some expandable/collapsable content'
          },
          'settings-example-inner': {
            'caption': 'Flexberry-toggler. Settings example',
            'togglerContent': 'Some expandable/collapsable content',
            'innerTogglerContent': 'Some expandable/collapsable content in an inner toggler'
          },
          'ge-into-toggler-example': {
            'caption': 'Flexberry-toggler. GroupEdit into toggler example'
          }
        },
        'flexberry-tree': {
          'settings-example': {
            'caption': 'Settings example for flexberry-tree',
            'json-tree-tab-caption': 'JSON-object-defined tree',
            'json-tree-latest-clicked-node-caption': 'Latest clicked tree node settings',
            'json-tree-latest-clicked-node-placeholder': 'Click on any tree node to display it\'s settings'
          }
        },
        'modal-dialog': {
          'caption': 'Examples of using the {{component}} component',
          'in-current-context': 'In the context of the current template',
          'application-context': 'In the context of the application template',
          'open-lightbox': 'Open modal window',
          'open-second-lightbox': 'Open second modal window',
          'lightbox-title': 'Modal window',
          'second-lightbox-title': 'Second modal window',
          'open-sidepage': 'Open modal window in «sidepage» mode',
          'open-second-sidepage': 'Open second modal window in «sidepage» mode',
          'sidepage-title': 'Modal window in «sidepage» mode',
          'second-sidepage-title': 'Second modal window in «sidepage» mode'
        },
        'ui-message': {
          'settings-example': {
            'caption': 'Ui-message. Settings example',
            'captionMessage': 'Result of checking',
            'messageError': 'Operation is failed',
            'messageSuccess': 'Operation is success',
            'messageWarning': 'Partially implemented',
            'messageInfo': 'Note!'
          }
        }
      },
      'integration-examples': {
        'edit-form': {
          'readonly-mode': {
            'caption': 'Integration examples. Readonly mode',
            'readonly-flag-management-segment-caption': 'Form\'s readonly-mode management',
            'readonly-flag-value-segment-caption': 'Controller\'s \'readonly\' property value',
            'readonly-flag-caption': 'Form is in readonly mode',
            'flag-caption': 'Flag',
            'number-caption': 'Number',
            'text-caption': 'Text',
            'long-text-caption': 'Long text',
            'date-caption': 'Date',
            'time-caption': 'Date + Time',
            'enumeration-caption': 'Enumeration',
            'file-caption': 'File',
            'master-caption': 'Master',
            'master-dropdown-caption': 'Master in dropdown mode'
          },
          'validation': {
            'caption': 'Integration examples. Validation',
            'summary-caption': 'Validation errors:',
            'flag-caption': 'Flag',
            'number-caption': 'Number',
            'text-caption': 'Text',
            'long-text-caption': 'Long text',
            'date-caption': 'Date',
            'enumeration-caption': 'Enumeration',
            'file-caption': 'File',
            'master-caption': 'Master',
            'details-caption': 'Details'
          }
        }
      },
      'user-setting-forms': {
        'user-setting-delete': {
          'caption': 'User settings',
          'all-del-button-name': 'Delete all!',
          'message': 'Settings were removed'
        }
      }
    },

    'components': {
      'settings-example': {
        'component-template-caption': 'Component template',
        'controller-properties-caption': 'Controller properties',
        'component-current-settings-caption': 'Component current settings values',
        'component-default-settings-caption': 'Component default settings values',
        'component-with-applied-settings-caption': 'Component with it\'s current settings applied'
      }
    }
  });

  exports.default = translations;
});
define('dummy/locales/ru/translations', ['exports', 'ember-flexberry/locales/ru/translations'], function (exports, _translations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var translations = {};
  Ember.$.extend(true, translations, _translations.default);

  Ember.$.extend(true, translations, {
    'models': {
      'ember-flexberry-dummy-suggestion': {
        'projections': {
          'SuggestionL': {
            'address': {
              __caption__: 'Адрес'
            },
            'text': {
              __caption__: 'Текст'
            },
            'date': {
              __caption__: 'Дата'
            },
            'votes': {
              __caption__: 'Голоса'
            },
            'author': {
              __caption__: 'Автор',
              'eMail': {
                __caption__: 'Почта'
              }
            },
            'editor1': {
              __caption__: 'Редактор',
              'eMail': {
                __caption__: 'Почта'
              }
            },
            'moderated': {
              __caption__: 'Одобрено'
            },
            'type': {
              __caption__: 'Тип предложения'
            },
            'commentsCount': {
              __caption__: 'Количество комментариев'
            },
            'comments': {
              __caption__: 'Комментарии'
            }
          },
          'SuggestionE': {
            'address': {
              __caption__: 'Адрес'
            },
            'text': {
              __caption__: 'Текст'
            },
            'date': {
              __caption__: 'Дата'
            },
            'votes': {
              __caption__: 'Голоса'
            },
            'moderated': {
              __caption__: 'Одобрено'
            },
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              }
            },
            'author': {
              __caption__: 'Автор',
              'name': {
                __caption__: 'Автор'
              }
            },
            'editor1': {
              __caption__: 'Редактор',
              'name': {
                __caption__: 'Редактор'
              }
            },
            'userVotes': {
              'name': {
                __caption__: 'Наименование'
              },
              'voteType': {
                __caption__: 'Тип голосования'
              },
              'author': {
                __caption__: 'Пользователь приложения',
                'eMail': {
                  __caption__: 'Почта'
                }
              }
            },
            'files': {
              'order': {
                __caption__: 'Номер'
              },
              'file': {
                __caption__: 'Файл'
              }
            },
            'comments': {
              'name': {
                __caption__: 'Наименование'
              },
              'text': {
                __caption__: 'Текст'
              },
              'votes': {
                __caption__: 'Голоса'
              },
              'moderated': {
                __caption__: 'Одобрено'
              },
              'author': {
                __caption__: 'Пользователь приложения',
                'eMail': {
                  __caption__: 'Почта'
                }
              }
            }
          },
          'SuggestionMainModelProjectionTest': {
            'userVotes': {
              'voteType': {
                __caption__: 'Текст для теста'
              }
            }
          },
          'SettingLookupExampleView': {
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              }
            }
          },
          'CustomizeLookupWindowExampleView': {
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              }
            }
          },
          'LookupWithLimitFunctionExampleView': {
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              }
            }
          },
          'DropDownLookupExampleView': {
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              }
            }
          },
          'FolvWithLimitFunctionExampleView': {
            'address': {
              __caption__: 'Адрес'
            },
            'text': {
              __caption__: 'Текст'
            },
            'votes': {
              __caption__: 'Голоса'
            },
            'moderated': {
              __caption__: 'Одобрено'
            },
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              }
            }
          },
          'LookupInBlockFormView': {
            'editor1': {
              __caption__: 'Редактор',
              'name': {
                __caption__: 'Редактор'
              },
              'eMail': {
                __caption__: 'Почта'
              },
              'gender': {
                __caption__: 'Пол'
              }
            }
          },
          'FlexberryObjectlistviewCustomFilter': {
            'address': {
              __caption__: 'Адрес'
            },
            'date': {
              __caption__: 'Дата'
            },
            'votes': {
              __caption__: 'Голоса'
            },
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              },
              'moderated': {
                __caption__: 'Одобрено'
              },
              'parent': {
                __caption__: 'Иерархия',
                'name': {
                  __caption__: 'Тип предложения'
                },
                'moderated': {
                  __caption__: 'Одобрено'
                }
              }
            },
            'author': {
              __caption__: 'Автор',
              'name': {
                __caption__: 'Автор'
              },
              'eMail': {
                __caption__: 'Почта'
              }
            },
            'editor1': {
              __caption__: 'Редактор',
              'name': {
                __caption__: 'Редактор'
              }
            }
          },
          'DefaultOrderingExampleView': {
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              }
            }
          },
          'FlexberryObjectlistviewFilterTest': {
            'address': {
              __caption__: 'Адрес'
            },
            'date': {
              __caption__: 'Дата'
            },
            'votes': {
              __caption__: 'Голоса'
            },
            'moderated': {
              __caption__: 'Одобрено'
            },
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Тип предложения'
              }
            },
            'author': {
              __caption__: 'Автор',
              'name': {
                __caption__: 'Автор'
              }
            }
          },
          'SuggestionEWithComputedField': {
            'address': {
              __caption__: 'Адрес'
            },
            'text': {
              __caption__: 'Текст'
            },
            'date': {
              __caption__: 'Дата'
            },
            'votes': {
              __caption__: 'Голоса'
            },
            'moderated': {
              __caption__: 'Одобрено'
            },
            'author': {
              __caption__: 'Пользователь приложения',
              'name': {
                __caption__: 'Наименование'
              }
            },
            'type': {
              __caption__: 'Тип предложения',
              'name': {
                __caption__: 'Наименование'
              },
              'moderated': {
                __caption__: 'Одобрено'
              },
              'computedField': {
                __caption__: 'Вычислимое поле'
              },
              'creator': {
                __caption__: 'creator'
              }
            },
            'editor1': {
              __caption__: 'Редактор',
              'name': {
                __caption__: 'Имя'
              }
            },
            'createTime': {
              __caption__: 'createTime'
            },
            'creator': {
              __caption__: 'creator'
            },
            'editTime': {
              __caption__: 'editTime'
            },
            'editor': {
              __caption__: 'editor'
            }
          }
        }
      },
      'ember-flexberry-dummy-application-user': {
        'projections': {
          'ApplicationUserL': {
            'name': {
              __caption__: 'Имя'
            },
            'eMail': {
              __caption__: 'Почта'
            },
            'activated': {
              __caption__: 'Учетная запись активирована'
            },
            'birthday': {
              __caption__: 'Дата рождения'
            },
            'gender': {
              __caption__: 'Пол'
            },
            'karma': {
              __caption__: 'Карма'
            }
          }
        }
      },
      'ember-flexberry-dummy-localization': {
        'projections': {
          'LocalizationL': {
            'name': {
              __caption__: 'Наименование'
            }
          }
        }
      },
      'ember-flexberry-dummy-suggestion-type': {
        'projections': {
          'SuggestionTypeL': {
            'name': {
              __caption__: 'Наименование'
            },
            'moderated': {
              __caption__: 'Одобрено'
            },
            'parent': {
              __caption__: 'Иерархия'
            }
          },
          'SuggestionTypeE': {
            'name': {
              __caption__: 'Наименование'
            },
            'moderated': {
              __caption__: 'Одобрено'
            },
            'parent': {
              __caption__: 'Иерархия'
            },
            'localizedTypes': {
              'name': {
                __caption__: 'Наименование'
              },
              'localization': {
                __caption__: 'Локализация',
                'name': {
                  __caption__: 'Наименование'
                }
              }
            }
          },
          'SettingLookupExampleView': {
            'name': {
              __caption__: 'Наименование'
            },
            'moderated': {
              __caption__: 'Одобрено'
            }
          },
          'CustomizeLookupWindowExampleView': {
            'name': {
              __caption__: 'Наименование'
            },
            'moderated': {
              __caption__: 'Одобрено'
            }
          },
          'LookupWithLimitFunctionExampleView': {
            'name': {
              __caption__: 'Наименование'
            },
            'moderated': {
              __caption__: 'Одобрено'
            }
          },
          'DropDownLookupExampleView': {
            'name': {
              __caption__: 'Наименование'
            },
            'moderated': {
              __caption__: 'Одобрено'
            }
          },
          'SuggestionTypeEWithComputedField': {
            'name': {
              __caption__: 'Имя'
            },
            'moderated': {
              __caption__: 'Одобрено'
            },
            'computedField': {
              __caption__: 'Вычислимое поле'
            },
            'parent': {
              __caption__: 'Иерархия',
              'name': {
                __caption__: 'Наименование'
              },
              'moderated': {
                __caption__: 'Одобрено'
              },
              'computedField': {
                __caption__: 'Вычислимое поле'
              },
              'creator': {
                __caption__: 'creator'
              }
            },
            'createTime': {
              __caption__: 'createTime'
            },
            'creator': {
              __caption__: 'creator'
            },
            'editTime': {
              __caption__: 'editTime'
            },
            'editor': {
              __caption__: 'editor'
            }
          }
        }
      },
      'ember-flexberry-dummy-comment': {
        'projections': {
          'CommentE': {
            'text': {
              __caption__: 'Текст комментария'
            },
            'userVotes': {
              'voteType': {
                __caption__: 'Тип голосования'
              },
              'applicationUser': {
                __caption__: 'Пользователь',
                'name': {
                  __caption__: 'Наименование'
                }
              }
            }
          }
        }
      },
      'ember-flexberry-dummy-suggestion-file': {
        'projections': {
          'SuggestionFileL': {
            'order': {
              __caption__: 'Порядок'
            },
            'file': {
              __caption__: 'Файл'
            },
            'suggestion': {
              __caption__: 'Предложение'
            }
          }
        }
      },
      'integration-examples/edit-form/validation/base': {
        'projections': {
          'BaseE': {
            'flag': {
              __caption__: 'Флаг'
            },
            'number': {
              __caption__: 'Число'
            },
            'text': {
              __caption__: 'Текст'
            },
            'longText': {
              __caption__: 'Длинный текст'
            },
            'date': {
              __caption__: 'Дата'
            },
            'enumeration': {
              __caption__: 'Перечисление'
            },
            'file': {
              __caption__: 'Файл'
            },
            'master': {
              __caption__: 'Мастер',
              'text': {
                __caption__: 'Текст'
              }
            },
            'details': {
              __caption__: 'Детейлы',
              'flag': {
                __caption__: 'Флаг'
              },
              'number': {
                __caption__: 'Число'
              },
              'text': {
                __caption__: 'Текст'
              }
            }
          }
        }
      }
    },

    'application-name': 'Тестовый стенд ember-flexberry',

    'forms': {
      'loading': {
        'spinner-caption': 'Данные загружаются, пожалуйста подождите...'
      },
      'index': {
        'greeting': 'Добро пожаловать на тестовый стенд ember-flexberry!',
        'components': 'Некоторые компоненты',
        'log-service': {
          'title': 'Сервис логирования',
          'app-log': 'Лог приложения',
          'settings-example': 'Пример работы с настройками',
          'log-cleaning': 'Очистка лога'
        },
        'users': 'Пользователи приложения',
        'localization': 'Локализация',
        'log': 'Лог приложения',
        'blocking': 'Список блокировок',
        'search': {
          'title': 'Поиск',
          'field-label': 'Название поля',
          'field-placeholder': 'Фамилия, имя и отчество',
          'date-field-placeholder': 'ДД.ММ.ГГГГ или выберите в календаре',
          'button-caption': 'Поиск',
          'checkbox-label': 'По всем ОСЗ'
        }
      },

      'application': {
        'header': {
          'menu': {
            'sitemap-button': {
              'title': 'Меню'
            },
            'user-settings-service-checkbox': {
              'caption': 'Сохранение настроек',
              'title': 'Использовать сервис сохранения пользовательских настроек'
            },
            'show-menu': {
              'caption': 'Показать меню'
            },
            'hide-menu': {
              'caption': 'Скрыть меню'
            },
            'language-dropdown': {
              'caption': 'Язык приложения',
              'placeholder': 'Выберите язык'
            }
          },
          'login': {
            'caption': 'Вход'
          },
          'logout': {
            'caption': 'Выход'
          },
          'profile': {
            'caption': 'Личный кабинет'
          }
        },

        'flexberry-objectlistview-modal-question-caption': {
          'confirm-button-caption': 'Удалить',
          'cancel-button-caption': 'Отмена',
          'delete-at-listform-question-caption': 'Вы уверены, что хотите удалить выбранные записи?',
          'delete-at-editform-question-caption': 'Вы уверены, что хотите удалить запись?'
        },

        'footer': {
          'application-name': 'Тестовый стенд ember-flexberry',
          'application-version': {
            'caption': 'Версия аддона {{version}}',
            'title': 'Это версия аддона ember-flexberry, которая сейчас используется в этом тестовом приложении ' + '(версия npm-пакета + хэш коммита). ' + 'Кликните, чтобы перейти на GitHub.'
          }
        },

        'sitemap': {
          'application-name': {
            'caption': 'Тестовый стенд ember-flexberry',
            'title': ''
          },
          'application-version': {
            'caption': 'Версия аддона {{version}}',
            'title': 'Это версия аддона ember-flexberry, которая сейчас используется в этом тестовом приложении ' + '(версия npm-пакета + хэш коммита). ' + 'Кликните, чтобы перейти на GitHub.'
          },
          'index': {
            'caption': 'Главная',
            'title': ''
          },
          'application': {
            'caption': 'Приложение',
            'title': '',
            'application-users': {
              'caption': 'Пользователи приложения',
              'title': ''
            },
            'localizations': {
              'caption': 'Локализация',
              'title': ''
            },
            'suggestion-types': {
              'caption': 'Типы предложений',
              'title': ''
            },
            'suggestions': {
              'caption': 'Предложения',
              'title': ''
            },
            'multi': {
              'caption': 'Несколько списков',
              'title': ''
            },
            'suggestion-file': {
              'caption': 'Файлы предложения',
              'title': ''
            }
          },
          'log-service-examples': {
            'caption': 'Сервис логирования',
            'title': '',
            'application-log': {
              'caption': 'Лог приложения',
              'title': ''
            },
            'settings-example': {
              'caption': 'Пример работы с настройками',
              'title': ''
            },
            'clear-log-form': {
              'caption': 'Очистка лога',
              'title': ''
            }
          },
          'lock': {
            'caption': 'Блокировки',
            'title': 'Список блокировок'
          },
          'components-examples': {
            'caption': 'Примеры компонентов',
            'title': '',
            'flexberry-button': {
              'caption': 'flexberry-button',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-checkbox': {
              'caption': 'flexberry-checkbox',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-ddau-checkbox': {
              'caption': 'flexberry-ddau-checkbox',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-dropdown': {
              'caption': 'flexberry-dropdown',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              },
              'conditional-render-example': {
                'caption': 'Пример условного рендеринга',
                'title': ''
              },
              'empty-value-example': {
                'caption': 'Пример dropdown-а с пустым значением',
                'title': ''
              },
              'items-example': {
                'caption': 'Пример элементов значений',
                'title': ''
              }
            },
            'flexberry-field': {
              'caption': 'flexberry-field',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-file': {
              'caption': 'flexberry-file',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              },
              'flexberry-file-in-modal': {
                'caption': 'Пример файла в модальном окне',
                'title': ''
              }
            },
            'flexberry-groupedit': {
              'caption': 'flexberry-groupedit',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              },
              'model-update-example': {
                'caption': 'Обновление модели',
                'title': ''
              },
              'custom-buttons-example': {
                'caption': 'Пользовательские кнопки',
                'title': ''
              },
              'configurate-row-example': {
                'caption': 'Настройка строк',
                'title': ''
              },
              'groupedit-with-lookup-with-computed-atribute': {
                'caption': 'Computed атрибуты LookUp в GroupEdit',
                'title': ''
              },
              'readonly-columns-by-configurate-row-example': {
                'caption': 'Установка readonly columns через configurateRow в GrouptEdit',
                'title': ''
              }
            },
            'flexberry-lookup': {
              'caption': 'flexberry-lookup',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              },
              'customizing-window-example': {
                'caption': 'Настройка окна',
                'title': ''
              },
              'compute-autocomplete': {
                'caption': 'Пример лукапа с вычислимым автокомплитом',
                'title': ''
              },
              'numeric-autocomplete': {
                'caption': 'Пример лукапа c автокомплитом и dropdwon с числовым displayAttributeName',
                'title': ''
              },
              'hierarchy-olv-in-lookup-example': {
                'caption': 'Пример иерархического OLV-а в lookup-e',
                'title': ''
              },
              'limit-function-example': {
                'caption': 'Функция ограничения',
                'title': ''
              },
              'autofill-by-limit-example': {
                'caption': 'Пример autofillByLimit',
                'title': ''
              },
              'limit-function-through-dynamic-properties-example': {
                'caption': 'Функция ограничения через динамические свойства',
                'title': ''
              },
              'lookup-block-form-example': {
                'caption': 'Лукап в блочной форме',
                'title': ''
              },
              'lookup-in-modal': {
                'caption': 'Лукап в модальном окне',
                'title': ''
              },
              'dropdown-mode-example': {
                'caption': 'Режим dropdown',
                'title': ''
              },
              'default-ordering-example': {
                'caption': 'Сортировка по умолчанию',
                'title': ''
              },
              'autocomplete-order-example': {
                'caption': 'Пример сортировки при автокомплите',
                'title': ''
              }
            },
            'flexberry-menu': {
              'caption': 'flexberry-menu',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-objectlistview': {
              'caption': 'flexberry-objectlistview',
              'title': '',
              'limit-function-example': {
                'caption': 'Функция ограничения',
                'title': ''
              },
              'inheritance-models': {
                'caption': 'Наследуемые модели',
                'title': ''
              },
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              },
              'toolbar-custom-buttons-example': {
                'caption': 'Пользовательские кнопки',
                'title': ''
              },
              'on-edit-form': {
                'caption': 'Размещение на форме редактирования',
                'title': ''
              },
              'list-on-editform': {
                'caption': 'Размещение списка детейлов мастера на форме редактирования',
                'title': ''
              },
              'custom-filter': {
                'caption': 'Настройка фильтра',
                'title': ''
              },
              'edit-form-with-detail-list': {
                'caption': 'Пример списка',
                'title': ''
              },
              'hierarchy-example': {
                'caption': 'Пример иерархии на списке',
                'title': ''
              },
              'hierarchy-paging-example': {
                'caption': 'Пример иерархии c пейджингом',
                'title': ''
              },
              'configurate-rows': {
                'caption': 'Раскраска строк',
                'title': ''
              },
              'selected-rows': {
                'caption': 'Выбранные строки',
                'title': ''
              },
              'downloading-files-from-olv-list': {
                'caption': 'Пример скачивания файлов со списка',
                'title': ''
              },
              'object-list-view-resize': {
                'caption': 'Разметка столбцов',
                'title': ''
              },
              'return-from-ediform': {
                'title': 'Возвращение с edit-form на list-form с queryParametr',
                'return-button': 'Вернутся'
              },
              'lock-services-editor-view-list': {
                'caption': 'Пример отображение имени пользователя заблокировшего объект',
                'title': ''
              },
              'limited-text-size-example': {
                'caption': 'Пример ограничения длины текста в ячейках',
                'title': ''
              }
            },
            'flexberry-simpledatetime': {
              'caption': 'flexberry-simpledatetime',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-text-cell': {
              'caption': 'flexberry-text-cell',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-textarea': {
              'caption': 'flexberry-textarea',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-textbox': {
              'caption': 'flexberry-textbox',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'flexberry-toggler': {
              'caption': 'flexberry-toggler',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              },
              'settings-example-inner': {
                'caption': 'Пример работы с настройками (toggler в toggler)',
                'title': ''
              },
              'ge-into-toggler-example': {
                'caption': 'GroupEdit в toggler example'
              }
            },
            'flexberry-tree': {
              'caption': 'flexberry-tree',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            },
            'modal-dialog': {
              'caption': 'modal-dialog',
              'title': ''
            },
            'ui-message': {
              'caption': 'ui-message',
              'title': '',
              'settings-example': {
                'caption': 'Пример работы с настройками',
                'title': ''
              }
            }
          },
          'integration-examples': {
            'caption': 'Примеры интеграции',
            'title': '',
            'edit-form': {
              'caption': 'Форма редактирования',
              'title': '',
              'readonly-mode': {
                'caption': 'Режим только для чтения',
                'title': ''
              },
              'validation': {
                'caption': 'Валидация',
                'title': ''
              }
            }
          },
          'user-setting-forms': {
            'caption': 'Пользовательские настройки',
            'title': '',
            'user-setting-delete': {
              'caption': 'Удаление настроек',
              'title': ''
            }
          },
          'components-acceptance-tests': {
            'caption': 'Acceptance тесты',
            'title': ''
          }
        }
      },

      'login-form': {
        'header': 'Войти в систему',
        'sign-up-caption': 'Или зарегистрироваться',
        'enter-login-caption': 'Введите логин',
        'enter-password-caption': 'Введите пароль',
        'reset-password-caption': 'Забыли пароль?',
        'login-button-caption': 'Войти'
      },

      'support-form': {
        'caption': 'Написать в техподдержку',
        'contacts-caption': 'Контакты техподдержки: 8 (800) 300-44-44, rgirsk-support@ics.perm.ru',
        'enter-name-caption': 'Введите Ваше имя',
        'enter-email-caption': 'Введите Вашу почту',
        'enter-message-placeholder': 'Если вы столкнулись с проблемой, опишите подробно: как она проявляется, какие действия и в каком порядке вы совершали. По возможности приложите скриншот',
        'send-button-caption': 'Отправить',
        'attach-file-caption': 'Прикрепить файл'
      },

      'edit-form': {
        'save-success-message-caption': 'Сохранение завершилось успешно',
        'save-success-message': 'Объект сохранен',
        'save-error-message-caption': 'Ошибка сохранения',
        'delete-success-message-caption': 'Удаление завершилось успешно',
        'delete-success-message': 'Объект удален',
        'delete-error-message-caption': 'Ошибка удаления'
      },

      'list-form': {
        'delete-success-message-caption': 'Удаление завершилось успешно',
        'delete-success-message': 'Объект удален',
        'delete-error-message-caption': 'Ошибка удаления',
        'load-success-message-caption': 'Загрузка данных завершилась успешно',
        'load-success-message': 'Объект загружен',
        'load-error-message-caption': 'Ошибка загрузки данных'
      },

      'ember-flexberry-dummy-application-user-edit': {
        'caption': 'Пользователь приложения',
        'name-caption': 'Имя',
        'eMail-caption': 'E-mail',
        'phone1-caption': 'Номер телефона 1',
        'phone2-caption': 'Номер телефона 2',
        'phone3-caption': 'Номер телефона 3',
        'activated-caption': 'Учетная запись активирована',
        'vK-caption': 'VK',
        'facebook-caption': 'Facebook',
        'twitter-caption': 'Twitter',
        'birthday-caption': 'Дата рождения',
        'gender-caption': 'Пол',
        'vip-caption': 'VIP',
        'karma-caption': 'Карма',
        'name-validation-message-caption': 'Заполните поле "Имя"',
        'eMail-validation-message-caption': 'Заполните поле "E-mail"'
      },

      'ember-flexberry-dummy-comment-edit': {
        'caption': 'Комментарий',
        'text-caption': 'Текст комментария',
        'votes-caption': 'Количество голосов',
        'moderated-caption': 'Одобрено',
        'author-caption': 'Автор',
        'userVotes-caption': 'Голоса пользователей',
        'date-caption': 'Дата',
        'author-validation-message-caption': 'Заполните поле "Автор"'
      },

      'ember-flexberry-dummy-comment-vote-edit': {
        'caption': 'Голос пользователя',
        'voteType-caption': 'Тип голоса',
        'applicationUser-caption': 'Пользователь приложения'
      },

      'ember-flexberry-dummy-localization-edit': {
        'caption': 'Локализация',
        'name-caption': 'Наименование',
        'name-validation-message-caption': 'Заполните наименование'
      },

      'ember-flexberry-dummy-suggestion-edit': {
        'caption': 'Предложение',
        'address-caption': 'Адрес',
        'text-caption': 'Описание',
        'date-caption': 'Дата',
        'votes-caption': 'Количество голосов',
        'moderated-caption': 'Одобрено',
        'type-caption': 'Тип предложения',
        'author-caption': 'Автор предложения',
        'editor1-caption': 'Редактор предложения',
        'files-caption': 'Прикрепленные файлы',
        'userVotes-caption': 'Голоса пользователей',
        'comments-caption': 'Комментарии',
        'type-validation-message-caption': 'Заполните тип предложения',
        'author-validation-message-caption': 'Заполните поле "Автор"',
        'editor-validation-message-caption': 'Заполните поле "Редактор"',
        'readonly-groupedit-with-lookup-with-computed-atribute-field': 'Readonly для LookUp "Пользователь приложения" в GroupEdit "Голоса пользователей"',
        'limit-function-groupedit-with-lookup-with-computed-atribute-field': 'Ограничения для LookUp "Пользователь приложения" в GroupEdit "Голоса пользователей"'
      },

      'ember-flexberry-dummy-suggestion-file-list': {
        'header': 'Файлы предложения'
      },

      'ember-flexberry-dummy-suggestion-file-edit': {
        'header': 'Файл предложения',
        'suggestion': 'Предложение',
        'order': 'Номер',
        'file': 'Файл'
      },

      'ember-flexberry-dummy-toggler-example-master-e': {
        'caption': 'Мастер',
        'toggler-example-master-property-caption': 'Свойство мастера',
        'toggler-example-deteil-property-caption': 'Детейл'
      },

      'ember-flexberry-dummy-suggestion-type-edit': {
        'caption': 'Тип предложения',
        'name-caption': 'Наименование',
        'moderated-caption': 'Одобрено',
        'parent-caption': 'Иерархия',
        'localized-types-caption': 'Локализация типа',
        'name-validation-message-caption': 'Заполните наименование'
      },

      'ember-flexberry-dummy-application-user-list': {
        'caption': 'Пользователи приложения'
      },

      'ember-flexberry-dummy-localization-list': {
        'caption': 'Локализация'
      },

      'ember-flexberry-dummy-suggestion-list': {
        'caption': 'Предложения'
      },

      'ember-flexberry-dummy-suggestion-type-list': {
        'caption': 'Типы предложений'
      },

      'ember-flexberry-dummy-multi-list': {
        'caption': 'Несколько списков на форме',
        'multi-edit-form': 'Несколько списков на эдитформе'
      },

      'log-service-examples': {
        'settings-example': {
          'caption': 'Сервис логирования. Пример работы с настройками',
          'setting-column-header-caption': 'Настройка сервиса логирования',
          'settings-value-column-header-caption': 'Текущее значение настройки',
          'throw-exception-button-caption': 'Бросить исключение',
          'reject-rsvp-promise-button-caption': 'Отклонить promise',
          'ember-assert-button-caption': 'assert',
          'ember-logger-error-button-caption': 'Error',
          'ember-logger-warn-button-caption': 'Warn',
          'ember-deprecate-button-caption': 'Deprecate',
          'ember-logger-log-button-caption': 'Log',
          'ember-logger-info-button-caption': 'Info',
          'ember-logger-debug-button-caption': 'Debug',
          'throw-exception-button-message': 'Брошено исключение',
          'reject-rsvp-promise-button-message': 'Promise отклонен',
          'ember-assert-button-message': 'Вызван метод assert',
          'ember-logger-error-button-message': 'Вызван метод Ember.Logger.error',
          'ember-logger-warn-button-message': 'Вызван метод Ember.warn',
          'ember-deprecate-button-message': 'Вызван метод Ember.deprecate',
          'ember-logger-log-button-message': 'Вызван метод Ember.Logger.log',
          'ember-logger-info-button-message': 'Вызван метод Ember.Logger.info',
          'ember-logger-debug-button-message': 'Вызван метод Ember.debug'
        }
      },

      'new-platform-flexberry-services-lock-list': {
        'change-user-name': 'Изменить имя пользователя',
        'open-read-only': 'Открывать только для чтения',
        'unlock-object': 'Снимать блокировку',
        'enter-new-user-name': 'Введите новое имя пользователя:'
      },

      'components-examples': {
        'flexberry-button': {
          'settings-example': {
            'caption': 'Пример работы с настройками flexberry-button'
          }
        },
        'flexberry-checkbox': {
          'settings-example': {
            'caption': 'Flexberry-checkbox. Пример работы с настройками'
          }
        },
        'flexberry-ddau-checkbox': {
          'settings-example': {
            'caption': 'Пример работы с настройками flexberry-ddau-checkbox'
          }
        },
        'flexberry-dropdown': {
          'settings-example': {
            'caption': 'Flexberry-dropdown. Пример работы с настройками'
          },
          'conditional-render-example': {
            'caption': 'Flexberry-dropdown. Пример условного рендеринга',
            'info-caption': 'Описание варианта использования',
            'info-message': 'Шаблон страницы выглядит следующим образом:' + '{{pageTemplate}}' + 'После того как какое-либо значение будет выбрано, компонент будет заменен на ' + '&lt;span&gt;selected value&lt;/span&gt;,<br>' + 'после этого следует проверить консоль браузера, она должна быть чиста от ошибок "Semantic-UI" и прочих ошибок.'
          },
          'empty-value-example': {
            'caption': 'Flexberry-dropdown. Пример dropdown-а с пустым значением',
            'message': 'При открытии формы в dropdown-е должно быть не пустое значение. Должно быть Enum value №2.',
            'enumeration-caption': 'Dropdown с пустым значением'
          },
          'items-example': {
            'caption': 'Flexberry-dropdown. Пример значений элементов',
            'checkbox-caption': 'использовать itemsObject'
          }
        },
        'flexberry-field': {
          'settings-example': {
            'caption': 'Flexberry-field. Пример работы с настройками'
          }
        },
        'flexberry-file': {
          'settings-example': {
            'caption': 'Flexberry-file. Пример работы с настройками'
          }
        },
        'flexberry-groupedit': {
          'settings-example': {
            'caption': 'Flexberry-groupedit. Пример работы с настройками'
          },
          'custom-buttons-example': {
            'caption': 'Flexberry-groupedit. Пользовательские кнопки',
            'custom-message': 'Привет!',
            'custom-button-name': 'Передать привет',
            'disable-button-name': 'Отключить соседнюю кнопку',
            'enable-button-name': 'Включить соседнюю кнопку'
          },
          'configurate-row-example': {
            'caption': 'Flexberry-groupedit. Настройка строк'
          },
          'model-update-example': {
            'caption': 'Flexberry-groupedit. Обновление модели',
            'addDetailButton': 'Добавить детейл',
            'removeDetailButton': 'Удалить детейл'
          }
        },
        'flexberry-lookup': {
          'settings-example': {
            'caption': 'Flexberry-lookup. Пример работы с настройками'
          },
          'customizing-window-example': {
            'caption': 'Flexberry-lookup. Настройка окна',
            'titleLookup': 'Мастер'
          },
          'compute-autocomplete': {
            'caption': 'Пример лукапа с вычислимым автокомплитом',
            'title': ''
          },
          'numeric-autocomplete': {
            'caption': 'Пример лукапа c автокомплитом и dropdwon с числовым displayAttributeName',
            'title': ''
          },
          'hierarchy-olv-in-lookup-example': {
            'caption': 'Flexberry-lookup. Пример иерархического OLV-а в lookup-e',
            'titleLookup': 'Мастер'
          },
          'autofill-by-limit-example': {
            'caption': 'Flexberry-lookup. Пример autofillByLimit в lookup-e',
            'titleLookup': 'Мастер'
          },
          'limit-function-example': {
            'caption': 'Flexberry-lookup. Функция ограничения',
            'titleLookup': 'Мастер'
          },
          'limit-function-through-dynamic-properties-example': {
            'caption': 'Flexberry-lookup. Функция ограничения через динамические свойства',
            'titleLookup': 'Мастер',
            'captionFirstLimitFunction': 'Функция ограничения №1',
            'captionSecondLimitFunction': 'Функция ограничения №2',
            'captionClearLimitFunction': 'Очистить функцию ограничения'
          },
          'lookup-block-form-example': {
            'caption': 'Flexberry-lookup. Лукап в блочной форме',
            'message': 'Данный тест работает только в мобильной версии сайта. Чтобы запустить мобильную версию нужно:',
            'paragraph1': 'Перейти в режим разработчика (нажать “F12”).',
            'paragraph2': 'Включить мобильную версию сайта (нажать “Ctrl+Shift+M” в Chrome и Firefox)',
            'paragraph3': 'Обновить страницу (нажать “F5”)'
          },
          'lookup-in-modal': {
            'caption': 'Flexberry-lookup. Лукап в модальном окне',
            'captionModal': 'Кастомное модальное окно №1',
            'captionModalDouble': 'Кастомное модальное окно №2',
            'buttonModal': 'Модальное окно №1',
            'buttonModalDouble': 'Модальное окно №2',
            'buttonClose': 'Закрыть'
          },
          'dropdown-mode-example': {
            'caption': 'Flexberry-lookup. Режим dropdown'
          },
          'default-ordering-example': {
            'caption': 'Flexberry-lookup. Сортировка по умолчанию',
            'titleLookup': 'Мастер'
          },
          'autocomplete-order-example': {
            'caption': 'Flexberry-lookup. Пример сортировки при автокомплите',
            'titleLookup': 'Мастер'
          }
        },
        'flexberry-menu': {
          'settings-example': {
            'caption': 'Flexberry-menu. Пример работы с настройками',
            'titleIcon1': 'Значок выравнен по левому краю',
            'titleIcon2': 'Значок выравнен по правому краю',
            'titleIcon3': 'Подменю'
          }
        },
        'flexberry-objectlistview': {
          'limit-function-example': {
            'caption': 'Flexberry-objectlistview. Функция ограничения',
            'captionFirstLimitFunction': 'Функция ограничения №1',
            'captionSecondLimitFunction': 'Функция ограничения №2',
            'captionClearLimitFunction': 'Очистить функцию ограничения'
          },
          'inheritance-models': {
            'caption': 'Flexberry-objectlistview. Пример наследуемых моделей',
            'message': 'Проверьте представление в OLV. (ПредставлениеE=ПредставлениеL)',
            'projectionBase': 'Представление \'Предок\': Name, E-mail, Birthday',
            'projectionSuccessorPhone': 'Представление \'Наследник телефоны\': Name, Phone1, Phone2, Phone3',
            'projectionSuccessorSoc': 'Представление \'Наследник соц сети\': Name, VK, Facebook, Twitter',
            'buttonRoot': 'Предок',
            'buttonSuccessorPhone': 'Наследник телефоны',
            'buttonSuccessorSoc': 'Наследник соц сети',
            'name-caption': 'Имя',
            'eMail-caption': 'E-mail',
            'phone1-caption': 'Номер телефона 1',
            'phone2-caption': 'Номер телефона 2',
            'phone3-caption': 'Номер телефона 3',
            'vK-caption': 'VK',
            'facebook-caption': 'Facebook',
            'twitter-caption': 'Twitter',
            'birthday-caption': 'Дата рождения'
          },
          'settings-example': {
            'caption': 'Flexberry-objectlistview. Пример работы с настройками'
          },
          'limited-text-size-example': {
            'caption': 'Flexberry-objectlistview. Пример ограничения длины текста в ячейках'
          },
          'toolbar-custom-buttons-example': {
            'caption': 'Flexberry-objectlistview. Пользовательские кнопки',
            'custom-message': 'Привет!',
            'custom-button-name': 'Передать привет',
            'disable-button-name': 'Отключить соседнюю кнопку',
            'enable-button-name': 'Включить соседнюю кнопку',
            'custom-row-button-name': 'Пользовательская кнопка в строке'
          },
          'on-edit-form': {
            'caption': 'Flexberry-objectlistview. FlexberryObjectlistview на форме редактирования',
            'add-button-name': 'Добавить'
          },
          'list-on-editform': {
            'caption': 'Список детейлов Тип предложения'
          },
          'custom-filter': {
            'caption': 'Flexberry-objectlistview. Настройка фильтра'
          },
          'hierarchy-example': {
            'caption': 'Flexberry-objectlistview. Пример иерархии на списке'
          },
          'hierarchy-paging-example': {
            'caption': 'Flexberry-objectlistview. Пример иерархии c пейджингом на списке'
          },
          'configurate-rows': {
            'caption': 'Flexberry-objectlistview. Раскраска строк'
          },
          'selected-rows': {
            'caption': 'Flexberry-objectlistview. Выбранные строки'
          },
          'downloading-files-from-olv-list': {
            'caption': 'Flexberry-objectlistview. Скачивание файлов со списка'
          },
          'object-list-view-resize': {
            'caption': 'Flexberry-objectlistview. Разметка столбцов',
            'button-сaption': 'Добавить',
            'title': ''
          },
          'lock-services-editor-view': {
            'blocked-by': 'Заблокированно пользователем'
          }
        },
        'flexberry-simpledatetime': {
          'settings-example': {
            'caption': 'Flexberry-simpledatetime. Пример работы с настройками'
          }
        },
        'flexberry-text-cell': {
          'settings-example': {
            'caption': 'Flexberry-text-cell. Пример работы с настройками'
          }
        },
        'flexberry-textarea': {
          'settings-example': {
            'caption': 'Flexberry-textarea. Пример работы с настройками'
          }
        },
        'flexberry-textbox': {
          'settings-example': {
            'caption': 'Flexberry-textbox. Пример работы с настройками'
          }
        },
        'flexberry-toggler': {
          'settings-example': {
            'caption': 'Flexberry-toggler. Пример работы с настройками',
            'togglerContent': 'Некоторое  сворачивающееся/разворачивающееся содержание'
          },
          'settings-example-inner': {
            'caption': 'Flexberry-toggler. Пример работы с настройками',
            'togglerContent': 'Некоторое  сворачивающееся/разворачивающееся содержание',
            'innerTogglerContent': 'Некоторое  сворачивающееся/разворачивающееся содержание внутреннего тогглера'
          },
          'ge-into-toggler-example': {
            'caption': 'Flexberry-toggler. GroupEdit в toggler example'
          }
        },
        'flexberry-tree': {
          'settings-example': {
            'caption': 'Пример работы с настройками flexberry-tree',
            'json-tree-tab-caption': 'Дерево заданное JSON-объектом',
            'json-tree-latest-clicked-node-caption': 'Настройки последней кликнутой вершины дерева',
            'json-tree-latest-clicked-node-placeholder': 'Кликните на любую вершину дерева, чтобы отобразить её настройки'
          }
        },
        'modal-dialog': {
          'caption': 'Примеры использования компонента {{component}}',
          'in-current-context': 'В контексте текущего шаблона',
          'application-context': 'В контексте шаблона приложения',
          'open-lightbox': 'Открыть модальное окно',
          'open-second-lightbox': 'Открыть второе модальное окно',
          'lightbox-title': 'Модальное окно',
          'second-lightbox-title': 'Второе модальное окно',
          'open-sidepage': 'Открыть модальное окно в режиме «sidepage»',
          'open-second-sidepage': 'Открыть второе модальное окно в режиме «sidepage»',
          'sidepage-title': 'Модальное окно в режиме «sidepage»',
          'second-sidepage-title': 'Второе модальное окно в режиме «sidepage»'
        },
        'ui-message': {
          'settings-example': {
            'caption': 'Ui-message. Пример работы с настройками',
            'captionMessage': 'Результат проверки',
            'messageError': 'Операция не выполнена',
            'messageSuccess': 'Операция выполнена успешно',
            'messageWarning': 'Частично выполнено',
            'messageInfo': 'Обратите внимание!'
          }
        }
      },
      'integration-examples': {
        'edit-form': {
          'readonly-mode': {
            'caption': 'Integration examples. Режим только для чтения',
            'readonly-flag-management-segment-caption': 'Управление режимом только для чтения формы',
            'readonly-flag-value-segment-caption': 'Значения свойства \'readonly\' контроллера',
            'readonly-flag-caption': 'Форма находится в режиме только для чтения',
            'flag-caption': 'Флаг',
            'number-caption': 'Число',
            'text-caption': 'Текст',
            'long-text-caption': 'Длинный текст',
            'date-caption': 'Дата',
            'time-caption': 'Дата + Время',
            'enumeration-caption': 'Перечисление',
            'file-caption': 'Файл',
            'master-caption': 'Мастер',
            'master-dropdown-caption': 'Мастер в режиме dropdown-а'
          },
          'validation': {
            'caption': 'Integration examples. Валидация',
            'summary-caption': 'Ошибки валидации:',
            'flag-caption': 'Флаг',
            'number-caption': 'Число',
            'text-caption': 'Текст',
            'long-text-caption': 'Длинный текст',
            'date-caption': 'Дата',
            'enumeration-caption': 'Перечисление',
            'file-caption': 'Файл',
            'master-caption': 'Мастер',
            'details-caption': 'Детейлы'
          }
        }
      },
      'user-setting-forms': {
        'user-setting-delete': {
          'caption': 'Пользовательские настройки',
          'all-del-button-name': 'Удалить все!',
          'message': 'Настройки удалены'
        }
      }
    },

    'components': {
      'settings-example': {
        'component-template-caption': 'Шаблон компонента',
        'controller-properties-caption': 'Свойства контроллера',
        'component-current-settings-caption': 'Текущие настройки компонента',
        'component-default-settings-caption': 'Настройки компонента по умолчанию',
        'component-with-applied-settings-caption': 'Компонент с примененными текущими настройками'
      }
    }
  });

  exports.default = translations;
});
define('dummy/mixins/link-action', ['exports', 'ember-link-action/mixins/link-action'], function (exports, _linkAction) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _linkAction.default;
    }
  });
});
define('dummy/mixins/list-form-controller-operations-indication', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Mixin.create({
    actions: {
      /**
        Handler for success ui-message component 'onShow' action.
         @method actions.onSuccessMessageShow
       */
      onSuccessMessageShow: function onSuccessMessageShow() {},


      /**
        Handler for success ui-message component 'onHide' action.
         @method actions.onSuccessMessageHide
       */
      onSuccessMessageHide: function onSuccessMessageHide() {
        this.set('showFormSuccessMessage', false);
      },


      /**
        Handler for error ui-message component 'onShow' action.
         @method actions.onErrorMessageShow
       */
      onErrorMessageShow: function onErrorMessageShow() {},


      /**
        Handler for error ui-message component 'onHide' action.
         @method actions.onErrorMessageHide
       */
      onErrorMessageHide: function onErrorMessageHide() {
        this.set('showFormErrorMessage', false);
      }
    },

    /**
      Latest operation type ('save' or 'delete').
       @property latestOperationType.
      @type String
     */
    latestOperationType: undefined,

    /**
      Flag: indicates whether asynchronous operation succeed or not.
       @property showFormSuccessMessage.
      @type Boolean
     */
    showFormSuccessMessage: false,

    /**
      Success message caption related to current locale and operation type.
       @property formSuccessMessageCaption.
      @type String
     */
    formSuccessMessageCaption: Ember.computed('i18n.locale', 'latestOperationType', function () {
      var i18n = this.get('i18n');
      if (this.get('latestOperationType') === 'delete') {
        return i18n.t('forms.list-form.delete-success-message-caption');
      }

      return i18n.t('forms.list-form.load-success-message-caption');
    }),

    /**
      Success message related to current locale and operation type.
       @property formSuccessMessage.
      @type String
     */
    formSuccessMessage: Ember.computed('i18n.locale', 'latestOperationType', function () {
      var i18n = this.get('i18n');
      var message = null;
      if (this.get('latestOperationType') === 'delete') {
        message = i18n.t('forms.list-form.delete-success-message');
      } else {
        message = i18n.t('forms.list-form.load-success-message');
      }

      return new Ember.String.htmlSafe('<ul><li>' + message + '</li></ul>');
    }),

    /**
      Flag: indicates whether asynchronous operation failed or not.
       @property showFormErrorMessage.
      @type Boolean
     */
    showFormErrorMessage: false,

    /**
      Error message caption related to current locale and operation type.
       @property formErrorMessageCaption.
      @type String
     */
    formErrorMessageCaption: Ember.computed('i18n.locale', 'latestOperationType', function () {
      var i18n = this.get('i18n');
      if (this.get('latestOperationType') === 'delete') {
        return i18n.t('forms.list-form.delete-error-message-caption');
      }

      return i18n.t('forms.list-form.load-error-message-caption');
    }),

    /**
      Success message related to current locale and operation type.
       @property formErrorMessage
      @type String
     */
    formErrorMessage: Ember.computed('errorMessages.[]', function () {
      var message = '';
      var errorMessages = this.get('errorMessages');
      if (Ember.isArray(errorMessages)) {
        errorMessages.forEach(function (currentErrorMessage) {
          message += '<li>' + currentErrorMessage + '</li>';
        });
      }

      return new Ember.String.htmlSafe('<ul>' + message + '</ul>');
    }),

    /**
      This method will be invoked before delete operation will be called.
       @method onDeleteActionStarted.
     */
    onDeleteActionStarted: function onDeleteActionStarted() {
      this._super.apply(this, arguments);

      this.set('latestOperationType', 'delete');
    },


    /**
      This method will be invoked when delete operation successfully completed.
       @method onDeleteActionFulfilled.
     */
    onDeleteActionFulfilled: function onDeleteActionFulfilled() {
      this._super.apply(this, arguments);

      this.set('showFormSuccessMessage', true);
      this.set('showFormErrorMessage', false);
    },


    /**
      This method will be invoked when delete operation completed, but failed.
       @method onDeleteActionRejected.
      @param {Object} errorData Data about delete operation fail.
     */
    /* eslint-disable no-unused-vars */
    onDeleteActionRejected: function onDeleteActionRejected(errorData, record) {
      this._super.apply(this, arguments);

      this.set('showFormSuccessMessage', false);
      this.set('showFormErrorMessage', true);
    },

    /* eslint-enable no-unused-vars */

    /**
      This method will be invoked always when delete operation completed,
      regardless of delete promise's state (was it fulfilled or rejected).
       @method onDeleteActionAlways.
      @param {Object} data Data about completed delete operation.
     */
    /* eslint-disable no-unused-vars */
    onDeleteActionAlways: function onDeleteActionAlways(data) {
      this._super.apply(this, arguments);
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/mixins/list-form-route-operations-indication', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Mixin.create({

    /* eslint-disable no-unused-vars */
    setupController: function setupController(controller, model) {
      this._super.apply(this, arguments);

      this.set('copyController', controller);
      controller.set('showFormSuccessMessage', false);
      controller.set('showFormErrorMessage', false);
    },
    /* eslint-enable no-unused-vars */

    /**
      @property copyController.
     */
    copyController: undefined,

    /**
      This method will be invoked before load operation will be called.
       @method onModelLoadingStarted.
      @param {Object} queryParameters
      @param {Transition} transition Current transition object.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingStarted: function onModelLoadingStarted(queryParameters, transition) {
      this._super.apply(this, arguments);

      var controller = this.get('copyController');
      if (controller) {
        controller.set('latestOperationType', 'load');
      }
    },

    /* eslint-enable no-unused-vars */

    /**
      This method will be invoked when load operation successfully completed.
       @method onModelLoadingFulfilled.
      @param {Object} records
      @param {Transition} transition Current transition object.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingFulfilled: function onModelLoadingFulfilled(records, transition) {
      this._super.apply(this, arguments);

      var controller = this.get('copyController');
      if (controller) {
        controller.set('showFormSuccessMessage', true);
        controller.set('showFormErrorMessage', false);
      }
    },

    /* eslint-enable no-unused-vars */

    /**
      This method will be invoked when load operation completed, but failed.
       @method onModelLoadingRejected.
      @param {Object} errorData Data about load operation fail.
      @param {Transition} transition Current transition object.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingRejected: function onModelLoadingRejected(errorData, transition) {
      this._super.apply(this, arguments);

      var controller = this.get('copyController');
      if (controller) {
        controller.set('showFormSuccessMessage', false);
        controller.set('showFormErrorMessage', true);
      }
    },

    /* eslint-enable no-unused-vars */

    /**
      This method will be invoked always when load operation completed,
      regardless of load promise's state (was it fulfilled or rejected).
       @method onModelLoadingAlways.
      @param {Object} data Data about completed load operation.
      @param {Transition} transition Current transition object.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingAlways: function onModelLoadingAlways(data, transition) {
      this._super.apply(this, arguments);
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/models/aggregator', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    // This property is for flexberry-groupedit component.
    // Inverse relationship is necessary here.
    details: _emberData.default.hasMany('components-examples/flexberry-groupedit/shared/detail', {
      inverse: 'aggregator',
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('AggregatorE', 'aggregator', {
    details: (0, _attributes.hasMany)('components-examples/flexberry-groupedit/shared/detail', 'Details', {
      flag: (0, _attributes.attr)('Flagsdfadf'),
      text: (0, _attributes.attr)('Textadsfasd'),
      date: (0, _attributes.attr)('Date'),
      enumeration: (0, _attributes.attr)('Enumeration'),
      file: (0, _attributes.attr)('File'),
      master: (0, _attributes.belongsTo)('components-examples/flexberry-groupedit/shared/master', 'Master', {
        text: (0, _attributes.attr)('Text', {
          hidden: true
        })
      }, {
        displayMemberPath: 'text'
      })
    })
  });

  // Edit form projection for test 'configurate row'.
  Model.defineProjection('ConfigurateRowView', 'components-examples/flexberry-groupedit/shared/aggregator', {
    details: (0, _attributes.hasMany)('components-examples/flexberry-groupedit/shared/detail', 'Details', {
      flag: (0, _attributes.attr)('Flag'),
      text: (0, _attributes.attr)('Text')
    })
  });

  // Projection for testing displaying changes on GE after manual model update.
  Model.defineProjection('ManualModelUpdateView', 'components-examples/flexberry-groupedit/shared/aggregator', {
    details: (0, _attributes.hasMany)('components-examples/flexberry-groupedit/shared/detail', 'Details', {
      flag: (0, _attributes.attr)('Flag'),
      text: (0, _attributes.attr)('Text'),
      date: (0, _attributes.attr)('Date'),
      enumeration: (0, _attributes.attr)('Enumeration'),
      file: (0, _attributes.attr)('File'),
      master: (0, _attributes.belongsTo)('components-examples/flexberry-groupedit/shared/master', 'Master', {
        text: (0, _attributes.attr)('Text', {
          hidden: true
        })
      }, {
        displayMemberPath: 'text'
      })
    })
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-checkbox/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    flag: _emberData.default.attr('boolean')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-checkbox/settings-example/base', {
    flag: (0, _attributes.attr)('Flag')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-ddau-checkbox/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    flag: _emberData.default.attr('boolean')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-ddau-checkbox/settings-example/base', {
    flag: (0, _attributes.attr)('Flag')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-dropdown/conditional-render-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    enumeration: _emberData.default.attr('components-examples/flexberry-dropdown/conditional-render-example/enumeration')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-dropdown/conditional-render-example/enumeration', {
    enumeration: (0, _attributes.attr)('Enumeration')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-dropdown/empty-value-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    enumeration: _emberData.default.attr('components-examples/flexberry-dropdown/empty-value-example/enumeration')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-dropdown/empty-value-example/base', {
    enumeration: (0, _attributes.attr)('Enumeration')
  });
  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-dropdown/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    enumeration: _emberData.default.attr('components-examples/flexberry-dropdown/settings-example/enumeration')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-dropdown/settings-example/base', {
    enumeration: (0, _attributes.attr)('Enumeration')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-field/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    text: _emberData.default.attr('string')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-field/settings-example/base', {
    text: (0, _attributes.attr)('Text')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-file/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    file: _emberData.default.attr('file')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-file/settings-example/base', {
    file: (0, _attributes.attr)('file')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-groupedit/shared/aggregator', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    // This property is for flexberry-groupedit component.
    // Inverse relationship is necessary here.
    details: _emberData.default.hasMany('components-examples/flexberry-groupedit/shared/detail', {
      inverse: 'aggregator',
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('AggregatorE', 'components-examples/flexberry-groupedit/shared/aggregator', {
    details: (0, _attributes.hasMany)('components-examples/flexberry-groupedit/shared/detail', 'Details', {
      flag: (0, _attributes.attr)('Flag'),
      text: (0, _attributes.attr)('Text'),
      date: (0, _attributes.attr)('Date'),
      enumeration: (0, _attributes.attr)('Enumeration'),
      file: (0, _attributes.attr)('File'),
      master: (0, _attributes.belongsTo)('components-examples/flexberry-groupedit/shared/master', 'Master', {
        text: (0, _attributes.attr)('Text', {
          hidden: true
        })
      }, {
        displayMemberPath: 'text'
      })
    })
  });

  // Edit form projection for test 'configurate row'.
  Model.defineProjection('ConfigurateRowView', 'components-examples/flexberry-groupedit/shared/aggregator', {
    details: (0, _attributes.hasMany)('components-examples/flexberry-groupedit/shared/detail', 'Details', {
      flag: (0, _attributes.attr)('Flag'),
      text: (0, _attributes.attr)('Text')
    })
  });

  // Projection for testing displaying changes on GE after manual model update.
  Model.defineProjection('ManualModelUpdateView', 'components-examples/flexberry-groupedit/shared/aggregator', {
    details: (0, _attributes.hasMany)('components-examples/flexberry-groupedit/shared/detail', 'Details', {
      flag: (0, _attributes.attr)('Flag'),
      text: (0, _attributes.attr)('Text'),
      date: (0, _attributes.attr)('Date'),
      enumeration: (0, _attributes.attr)('Enumeration'),
      file: (0, _attributes.attr)('File'),
      master: (0, _attributes.belongsTo)('components-examples/flexberry-groupedit/shared/master', 'Master', {
        text: (0, _attributes.attr)('Text', {
          hidden: true
        })
      }, {
        displayMemberPath: 'text'
      })
    })
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-groupedit/shared/detail', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    // Inversed relationship for aggregator.details.
    // It's not a property for flexberry-lookup component.
    aggregator: _emberData.default.belongsTo('components-examples/flexberry-groupedit/shared/aggregator', {
      inverse: 'details',
      async: false
    }),

    flag: _emberData.default.attr('boolean'),
    text: _emberData.default.attr('string'),
    date: _emberData.default.attr('date'),
    enumeration: _emberData.default.attr('components-examples/flexberry-groupedit/shared/detail-enumeration'),
    file: _emberData.default.attr('file'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    master: _emberData.default.belongsTo('components-examples/flexberry-groupedit/shared/master', {
      inverse: null,
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('DetailE', 'components-examples/flexberry-groupedit/shared/detail', {
    flag: (0, _attributes.attr)('Flag'),
    text: (0, _attributes.attr)('Text'),
    date: (0, _attributes.attr)('Date'),
    enumeration: (0, _attributes.attr)('Enumeration'),
    file: (0, _attributes.attr)('File'),
    master: (0, _attributes.belongsTo)('components-examples/flexberry-groupedit/shared/master', 'Master', {
      text: (0, _attributes.attr)('Text', {
        hidden: true
      })
    }, {
      displayMemberPath: 'text'
    })
  });

  // Edit form short projection.
  Model.defineProjection('DetailShortE', 'components-examples/flexberry-groupedit/shared/detail', {
    flag: (0, _attributes.attr)('Flag'),
    text: (0, _attributes.attr)('Text'),
    enumeration: (0, _attributes.attr)('Enumeration')
  });

  // Edit form ultra short projection.
  Model.defineProjection('DetailUltraShortE', 'components-examples/flexberry-groupedit/shared/detail', {
    flag: (0, _attributes.attr)('Flag'),
    enumeration: (0, _attributes.attr)('Enumeration')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-groupedit/shared/master', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    text: _emberData.default.attr('string')
  });

  Model.defineProjection('MasterL', 'components-examples/flexberry-groupedit/shared/master', {
    text: (0, _attributes.attr)('Text')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-simpledatetime/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    date: _emberData.default.attr('date')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-flexberry-simpledatetime/settings-example/base', {
    date: (0, _attributes.attr)('Date')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-textarea/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    text: _emberData.default.attr('string')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-textarea/settings-example/base', {
    text: (0, _attributes.attr)('Text')
  });

  exports.default = Model;
});
define('dummy/models/components-examples/flexberry-textbox/settings-example/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    text: _emberData.default.attr('string')
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'components-examples/flexberry-textbox/settings-example/base', {
    text: (0, _attributes.attr)('Text')
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-application-user', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    name: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Name is required'
    }),
    eMail: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'User email is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    name: _emberData.default.attr('string'),
    eMail: _emberData.default.attr('string'),
    phone1: _emberData.default.attr('string'),
    phone2: _emberData.default.attr('string'),
    phone3: _emberData.default.attr('string'),
    activated: _emberData.default.attr('boolean'),
    vK: _emberData.default.attr('string'),
    facebook: _emberData.default.attr('string'),
    twitter: _emberData.default.attr('string'),
    birthday: _emberData.default.attr('date'),
    gender: _emberData.default.attr('ember-flexberry-dummy-gender'),
    vip: _emberData.default.attr('boolean'),
    karma: _emberData.default.attr('decimal')
  });

  // Edit form projection.
  Model.defineProjection('ApplicationUserE', 'ember-flexberry-dummy-application-user', {
    name: (0, _attributes.attr)('Name'),
    eMail: (0, _attributes.attr)('E-mail'),
    phone1: (0, _attributes.attr)('Phone1'),
    phone2: (0, _attributes.attr)('Phone2'),
    phone3: (0, _attributes.attr)('Phone3'),
    activated: (0, _attributes.attr)('Activated'),
    vK: (0, _attributes.attr)('VK'),
    facebook: (0, _attributes.attr)('Facebook'),
    twitter: (0, _attributes.attr)('Twitter'),
    birthday: (0, _attributes.attr)('Birthday'),
    gender: (0, _attributes.attr)('Gender'),
    vip: (0, _attributes.attr)('Vip'),
    karma: (0, _attributes.attr)('Karma')
  });

  // List form projection.
  Model.defineProjection('ApplicationUserL', 'ember-flexberry-dummy-application-user', {
    name: (0, _attributes.attr)('Name'),
    eMail: (0, _attributes.attr)('E-mail'),
    activated: (0, _attributes.attr)('Activated'),
    birthday: (0, _attributes.attr)('Birthday'),
    gender: (0, _attributes.attr)('Gender'),
    karma: (0, _attributes.attr)('Karma')
  });

  // Projection for lookup example on window customization.
  Model.defineProjection('PreviewExampleView', 'ember-flexberry-dummy-application-user', {
    name: (0, _attributes.attr)('Name')
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-comment-vote', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    applicationUser: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'ApplicationUser is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    // Inversed relationship for ember-flexberry-dummy-comment.userVotes.
    // It's not a property for flexberry-lookup component.
    comment: _emberData.default.belongsTo('ember-flexberry-dummy-comment', {
      inverse: 'userVotes',
      async: false
    }),
    voteType: _emberData.default.attr('ember-flexberry-dummy-vote-type'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    applicationUser: _emberData.default.belongsTo('ember-flexberry-dummy-application-user', {
      inverse: null,
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('CommentVoteE', 'ember-flexberry-dummy-comment-vote', {
    voteType: (0, _attributes.attr)('Vote type'),
    applicationUser: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Application user', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-comment', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    author: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Author is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    suggestion: _emberData.default.belongsTo('ember-flexberry-dummy-suggestion', {
      inverse: 'comments',
      async: false
    }),
    text: _emberData.default.attr('string'),
    votes: _emberData.default.attr('number'),
    moderated: _emberData.default.attr('boolean'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    author: _emberData.default.belongsTo('ember-flexberry-dummy-application-user', {
      inverse: null,
      async: false
    }),

    // This property is for flexberry-groupedit component.
    // Inverse relationship is necessary here.
    userVotes: _emberData.default.hasMany('ember-flexberry-dummy-comment-vote', {
      inverse: 'comment',
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('CommentE', 'ember-flexberry-dummy-comment', {
    suggestion: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion', 'Suggestion', {
      address: (0, _attributes.attr)('Address', {
        hidden: true
      })
    }),
    text: (0, _attributes.attr)('Text'),
    votes: (0, _attributes.attr)('Votes'),
    moderated: (0, _attributes.attr)('Moderated'),
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    }),
    userVotes: (0, _attributes.hasMany)('ember-flexberry-dummy-comment-vote', 'User votes', {
      voteType: (0, _attributes.attr)('Vote type'),
      applicationUser: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Application user', {
        name: (0, _attributes.attr)('Name', {
          hidden: true
        })
      }, {
        displayMemberPath: 'name'
      })
    })
  });

  // Detail's list projection.
  Model.defineProjection('CommentD', 'ember-flexberry-dummy-comment', {
    text: (0, _attributes.attr)('Text'),
    votes: (0, _attributes.attr)('Votes'),
    moderated: (0, _attributes.attr)('Moderated'),
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-localization', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    name: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Name is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    name: _emberData.default.attr('string')
  });

  // Edit form projection.
  Model.defineProjection('LocalizationE', 'ember-flexberry-dummy-localization', {
    name: (0, _attributes.attr)('Name')
  });

  // List form projection.
  Model.defineProjection('LocalizationL', 'ember-flexberry-dummy-localization', {
    name: (0, _attributes.attr)('Name')
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-localized-suggestion-type', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    name: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Name is required'
    }),
    localization: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Localization is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    // Inversed relationship for ember-flexberry-dummy-suggestion-type.localizedTypes.
    // It's not a property for flexberry-lookup component.
    suggestionType: _emberData.default.belongsTo('ember-flexberry-dummy-suggestion-type', {
      inverse: 'localizedTypes',
      async: false
    }),
    name: _emberData.default.attr('string'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    localization: _emberData.default.belongsTo('ember-flexberry-dummy-localization', {
      inverse: null,
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('LocalizedSuggestionTypeE', 'ember-flexberry-dummy-localized-suggestion-type', {
    name: (0, _attributes.attr)('Name'),
    localization: (0, _attributes.belongsTo)('ember-flexberry-dummy-localization', 'Localization', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-parent', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    name: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Name is required'
    }),
    eMail: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'User email is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    name: _emberData.default.attr('string'),
    eMail: _emberData.default.attr('string'),
    birthday: _emberData.default.attr('date')
  });
  Model.defineProjection('parentE', 'ember-flexberry-dummy-parent', {
    name: (0, _attributes.attr)('Name'),
    eMail: (0, _attributes.attr)('E-mail'),
    birthday: (0, _attributes.attr)('Birthday')
  });
  Model.defineProjection('parentL', 'ember-flexberry-dummy-parent', {
    name: (0, _attributes.attr)('Name'),
    eMail: (0, _attributes.attr)('E-mail'),
    birthday: (0, _attributes.attr)('Birthday')
  });
  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-successor-phone', ['exports', 'ember-data', 'dummy/models/ember-flexberry-dummy-parent', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _emberFlexberryDummyParent, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var Model = _emberFlexberryDummyParent.default.extend({
    phone1: _emberData.default.attr('string'),
    phone2: _emberData.default.attr('string'),
    phone3: _emberData.default.attr('string')
  });
  Model.defineProjection('SuccessorE', 'ember-flexberry-dummy-successor-phone', {
    name: (0, _attributes.attr)('Name'),
    phone1: (0, _attributes.attr)('Phone1'),
    phone2: (0, _attributes.attr)('Phone2'),
    phone3: (0, _attributes.attr)('Phone3')
  });
  Model.defineProjection('SuccessorL', 'ember-flexberry-dummy-successor-phone', {
    name: (0, _attributes.attr)('Name'),
    phone1: (0, _attributes.attr)('Phone1'),
    phone2: (0, _attributes.attr)('Phone2'),
    phone3: (0, _attributes.attr)('Phone3')
  });
  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-successor-social-network', ['exports', 'ember-data', 'dummy/models/ember-flexberry-dummy-parent', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _emberFlexberryDummyParent, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var Model = _emberFlexberryDummyParent.default.extend({
    vK: _emberData.default.attr('string'),
    facebook: _emberData.default.attr('string'),
    twitter: _emberData.default.attr('string')
  });
  Model.defineProjection('SuccessorE', 'ember-flexberry-dummy-successor-social-network', {
    name: (0, _attributes.attr)('Name'),
    vK: (0, _attributes.attr)('VK'),
    facebook: (0, _attributes.attr)('Facebook'),
    twitter: (0, _attributes.attr)('Twitter')
  });
  Model.defineProjection('SuccessorL', 'ember-flexberry-dummy-successor-social-network', {
    name: (0, _attributes.attr)('Name'),
    vK: (0, _attributes.attr)('VK'),
    facebook: (0, _attributes.attr)('Facebook'),
    twitter: (0, _attributes.attr)('Twitter')
  });
  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-suggestion-file', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    // Inversed relationship for ember-flexberry-dummy-suggestion.files.
    // It's not a property for flexberry-lookup component.
    suggestion: _emberData.default.belongsTo('ember-flexberry-dummy-suggestion', {
      inverse: 'files',
      async: false
    }),
    order: _emberData.default.attr('number', { ordered: true }),
    file: _emberData.default.attr('file')
  });

  // List form projection.
  Model.defineProjection('SuggestionFileL', 'ember-flexberry-dummy-suggestion-file', {
    order: (0, _attributes.attr)('Order'),
    suggestion: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion', 'Suggestion', {
      address: (0, _attributes.attr)('Address', {
        hidden: true
      })
    }, {
      displayMemberPath: 'address'
    }),
    file: (0, _attributes.attr)('File')
  });

  // Edit form projection.
  Model.defineProjection('SuggestionFileE', 'ember-flexberry-dummy-suggestion-file', {
    order: (0, _attributes.attr)('Order'),
    suggestion: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion', 'Suggestion', {
      address: (0, _attributes.attr)('Address')
    }),
    file: (0, _attributes.attr)('File')
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-suggestion-type', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    name: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Name is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    name: _emberData.default.attr('string'),
    moderated: _emberData.default.attr('boolean'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    parent: _emberData.default.belongsTo('ember-flexberry-dummy-suggestion-type', {
      inverse: null,
      async: false
    }),

    // This property is for flexberry-groupedit component.
    // Inverse relationship is necessary here.
    localizedTypes: _emberData.default.hasMany('ember-flexberry-dummy-localized-suggestion-type', {
      inverse: 'suggestionType',
      async: false
    }),

    /**
      Non-stored property.
       @property computedField
    */
    computedField: _emberData.default.attr('string'),

    moderatedChanged: Ember.on('init', Ember.observer('Name', function () {
      Ember.run.once(this, 'computedFieldCompute');
    })),

    nameChanged: Ember.on('init', Ember.observer('Moderated', function () {
      Ember.run.once(this, 'computedFieldCompute');
    })),

    computedFieldCompute: function computedFieldCompute() {
      var result = this.get('name') + ' ' + this.get('moderated');
      this.set('computedField', result);
    }
  });

  // Edit form projection.
  Model.defineProjection('SuggestionTypeE', 'ember-flexberry-dummy-suggestion-type', {
    name: (0, _attributes.attr)('Name'),
    moderated: (0, _attributes.attr)('Moderated'),
    parent: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Parent', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    }),
    localizedTypes: (0, _attributes.hasMany)('ember-flexberry-dummy-localized-suggestion-type', 'Localized types', {
      name: (0, _attributes.attr)('Name'),
      localization: (0, _attributes.belongsTo)('ember-flexberry-dummy-localization', 'Localization', {
        name: (0, _attributes.attr)('Name', {
          hidden: true
        })
      }, {
        displayMemberPath: 'name'
      })
    })
  });

  // List form projection.
  Model.defineProjection('SuggestionTypeL', 'ember-flexberry-dummy-suggestion-type', {
    name: (0, _attributes.attr)('Name'),
    moderated: (0, _attributes.attr)('Moderated'),
    parent: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Parent', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Projection for lookup example on window customization.
  Model.defineProjection('SettingLookupExampleView', 'ember-flexberry-dummy-suggestion-type', {
    name: (0, _attributes.attr)('Name'),
    moderated: (0, _attributes.attr)('Moderated')
  });

  // Projection for lookup example on window customization.
  Model.defineProjection('CustomizeLookupWindowExampleView', 'ember-flexberry-dummy-suggestion-type', {
    name: (0, _attributes.attr)('Name'),
    moderated: (0, _attributes.attr)('Moderated')
  });

  // Projection for lookup with limit function example.
  Model.defineProjection('LookupWithLimitFunctionExampleView', 'ember-flexberry-dummy-suggestion-type', {
    name: (0, _attributes.attr)('Name'),
    moderated: (0, _attributes.attr)('Moderated')
  });

  // Projection for lookup in dropdown mode example.
  Model.defineProjection('DropDownLookupExampleView', 'ember-flexberry-dummy-suggestion-type', {
    name: (0, _attributes.attr)('Name'),
    moderated: (0, _attributes.attr)('Moderated')
  });

  Model.defineProjection('SuggestionTypeEWithComputedField', 'ember-flexberry-dummy-suggestion-type', {
    name: (0, _attributes.attr)(''),
    moderated: (0, _attributes.attr)(''),
    computedField: (0, _attributes.attr)(''),
    parent: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', '', {
      name: (0, _attributes.attr)(''),
      moderated: (0, _attributes.attr)(''),
      computedField: (0, _attributes.attr)('')
    }, {
      displayMemberPath: 'computedField'
    }),
    localizedTypes: (0, _attributes.hasMany)('ember-flexberry-dummy-localized-suggestion-type', '', {
      name: (0, _attributes.attr)('Name'),
      localization: (0, _attributes.belongsTo)('ember-flexberry-dummy-localization', 'Localization', {
        name: (0, _attributes.attr)('Name', { hidden: true })
      }, { displayMemberPath: 'name' }),
      suggestionType: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', '', {}, { hidden: true })
    })
  });

  Model.defineProjection('AutocompleteProjectionExampleView', 'ember-flexberry-dummy-suggestion-type', {
    name: (0, _attributes.attr)('Name'),
    moderated: (0, _attributes.attr)('Moderated'),
    computedField: (0, _attributes.attr)('')
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-suggestion', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    type: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Type is required'
    }),
    author: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Author is required'
    }),
    editor1: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Editor is required'
    }),
    userVotes: (0, _emberCpValidations.validator)('has-many')
  });

  var Model = _model.default.extend(Validations, {
    address: _emberData.default.attr('string'),
    text: _emberData.default.attr('string'),
    date: _emberData.default.attr('date'),
    votes: _emberData.default.attr('number'),
    moderated: _emberData.default.attr('boolean'),
    commentsCount: _emberData.default.attr('number'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    type: _emberData.default.belongsTo('ember-flexberry-dummy-suggestion-type', {
      inverse: null,
      async: false
    }),

    // This property is for flexberry-lookup component. No inverse relationship here.
    author: _emberData.default.belongsTo('ember-flexberry-dummy-application-user', {
      inverse: null,
      async: false
    }),

    // This property is for flexberry-lookup component. No inverse relationship here.
    editor1: _emberData.default.belongsTo('ember-flexberry-dummy-application-user', {
      inverse: null,
      async: false
    }),

    // This property is for flexberry-groupedit component.
    // Inverse relationship is necessary here.
    files: _emberData.default.hasMany('ember-flexberry-dummy-suggestion-file', {
      inverse: 'suggestion',
      async: false
    }),

    // This property is for flexberry-groupedit component.
    // Inverse relationship is necessary here.
    userVotes: _emberData.default.hasMany('ember-flexberry-dummy-vote', {
      inverse: 'suggestion',
      async: false
    }),

    // This property is for flexberry-groupedit component.
    // Inverse relationship is necessary here.
    comments: _emberData.default.hasMany('ember-flexberry-dummy-comment', {
      inverse: 'suggestion',
      async: false
    }),

    commentsChanged: Ember.on('init', Ember.observer('comments', function () {
      Ember.run.once(this, 'commentsCountCompute');
    })),

    commentsCountCompute: function commentsCountCompute() {
      if (!this.get('isDeleted')) {
        this.set('commentsCount', this.get('comments.length'));
      }
    },

    prototypeProjection: 'SuggestionE'
  });

  // Edit form projection.
  Model.defineProjection('SuggestionE', 'ember-flexberry-dummy-suggestion', {
    address: (0, _attributes.attr)('Address'),
    text: (0, _attributes.attr)('Text'),
    date: (0, _attributes.attr)('Date'),
    votes: (0, _attributes.attr)('Votes'),
    moderated: (0, _attributes.attr)('Moderated'),
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    }),
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    }),
    editor1: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Editor', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    }),
    files: (0, _attributes.hasMany)('ember-flexberry-dummy-suggestion-file', 'Files', {
      order: (0, _attributes.attr)('Order'),
      file: (0, _attributes.attr)('File')
    }),
    userVotes: (0, _attributes.hasMany)('ember-flexberry-dummy-vote', 'User votes', {
      voteType: (0, _attributes.attr)('Vote type'),
      author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Application user', {
        name: (0, _attributes.attr)('Name', {
          hidden: true
        }),
        eMail: (0, _attributes.attr)('Email')
      }, {
        displayMemberPath: 'name'
      })
    }),
    comments: (0, _attributes.hasMany)('ember-flexberry-dummy-comment', 'Comments', {
      text: (0, _attributes.attr)('Text'),
      votes: (0, _attributes.attr)('Votes'),
      moderated: (0, _attributes.attr)('Moderated'),
      author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
        name: (0, _attributes.attr)('Name', {
          hidden: true
        })
      }, {
        displayMemberPath: 'name'
      })
    })
  });

  // Edit form projection.
  Model.defineProjection('SuggestionMainModelProjectionTest', 'ember-flexberry-dummy-suggestion', {
    userVotes: (0, _attributes.hasMany)('ember-flexberry-dummy-vote', 'User votes', {
      voteType: (0, _attributes.attr)('Vote type')
    })
  });

  // List form projection.
  Model.defineProjection('SuggestionL', 'ember-flexberry-dummy-suggestion', {
    address: (0, _attributes.attr)('Address', { index: 0 }),
    text: (0, _attributes.attr)('Text', { index: 1 }),
    date: (0, _attributes.attr)('Date', { index: 2 }),
    votes: (0, _attributes.attr)('Votes', { index: 3 }),
    moderated: (0, _attributes.attr)('Moderated', { index: 4 }),
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', { index: 6, hidden: true })
    }, { index: 5, displayMemberPath: 'name' }),
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', { index: 8, hidden: true }),
      eMail: (0, _attributes.attr)('Email', { index: 9 })
    }, { index: 7, displayMemberPath: 'name' }),
    editor1: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Editor', {
      name: (0, _attributes.attr)('Name', { index: 11, hidden: true })
    }, { index: 10, displayMemberPath: 'name' }),
    commentsCount: (0, _attributes.attr)('Comments Count', { index: 15 }),
    comments: (0, _attributes.hasMany)('ember-flexberry-dummy-comment', 'Comments', {
      text: (0, _attributes.attr)('Text', { index: 0 }),
      votes: (0, _attributes.attr)('Votes', { index: 1 }),
      moderated: (0, _attributes.attr)('Moderated', { index: 2 }),
      author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
        name: (0, _attributes.attr)('Name', { index: 4, hidden: true })
      }, { index: 3, displayMemberPath: 'name' })
    })
  });

  // Projection for lookup example on settings example.
  Model.defineProjection('SettingLookupExampleView', 'ember-flexberry-dummy-suggestion', {
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Projection for lookup example on preview example.
  Model.defineProjection('PreviewExampleView', 'ember-flexberry-dummy-suggestion', {
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    }),
    editor1: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Editor', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    }),
    userVotes: (0, _attributes.hasMany)('ember-flexberry-dummy-vote', 'User votes', {
      author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Application user', {
        name: (0, _attributes.attr)('Name', {
          hidden: true
        })
      }, {
        displayMemberPath: 'name'
      })
    })
  });

  // Projection for lookup example on window customization.
  Model.defineProjection('CustomizeLookupWindowExampleView', 'ember-flexberry-dummy-suggestion', {
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Projection for lookup with limit function example.
  Model.defineProjection('LookupWithLimitFunctionExampleView', 'ember-flexberry-dummy-suggestion', {
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Projection for lookup in dropdown mode example.
  Model.defineProjection('DropDownLookupExampleView', 'ember-flexberry-dummy-suggestion', {
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Projection for FlexberryObjectlistviewComponent with limit function example.
  Model.defineProjection('FolvWithLimitFunctionExampleView', 'ember-flexberry-dummy-suggestion', {
    address: (0, _attributes.attr)('Address'),
    text: (0, _attributes.attr)('Text'),
    votes: (0, _attributes.attr)('Votes'),
    moderated: (0, _attributes.attr)('Moderated'),
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Projection for lookup in block form.
  Model.defineProjection('LookupInBlockFormView', 'ember-flexberry-dummy-suggestion', {
    editor1: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Editor', {
      name: (0, _attributes.attr)('name', { hidden: true }),
      eMail: (0, _attributes.attr)('eMail', { hidden: true }),
      gender: (0, _attributes.attr)('gender', { hidden: true })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Example custom filter.
  Model.defineProjection('FlexberryObjectlistviewCustomFilter', 'ember-flexberry-dummy-suggestion', {
    address: (0, _attributes.attr)('Address'),
    date: (0, _attributes.attr)('Date'),
    votes: (0, _attributes.attr)('Votes'),
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      }),
      moderated: (0, _attributes.attr)('Moderated'),
      parent: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Parent moderated', {
        moderated: (0, _attributes.attr)('Moderated', {
          hidden: true
        }),
        name: (0, _attributes.attr)('Parent type')
      }, {
        displayMemberPath: 'moderated'
      })
    }, {
      displayMemberPath: 'name'
    }),
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      }),
      eMail: (0, _attributes.attr)('Author email')
    }, {
      displayMemberPath: 'name'
    }),
    editor1: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Editor', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Projection for lookup default ordering example.
  Model.defineProjection('DefaultOrderingExampleView', 'ember-flexberry-dummy-suggestion', {
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Example to filter test.
  Model.defineProjection('FlexberryObjectlistviewFilterTest', 'ember-flexberry-dummy-suggestion', {
    address: (0, _attributes.attr)('Address'),
    date: (0, _attributes.attr)('Date'),
    votes: (0, _attributes.attr)('Votes'),
    moderated: (0, _attributes.attr)('Moderated'),
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', 'Type', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    }),
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  // Projection for lookup with computed field test.
  Model.defineProjection('SuggestionEWithComputedField', 'ember-flexberry-dummy-suggestion', {
    address: (0, _attributes.attr)(''),
    text: (0, _attributes.attr)(''),
    date: (0, _attributes.attr)(''),
    votes: (0, _attributes.attr)(''),
    moderated: (0, _attributes.attr)(''),
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', '', {
      name: (0, _attributes.attr)('')
    }),
    type: (0, _attributes.belongsTo)('ember-flexberry-dummy-suggestion-type', '', {
      name: (0, _attributes.attr)(''),
      moderated: (0, _attributes.attr)(''),
      computedField: (0, _attributes.attr)('')
    }),
    editor1: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', '', {
      name: (0, _attributes.attr)('')
    }),
    createTime: (0, _attributes.attr)(''),
    creator: (0, _attributes.attr)(''),
    editTime: (0, _attributes.attr)(''),
    editor: (0, _attributes.attr)('')
  });

  // Edit form projection with Karma.
  Model.defineProjection('SuggestionEWithKarma', 'ember-flexberry-dummy-suggestion', {
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      }),
      karma: (0, _attributes.attr)('')
    }, {
      displayMemberPath: 'name'
    })
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-toggler-example-detail', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    togglerExampleDetailProperty: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Deteil property is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    togglerExampleDetailProperty: _emberData.default.attr('string'),
    togglerExampleMaster: _emberData.default.belongsTo('ember-flexberry-dummy-toggler-example-master', {
      inverse: 'togglerExampleDetail',
      async: false
    })
  });

  Model.defineProjection('TogglerExampleDetailE', 'ember-flexberry-dummy-toggler-example-detail', {
    togglerExampleDetailProperty: (0, _attributes.attr)('Наименование детейла')
  });
  Model.defineProjection('TogglerExampleDetailL', 'ember-flexberry-dummy-toggler-example-detail', {
    togglerExampleDetailProperty: (0, _attributes.attr)('Наименование детейла')
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-toggler-example-master', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    togglerExampleMasterProperty: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Master property is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    togglerExampleMasterProperty: _emberData.default.attr('string'),
    togglerExampleDetail: _emberData.default.hasMany('ember-flexberry-dummy-toggler-example-detail', {
      inverse: 'togglerExampleMaster',
      async: false
    })
  });

  Model.defineProjection('TogglerExampleMasterE', 'ember-flexberry-dummy-toggler-example-master', {
    togglerExampleMasterProperty: (0, _attributes.attr)('Наименование мастера'),
    togglerExampleDetail: (0, _attributes.hasMany)('ember-flexberry-dummy-toggler-example-detail', '', {
      togglerExampleDetailProperty: (0, _attributes.attr)('Наименование детейла')
    })
  });
  Model.defineProjection('TogglerExampleMasterL', 'ember-flexberry-dummy-toggler-example-master', {
    togglerExampleMasterProperty: (0, _attributes.attr)('Наименование мастера')
  });

  exports.default = Model;
});
define('dummy/models/ember-flexberry-dummy-vote', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    author: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Author is required'
    })
  });

  var Model = _model.default.extend(Validations, {
    // Inversed relationship for ember-flexberry-dummy-suggestion.userVotes.
    // It's not a property for flexberry-lookup component.
    suggestion: _emberData.default.belongsTo('ember-flexberry-dummy-suggestion', {
      inverse: 'userVotes',
      async: false
    }),
    voteType: _emberData.default.attr('ember-flexberry-dummy-vote-type'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    author: _emberData.default.belongsTo('ember-flexberry-dummy-application-user', { inverse: null, async: false })
  });

  // Edit form projection.
  Model.defineProjection('VoteE', 'ember-flexberry-dummy-vote', {
    voteType: (0, _attributes.attr)('Vote type'),
    author: (0, _attributes.belongsTo)('ember-flexberry-dummy-application-user', 'Author', {
      name: (0, _attributes.attr)('Name', {
        hidden: true
      })
    }, {
      displayMemberPath: 'name'
    })
  });

  exports.default = Model;
});
define('dummy/models/flexberry-adv-limit', ['exports', 'ember-flexberry/models/flexberry-adv-limit'], function (exports, _flexberryAdvLimit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryAdvLimit.default;
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsAuditEntity) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsAuditEntity.default;
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsAuditField) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsAuditField.default;
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsObjectType) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsObjectType.default;
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent'], function (exports, _iCSSoftSTORMNETSecurityAgent) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETSecurityAgent.default;
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group'], function (exports, _iCSSoftSTORMNETSecurityLinkGroup) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETSecurityLinkGroup.default;
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-session', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-session'], function (exports, _iCSSoftSTORMNETSecuritySession) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETSecuritySession.default;
    }
  });
});
define('dummy/models/i-i-s-caseberry-logging-objects-application-log', ['exports', 'ember-flexberry/models/i-i-s-caseberry-logging-objects-application-log'], function (exports, _iISCaseberryLoggingObjectsApplicationLog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iISCaseberryLoggingObjectsApplicationLog.default;
    }
  });
});
define('dummy/models/integration-examples/edit-form/readonly-mode/aggregator', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    flag: _emberData.default.attr('boolean'),
    number: _emberData.default.attr('number'),
    text: _emberData.default.attr('string'),
    longText: _emberData.default.attr('string'),
    date: _emberData.default.attr('date'),
    time: _emberData.default.attr('date'),
    enumeration: _emberData.default.attr('integration-examples/edit-form/validation/enumeration'),
    file: _emberData.default.attr('file'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    master: _emberData.default.belongsTo('integration-examples/edit-form/validation/master', {
      inverse: null,
      async: false
    }),

    // This property is for flexberry-lookup component (in dropdown-mode). No inverse relationship here.
    masterDropdown: _emberData.default.belongsTo('integration-examples/edit-form/readonly-mode/master-dropdown', {
      inverse: null,
      async: false
    }),

    details: _emberData.default.hasMany('integration-examples/edit-form/readonly-mode/detail', {
      inverse: 'aggregator',
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('AggregatorE', 'integration-examples/edit-form/readonly-mode/aggregator', {
    flag: (0, _attributes.attr)('Flag'),
    number: (0, _attributes.attr)('Number'),
    text: (0, _attributes.attr)('Text'),
    longText: (0, _attributes.attr)('Long text'),
    date: (0, _attributes.attr)('Date'),
    time: (0, _attributes.attr)('Time'),
    enumeration: (0, _attributes.attr)('Enumeration'),
    file: (0, _attributes.attr)('File'),
    master: (0, _attributes.belongsTo)('integration-examples/edit-form/validation/master', 'Master', {
      text: (0, _attributes.attr)('Text', {
        hidden: true
      })
    }, {
      displayMemberPath: 'text'
    }),
    masterDropdown: (0, _attributes.belongsTo)('integration-examples/edit-form/validation/master-dropdown', 'Master dropdown', {
      text: (0, _attributes.attr)('Text', {
        hidden: true
      })
    }, {
      displayMemberPath: 'text'
    }),
    details: (0, _attributes.hasMany)('integration-examples/edit-form/readonly-mode/detail', 'Details', {
      flag: (0, _attributes.attr)('Flag'),
      text: (0, _attributes.attr)('Text'),
      longText: (0, _attributes.attr)('Long text'),
      date: (0, _attributes.attr)('Date'),
      time: (0, _attributes.attr)('Time'),
      enumeration: (0, _attributes.attr)('Enumeration'),
      file: (0, _attributes.attr)('File'),
      master: (0, _attributes.belongsTo)('integration-examples/edit-form/readonly-mode/master', 'Master', {
        text: (0, _attributes.attr)('Name', {
          hidden: true
        })
      }, {
        displayMemberPath: 'name'
      }),
      masterDropdown: (0, _attributes.belongsTo)('integration-examples/edit-form/validation/master-dropdown', 'Master dropdown', {
        text: (0, _attributes.attr)('Text', {
          hidden: true
        })
      }, {
        displayMemberPath: 'text'
      })
    })
  });

  exports.default = Model;
});
define('dummy/models/integration-examples/edit-form/readonly-mode/detail', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    // Inversed relationship for aggregator.details.
    // It's not a property for flexberry-lookup component.
    aggregator: _emberData.default.belongsTo('integration-examples/edit-form/readonly-mode/aggregator', {
      inverse: 'details',
      async: false
    }),

    flag: _emberData.default.attr('boolean'),
    text: _emberData.default.attr('string'),
    longText: _emberData.default.attr('string'),
    date: _emberData.default.attr('date'),
    time: _emberData.default.attr('date'),
    enumeration: _emberData.default.attr('integration-examples/edit-form/readonly-mode/enumeration'),
    file: _emberData.default.attr('file'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    master: _emberData.default.belongsTo('integration-examples/edit-form/readonly-mode/master', {
      inverse: null,
      async: false
    }),
    masterDropdown: _emberData.default.belongsTo('integration-examples/edit-form/readonly-mode/master-dropdown', {
      inverse: null,
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('DetailE', 'integration-examples/edit-form/readonly-mode/detail', {
    flag: (0, _attributes.attr)('Flag'),
    text: (0, _attributes.attr)('Text'),
    longText: (0, _attributes.attr)('longText'),
    date: (0, _attributes.attr)('Date'),
    time: (0, _attributes.attr)('Time'),
    enumeration: (0, _attributes.attr)('Enumeration'),
    file: (0, _attributes.attr)('File'),
    master: (0, _attributes.belongsTo)('integration-examples/edit-form/readonly-mode/master', 'Master', {
      text: (0, _attributes.attr)('Text', {
        hidden: true
      })
    }, {
      displayMemberPath: 'text'
    }),
    masterDropdown: (0, _attributes.belongsTo)('integration-examples/edit-form/validation/master-dropdown', 'Master dropdown', {
      text: (0, _attributes.attr)('Text', {
        hidden: true
      })
    }, {
      displayMemberPath: 'text'
    })
  });

  exports.default = Model;
});
define('dummy/models/integration-examples/edit-form/readonly-mode/master-dropdown', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    text: _emberData.default.attr('string')
  });

  Model.defineProjection('MasterDropdownL', 'integration-examples/edit-form/readonly-mode/master-dropdown', {
    text: (0, _attributes.attr)('Text')
  });

  exports.default = Model;
});
define('dummy/models/integration-examples/edit-form/readonly-mode/master', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    text: _emberData.default.attr('string')
  });

  Model.defineProjection('MasterL', 'integration-examples/edit-form/readonly-mode/master', {
    text: (0, _attributes.attr)('Text')
  });

  exports.default = Model;
});
define('dummy/models/integration-examples/edit-form/validation/base', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    flag: {
      lazy: false,
      validators: [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        message: 'Flag is required'
      }), (0, _emberCpValidations.validator)('inclusion', {
        in: [true],
        message: 'Flag must be \'true\' only'
      })]
    },
    number: {
      lazy: false,
      validators: [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        message: 'Number is required'
      }), (0, _emberCpValidations.validator)('number', {
        allowString: true,
        odd: true,
        integer: true,
        message: function message(type) {
          var message = 'Number is invalid';
          if (type === 'odd') {
            message = 'Number must be an odd';
          }

          return message;
        }
      })]
    },
    text: {
      lazy: false,
      validators: [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        message: 'Text is required'
      }), (0, _emberCpValidations.validator)('length', {
        allowNone: false,
        min: 5,
        message: 'Text length must be >= 5'
      })]
    },
    longText: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Long text is required'
    }),
    date: [(0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Date is required'
    }), (0, _emberCpValidations.validator)('date', {
      allowBlank: false,
      message: 'Date is invalid'
    })],
    enumeration: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Enumeration is required'
    }),
    file: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'File is required'
    }),
    master: (0, _emberCpValidations.validator)('presence', {
      presence: true,
      message: 'Master is required'
    }),
    details: (0, _emberCpValidations.validator)('has-many')
  });

  var Model = _model.default.extend(Validations, {
    flag: _emberData.default.attr('boolean'),
    number: _emberData.default.attr('number'),
    text: _emberData.default.attr('string'),
    longText: _emberData.default.attr('string'),
    date: _emberData.default.attr('date'),
    enumeration: _emberData.default.attr('integration-examples/edit-form/validation/enumeration'),
    file: _emberData.default.attr('file'),

    // This property is for flexberry-lookup component. No inverse relationship here.
    master: _emberData.default.belongsTo('integration-examples/edit-form/validation/master', {
      inverse: null,
      async: false
    }),

    // This property is for flexberry-groupedit component.
    details: _emberData.default.hasMany('integration-examples/edit-form/validation/detail', {
      inverse: 'aggregator',
      async: false
    })
  });

  // Edit form projection.
  Model.defineProjection('BaseE', 'integration-examples/edit-form/validation/base', {
    flag: (0, _attributes.attr)('Flag'),
    number: (0, _attributes.attr)('Number'),
    text: (0, _attributes.attr)('Text'),
    longText: (0, _attributes.attr)('Long text'),
    date: (0, _attributes.attr)('Date'),
    enumeration: (0, _attributes.attr)('Enumeration'),
    file: (0, _attributes.attr)('File'),
    master: (0, _attributes.belongsTo)('integration-examples/edit-form/validation/master', 'Master', {
      text: (0, _attributes.attr)('Text', {
        hidden: true
      })
    }, {
      displayMemberPath: 'text'
    }),
    details: (0, _attributes.hasMany)('integration-examples/edit-form/validation/detail', 'details', {
      flag: (0, _attributes.attr)('Flag'),
      number: (0, _attributes.attr)('Number'),
      text: (0, _attributes.attr)('Text')
    })
  });

  exports.default = Model;
});
define('dummy/models/integration-examples/edit-form/validation/detail', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes', 'ember-cp-validations'], function (exports, _emberData, _model, _attributes, _emberCpValidations) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Validations = (0, _emberCpValidations.buildValidations)({
    flag: {
      lazy: false,
      validators: [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        message: 'Detail. Flag is required'
      }), (0, _emberCpValidations.validator)('inclusion', {
        in: [true],
        message: 'Detail. Flag must be \'true\' only'
      })]
    },
    number: {
      lazy: false,
      validators: [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        message: 'Detail. Number is required'
      }), (0, _emberCpValidations.validator)('number', {
        allowString: true,
        odd: true,
        integer: true,
        message: 'Detail. Number is invalid'
      })]
    },
    text: {
      lazy: false,
      validators: [(0, _emberCpValidations.validator)('presence', {
        presence: true,
        message: 'Detail. Text is required'
      }), (0, _emberCpValidations.validator)('length', {
        allowNone: false,
        min: 5,
        message: 'Detail. Text length must be >= 5'
      })]
    }
  });

  var Model = _model.default.extend(Validations, {
    // Inversed relationship for integration-examples/edit-form/validation/base.details.
    // It's not a property for flexberry-lookup component.
    aggregator: _emberData.default.belongsTo('integration-examples/edit-form/validation/base', {
      inverse: 'details',
      async: false
    }),

    flag: _emberData.default.attr('boolean'),
    number: _emberData.default.attr('number'),
    text: _emberData.default.attr('string')
  });

  // Edit form projection.
  Model.defineProjection('DetailE', 'integration-examples/edit-form/validation/detail', {
    flag: (0, _attributes.attr)('Flag'),
    number: (0, _attributes.attr)('Number'),
    text: (0, _attributes.attr)('Text')
  });

  exports.default = Model;
});
define('dummy/models/integration-examples/edit-form/validation/master', ['exports', 'ember-data', 'ember-flexberry-data/models/model', 'ember-flexberry-data/utils/attributes'], function (exports, _emberData, _model, _attributes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Model = _model.default.extend({
    text: _emberData.default.attr('string')
  });

  // Edit form projection.
  Model.defineProjection('MasterL', 'integration-examples/edit-form/validation/master', {
    text: (0, _attributes.attr)('Text')
  });

  exports.default = Model;
});
define('dummy/models/model', ['exports', 'ember-flexberry-data/models/model'], function (exports, _model) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _model.default;
    }
  });
});
define('dummy/models/new-platform-flexberry-flexberry-user-setting', ['exports', 'ember-flexberry/models/new-platform-flexberry-flexberry-user-setting'], function (exports, _newPlatformFlexberryFlexberryUserSetting) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _newPlatformFlexberryFlexberryUserSetting.default;
    }
  });
});
define('dummy/models/new-platform-flexberry-services-lock', ['exports', 'ember-flexberry/models/new-platform-flexberry-services-lock'], function (exports, _newPlatformFlexberryServicesLock) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _newPlatformFlexberryServicesLock.default;
    }
  });
});
define('dummy/models/offline-model', ['exports', 'ember-flexberry-data/models/offline-model'], function (exports, _offlineModel) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _offlineModel.default;
    }
  });
});
define('dummy/resolver', ['exports', 'ember-flexberry/resolver'], function (exports, _resolver) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _resolver.default;
});
define('dummy/router', ['exports', 'dummy/config/environment'], function (exports, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var Router = Ember.Router.extend({
    location: _environment.default.locationType,
    rootURL: _environment.default.rootURL
  });

  Router.map(function () {
    // Edit forms & list forms.
    this.route('ember-flexberry-dummy-application-user-list');
    this.route('ember-flexberry-dummy-application-user-edit', { path: 'ember-flexberry-dummy-application-user-edit/:id' });
    this.route('ember-flexberry-dummy-application-user-edit.new', { path: 'ember-flexberry-dummy-application-user-edit/new' });

    this.route('ember-flexberry-dummy-multi-list');
    this.route('ember-flexberry-dummy-multi-list-user-edit', { path: 'ember-flexberry-dummy-multi-list-user-edit/:id' });
    this.route('ember-flexberry-dummy-multi-list-user-edit.new', { path: 'ember-flexberry-dummy-multi-list-user-edit/new' });
    this.route('components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit', { path: 'components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit/:id' });
    this.route('components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit.new', { path: 'components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit/new' });

    this.route('ember-flexberry-dummy-comment-edit', { path: 'ember-flexberry-dummy-comment-edit/:id' });
    this.route('ember-flexberry-dummy-comment-edit.new', { path: 'ember-flexberry-dummy-comment-edit/new' });

    this.route('ember-flexberry-dummy-comment-vote-edit', { path: 'ember-flexberry-dummy-comment-vote-edit/:id' });
    this.route('ember-flexberry-dummy-comment-vote-edit.new', { path: 'ember-flexberry-dummy-comment-vote-edit/new' });

    this.route('ember-flexberry-dummy-localization-list');
    this.route('ember-flexberry-dummy-localization-edit', { path: 'ember-flexberry-dummy-localization-edit/:id' });
    this.route('ember-flexberry-dummy-localization-edit.new', { path: 'ember-flexberry-dummy-localization-edit/new' });

    this.route('ember-flexberry-dummy-suggestion-list');
    this.route('ember-flexberry-dummy-suggestion-edit', { path: 'ember-flexberry-dummy-suggestion-edit/:id' });
    this.route('ember-flexberry-dummy-suggestion-edit.new', { path: 'ember-flexberry-dummy-suggestion-edit/new' });

    this.route('ember-flexberry-dummy-suggestion-file-list');
    this.route('ember-flexberry-dummy-suggestion-file-edit', { path: 'ember-flexberry-dummy-suggestion-file-edit/:id' });
    this.route('ember-flexberry-dummy-suggestion-file-edit.new', { path: 'ember-flexberry-dummy-suggestion-file-edit/new' });

    this.route('ember-flexberry-dummy-suggestion-type-list');
    this.route('ember-flexberry-dummy-suggestion-type-edit', { path: 'ember-flexberry-dummy-suggestion-type-edit/:id' });
    this.route('ember-flexberry-dummy-suggestion-type-edit.new', { path: 'ember-flexberry-dummy-suggestion-type-edit/new' });

    this.route('ember-flexberry-dummy-toggler-example-master-e', { path: 'ember-flexberry-dummy-toggler-example-master-e/:id' });
    this.route('ember-flexberry-dummy-toggler-example-master-e.new', { path: 'ember-flexberry-dummy-toggler-example-master-e/new' });

    // Logging.
    this.route('i-i-s-caseberry-logging-objects-application-log-l');
    this.route('i-i-s-caseberry-logging-objects-application-log-e', { path: 'i-i-s-caseberry-logging-objects-application-log-e/:id' });
    this.route('i-i-s-caseberry-logging-objects-application-log-e.new', { path: 'i-i-s-caseberry-logging-objects-application-log-e/new' });
    this.route('log-service-examples/settings-example');
    this.route('log-service-examples/clear-log-form');

    // Locks.
    this.route('new-platform-flexberry-services-lock-list');

    // Components examples routes (sorted by component's names).
    this.route('components-examples/flexberry-button/settings-example');
    this.route('components-examples/flexberry-checkbox/settings-example');
    this.route('components-examples/flexberry-ddau-checkbox/settings-example');
    this.route('components-examples/flexberry-dropdown/settings-example');
    this.route('components-examples/flexberry-dropdown/conditional-render-example');
    this.route('components-examples/flexberry-dropdown/empty-value-example');
    this.route('components-examples/flexberry-dropdown/items-example');
    this.route('components-examples/flexberry-field/settings-example');
    this.route('components-examples/flexberry-file/settings-example');
    this.route('components-examples/flexberry-file/flexberry-file-in-modal');
    this.route('components-examples/flexberry-groupedit/settings-example');
    this.route('components-examples/flexberry-groupedit/model-update-example');
    this.route('components-examples/flexberry-groupedit/custom-buttons-example');
    this.route('components-examples/flexberry-groupedit/configurate-row-example');
    this.route('components-examples/flexberry-lookup/settings-example');
    this.route('components-examples/flexberry-lookup/customizing-window-example');
    this.route('components-examples/flexberry-lookup/hierarchy-olv-in-lookup-example');
    this.route('components-examples/flexberry-lookup/limit-function-example');
    this.route('components-examples/flexberry-lookup/autofill-by-limit-example');
    this.route('components-examples/flexberry-lookup/limit-function-through-dynamic-properties-example');
    this.route('components-examples/flexberry-lookup/lookup-block-form-example');
    this.route('components-examples/flexberry-lookup/lookup-in-modal');
    this.route('components-examples/flexberry-lookup/dropdown-mode-example');
    this.route('components-examples/flexberry-lookup/default-ordering-example');
    this.route('components-examples/flexberry-lookup/autocomplete-order-example');
    this.route('components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-list');
    this.route('components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-edit', { path: 'components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-edit/:id' });
    this.route('components-examples/flexberry-lookup/numeric-autocomplete');
    this.route('components-examples/flexberry-menu/settings-example');
    this.route('components-examples/flexberry-objectlistview/settings-example');
    this.route('components-examples/flexberry-objectlistview/toolbar-custom-buttons-example');
    this.route('components-examples/flexberry-objectlistview/inheritance-models');
    this.route('components-examples/flexberry-objectlistview/inheritance-models/parent-list');
    this.route('components-examples/flexberry-objectlistview/inheritance-models/parent-edit', { path: 'components-examples/flexberry-objectlistview/inheritance-models/parent-edit/:id' });
    this.route('components-examples/flexberry-objectlistview/inheritance-models/parent-edit.new', { path: 'components-examples/flexberry-objectlistview/inheritance-models/parent-edit/new' });
    this.route('components-examples/flexberry-objectlistview/inheritance-models/successor-phone-list');
    this.route('components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit', { path: 'components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit/:id' });
    this.route('components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit.new', { path: 'components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit/new' });
    this.route('components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-list');
    this.route('components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit', { path: 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit/:id' });
    this.route('components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit.new', { path: 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit/new' });
    this.route('components-examples/flexberry-objectlistview/limit-function-example');
    this.route('components-examples/flexberry-objectlistview/on-edit-form');
    this.route('components-examples/flexberry-objectlistview/on-edit-form/user', { path: 'components-examples/flexberry-objectlistview/on-edit-form/user/:id' });
    this.route('components-examples/flexberry-objectlistview/list-on-editform');
    this.route('components-examples/flexberry-objectlistview/on-edit-form/suggestion', { path: 'components-examples/flexberry-objectlistview/on-edit-form/suggestion/:id'
    });
    this.route('components-examples/flexberry-objectlistview/custom-filter');
    this.route('components-examples/flexberry-objectlistview/edit-form-with-detail-list');
    this.route('components-examples/flexberry-objectlistview/edit-form-with-detail-edit', { path: 'components-examples/flexberry-objectlistview/edit-form-with-detail-edit/:id' });
    this.route('components-examples/flexberry-objectlistview/edit-form-with-detail-edit.new', { path: 'components-examples/flexberry-objectlistview/edit-form-with-detail-edit/new' });
    this.route('components-examples/flexberry-objectlistview/configurate-rows');
    this.route('components-examples/flexberry-objectlistview/object-list-view-resize');
    this.route('components-examples/flexberry-objectlistview/hierarchy-example');
    this.route('components-examples/flexberry-objectlistview/hierarchy-paging-example');
    this.route('components-examples/flexberry-objectlistview/selected-rows');
    this.route('components-examples/flexberry-objectlistview/downloading-files-from-olv-list');
    this.route('components-examples/flexberry-objectlistview/downloading-files-from-olv-edit', { path: 'components-examples/flexberry-objectlistview/downloading-files-from-olv-edit/:id' });
    this.route('components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-list');
    this.route('components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-edit', { path: 'components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-edit/:id' });
    this.route('components-examples/flexberry-objectlistview/lock-services-editor-view-list');
    this.route('components-examples/flexberry-objectlistview/lock-services-editor-view-edit', { path: 'components-examples/flexberry-objectlistview/lock-services-editor-view-edit/:id' });
    this.route('components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record');
    this.route('components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise');
    this.route('components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-cancel');
    this.route('components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-cancel');
    this.route('components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-immediately');
    this.route('components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-immediately');
    this.route('components-examples/flexberry-objectlistview/limited-text-size-example');

    this.route('components-examples/flexberry-simpledatetime/settings-example');
    this.route('components-examples/flexberry-text-cell/settings-example');
    this.route('components-examples/flexberry-textarea/settings-example');
    this.route('components-examples/flexberry-textbox/settings-example');
    this.route('components-examples/flexberry-toggler/settings-example');
    this.route('components-examples/flexberry-toggler/settings-example-inner');
    this.route('components-examples/flexberry-toggler/ge-into-toggler-example');
    this.route('components-examples/flexberry-tree/settings-example');
    this.route('components-examples/modal-dialog', function () {
      this.route('index', { path: '/' });
    });
    this.route('components-examples/ui-message/settings-example');

    // Integration examples routes.
    this.route('integration-examples/edit-form/readonly-mode');
    this.route('integration-examples/edit-form/validation');

    // User-setting forms.
    this.route('user-setting-forms/user-setting-delete');

    // Components acceptance tests forms.
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-autofill-by-limit');
    this.route('components-acceptance-tests/flexberry-lookup/base-operations');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-autocomplete');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-dropdown');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-projection');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-actions');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-relation-name');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-limit-function');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-preview');
    this.route('components-acceptance-tests/flexberry-lookup/settings-example-preview-page', { path: 'components-acceptance-tests/flexberry-lookup/settings-example-preview-page/:id' });

    this.route('components-acceptance-tests/flexberry-objectlistview/base-operations');
    this.route('components-acceptance-tests/flexberry-objectlistview/computable-field');
    this.route('components-acceptance-tests/flexberry-objectlistview/folv-paging');
    this.route('components-acceptance-tests/flexberry-objectlistview/date-format');
    this.route('components-acceptance-tests/edit-form-readonly');
    this.route('components-acceptance-tests/edit-form-validation/validation');
    this.route('components-acceptance-tests/flexberry-objectlistview/folv-filter');
    this.route('components-acceptance-tests/flexberry-objectlistview/custom-filter');
    this.route('components-acceptance-tests/flexberry-groupedit/properly-rerenders');

    this.route('components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-groupedit-with-lookup-with-computed-atribute');
    this.route('components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-groupedit-with-lookup-with-computed-atribute', { path: 'components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-groupedit-with-lookup-with-computed-atribute/:id' });
    this.route('components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-readonly-columns-by-configurate-row-example');
    this.route('components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-readonly-columns-by-configurate-row-example', { path: 'components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-readonly-columns-by-configurate-row-example/:id' });

    this.route('components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-list-with-checked-checkbox');
    this.route('components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox', { path: 'components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox/:id' });
    this.route('components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox.new', { path: 'components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox/new' });

    this.route('login');
  });

  exports.default = Router;
});
define('dummy/routes/application', ['exports', 'ember-flexberry/mixins/modal-application-route'], function (exports, _modalApplicationRoute) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend(_modalApplicationRoute.default, {
    actions: {
      /**
        Handles onRefresh action.
         @method actions.onRefresh
      */
      onRefresh: function onRefresh() {
        this.refresh();
      },
      showModalSupport: function showModalSupport() {
        this.send('showModalDialog', 'modal/ember-flexberry-support-modal');
      }
    }
  });
});
define('dummy/routes/components-acceptance-tests/edit-form-readonly', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'AggregatorE'
     */
    modelProjection: 'AggregatorE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'integration-examples/edit-form/readonly-mode/aggregator'
     */
    modelName: 'integration-examples/edit-form/readonly-mode/aggregator',

    developerUserSettings: Ember.computed(function () {
      return {
        aggregatorDetailsGroupedit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'masterDropdown', 'width': 220 }]
          }
        }
      };
    }),

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var aggregator = store.createRecord('integration-examples/edit-form/readonly-mode/aggregator', {});
      var detail = store.createRecord('integration-examples/edit-form/readonly-mode/detail', {});
      aggregator.get('details').pushObject(detail);

      return aggregator;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/edit-form-validation/validation', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'BaseE'
     */
    modelProjection: 'BaseE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'integration-examples/edit-form/validation/base'
     */
    modelName: 'integration-examples/edit-form/validation/base',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      // Create base model.
      var base = store.createRecord('integration-examples/edit-form/validation/base', {});

      // Create detail & add to base model.
      var detail1 = store.createRecord('integration-examples/edit-form/validation/detail', {});
      base.get('details').pushObject(detail1);

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {

    /**
    A hook you can implement to convert the URL into the model for this route.
    [More info](https://www.emberjs.com/api/ember/release/classes/Route/methods/model?anchor=model).
    @method model
    @param {Object} params
    @param {Object} transition
    */
    model: function model() {
      var record = this.store.createRecord(this.modelName);
      record.set('moderated', true);
      return record;
    },


    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionUserVotesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'voteType', 'width': 133 }, { 'propName': 'author', 'width': 348 }, { 'propName': 'author.eMail', 'width': 531 }],
            'sorting': [{ 'propName': 'author', 'direction': 'asc', 'attributePath': 'author.name' }]
          }
        },
        filesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'order', 'width': 140 }, { 'propName': 'file', 'width': 893 }],
            'colsOrder': [{ 'propName': 'file' }, { 'propName': 'order' }],
            'sorting': [{ 'propName': 'order', 'direction': 'desc' }]
          }
        },
        suggestionCommentsGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'votes', 'fixed': true }],
            'sorting': [{ 'propName': 'votes', 'direction': 'asc' }, { 'propName': 'moderated', 'direction': 'desc' }, { 'propName': 'text', 'direction': 'asc' }]
          }
        }
      };
    }),

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-list-with-checked-checkbox', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        SuggestionObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-acceptance-tests/flexberry-groupedit/properly-rerenders', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'AggregatorE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */

    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-groupedit/shared/aggregator');
      return base;
    }
  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/base-operations', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */

    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-actions', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */

    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-autocomplete', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-autofill-by-limit', ['exports', 'ember-flexberry-data/query/builder'], function (exports, _builder) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LookupWithLimitFunctionExampleView'
     */
    modelProjection: 'LookupWithLimitFunctionExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Current predicate to limit values for lookup.
       @property limitValue
      @type BasePredicate
      @default undefined
     */
    limitValue: undefined,

    /**
      Current values for lookup.
       @property limitValue
      @type BasePredicate
      @default undefined
     */
    defaultValue: undefined,

    /**
      Returns model related to current route.
       @method model
     */
    model: function model() {
      var _this = this;

      var store = this.get('store');

      var query = new _builder.default(store).from('ember-flexberry-dummy-suggestion-type').selectByProjection('SuggestionTypeE').top(2);

      return store.query('ember-flexberry-dummy-suggestion-type', query.build()).then(function (suggestionTypes) {
        var suggestionTypesArr = suggestionTypes.toArray();
        _this.set('limitValue', suggestionTypesArr.objectAt(0));
        _this.set('defaultValue', suggestionTypesArr.objectAt(1));

        var base = store.createRecord('ember-flexberry-dummy-suggestion');
        var readonly = store.createRecord('ember-flexberry-dummy-suggestion');
        var exist = store.createRecord('ember-flexberry-dummy-suggestion', {
          type: suggestionTypesArr.objectAt(1)
        });

        return {
          base: base,
          readonly: readonly,
          exist: exist
        };
      });
    },


    /**
      Load limit accessible values for lookup.
       @method setupController
     */
    setupController: function setupController() {
      this._super.apply(this, arguments);

      this.set('controller.limitValue', this.get('limitValue'));
      this.set('controller.defaultValue', this.get('defaultValue'));
    }
  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-dropdown', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-limit-function', ['exports', 'ember-flexberry-data/query/builder', 'ember-flexberry/routes/edit-form'], function (exports, _builder, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({

    /**
      Current predicate to limit accessible values for lookup.
       @property limitType
      @type BasePredicate
      @default undefined
     */
    limitType: undefined,
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var _this = this;

      var store = this.get('store');

      var query = new _builder.default(store).from('ember-flexberry-dummy-suggestion-type').selectByProjection('SettingLookupExampleView');

      return store.query('ember-flexberry-dummy-suggestion-type', query.build()).then(function (suggestionTypes) {
        var suggestionTypesArr = suggestionTypes.toArray();
        _this.set('limitType', suggestionTypesArr.objectAt(0).get('name'));

        var base = store.createRecord(_this.get('modelName'));
        return base;
      });
    },

    /* eslint-enable no-unused-vars */

    /**
      Load limit accessible values for lookup.
       @method setupController
     */
    setupController: function setupController() {
      this._super.apply(this, arguments);

      this.set('controller.limitType', this.get('limitType'));
    }
  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-preview-page', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'PreviewExampleView'
     */
    modelProjection: 'PreviewExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
     */
    modelName: 'ember-flexberry-dummy-application-user'
  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-preview', ['exports', 'ember-flexberry-data/query/builder', 'ember-flexberry/routes/edit-form'], function (exports, _builder, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({

    /**
      Current values name for lookup.
       @property testName
      @type BasePredicate
      @default undefined
     */
    testName: undefined,

    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'PreviewExampleView'
     */
    modelProjection: 'PreviewExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    model: function model() {
      var _this = this;

      var store = this.get('store');

      var query = new _builder.default(store).from('ember-flexberry-dummy-application-user').selectByProjection('PreviewExampleView');

      return store.query('ember-flexberry-dummy-application-user', query.build()).then(function (suggestionTypes) {
        var suggestionTypesArr = suggestionTypes.toArray();
        var testValue = suggestionTypesArr.objectAt(0);
        _this.set('testName', testValue.get('name'));

        var base = store.createRecord('ember-flexberry-dummy-suggestion', {
          author: testValue,
          editor1: testValue
        });

        var detail = store.createRecord('ember-flexberry-dummy-vote', {
          author: testValue
        });

        base.get('userVotes').pushObject(detail);

        return base;
      });
    },


    /**
      Load limit accessible values for lookup.
       @method setupController
    */
    setupController: function setupController() {
      this._super.apply(this, arguments);

      this.set('controller.testName', this.get('testName'));
    },


    /**
    developerUserSettings.
     @property developerUserSettings
    @type Object
    @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionUserVotesGroupEdit: {}
      };
    })
  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-projection', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example-relation-name', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */

    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-lookup/settings-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-acceptance-tests/flexberry-objectlistview/base-operations', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionL'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVSettingExampleObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 120 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      This method will be invoked always when load operation completed,
      regardless of load promise's state (was it fulfilled or rejected).
       @method onModelLoadingAlways.
      @param {Object} data Data about completed load operation.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingAlways: function onModelLoadingAlways(data) {
      var loadCount = this.get('controller.loadCount') + 1;
      this.set('controller.loadCount', loadCount);
    }
  }
  /* eslint-enable no-unused-vars */
  );
});
define('dummy/routes/components-acceptance-tests/flexberry-objectlistview/computable-field', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVSettingExampleObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 120 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      This method will be invoked always when load operation completed,
      regardless of load promise's state (was it fulfilled or rejected).
       @method onModelLoadingAlways.
      @param {Object} data Data about completed load operation.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingAlways: function onModelLoadingAlways(data) {
      var loadCount = this.get('controller.loadCount') + 1;
      this.set('controller.loadCount', loadCount);
    }
  }
  /* eslint-enable no-unused-vars */
  );
});
define('dummy/routes/components-acceptance-tests/flexberry-objectlistview/custom-filter', ['exports', 'ember-flexberry/routes/list-form', 'ember-flexberry-data/query/predicate'], function (exports, _listForm, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryObjectlistviewCustomFilter'
    */
    modelProjection: 'FlexberryObjectlistviewCustomFilter',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVCustomFilterObjectListView: {}
      };
    }),

    predicateForFilter: function predicateForFilter(filter) {
      if (filter.type === 'string' && filter.condition === 'like') {
        return new _predicate.StringPredicate(filter.name).contains(filter.pattern);
      }

      if (filter.type === 'string' && filter.condition === 'empty') {
        return new _predicate.SimplePredicate(filter.name, 'eq', null);
      }

      if (filter.type === 'decimal') {
        return new _predicate.SimplePredicate(filter.name, filter.condition, filter.pattern ? Number(filter.pattern) : filter.pattern);
      }

      if (filter.type === 'date') {
        return new _predicate.DatePredicate(filter.name, filter.condition, filter.pattern, true);
      }

      return this._super.apply(this, arguments);
    },
    predicateForAttribute: function predicateForAttribute(attribute, filter) {
      switch (attribute.type) {
        case 'boolean':
          {
            var yes = ['TRUE', 'True', 'true', 'YES', 'Yes', 'yes', 'ДА', 'Да', 'да', '1', '+'];
            var no = ['False', 'False', 'false', 'NO', 'No', 'no', 'НЕТ', 'Нет', 'нет', '0', '-'];

            if (yes.indexOf(filter) > 0) {
              return new _predicate.SimplePredicate(attribute.name, 'eq', 'true');
            }

            if (no.indexOf(filter) > 0) {
              return new _predicate.SimplePredicate(attribute.name, 'eq', 'false');
            }

            return null;
          }

        default:
          {
            return this._super.apply(this, arguments);
          }
      }
    },


    /**
      This method will be invoked always when load operation completed,
      regardless of load promise's state (was it fulfilled or rejected).
       @method onModelLoadingAlways.
      @param {Object} data Data about completed load operation.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingAlways: function onModelLoadingAlways(data) {
      var loadCount = this.get('controller.loadCount') + 1;
      this.set('controller.loadCount', loadCount);
    }
  }
  /* eslint-enable no-unused-vars */
  );
});
define('dummy/routes/components-acceptance-tests/flexberry-objectlistview/date-format', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionL'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVSettingExampleObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      This method will be invoked always when load operation completed,
      regardless of load promise's state (was it fulfilled or rejected).
       @method onModelLoadingAlways.
      @param {Object} data Data about completed load operation.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingAlways: function onModelLoadingAlways(data) {
      var loadCount = this.get('controller.loadCount') + 1;
      this.set('controller.loadCount', loadCount);
    }
  }
  /* eslint-enable no-unused-vars */
  );
});
define('dummy/routes/components-acceptance-tests/flexberry-objectlistview/folv-filter', ['exports', 'ember-flexberry/routes/list-form', 'ember-flexberry-data/query/predicate', 'ember-flexberry-data/query/filter-operator'], function (exports, _listForm, _predicate, _filterOperator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionL'
     */
    modelProjection: 'FlexberryObjectlistviewFilterTest',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVSettingExampleObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      It overrides base method and forms the limit predicate for loaded data.
       @public
      @method objectListViewLimitPredicate
      @param {Object} options Method options..
     */
    /* eslint-disable no-unused-vars */
    objectListViewLimitPredicate: function objectListViewLimitPredicate(options) {
      var limitFunction = new _predicate.SimplePredicate('address', _filterOperator.default.Neq, undefined);
      return limitFunction;
    },
    /* eslint-enable no-unused-vars */

    /**
      This method will be invoked always when load operation completed,
      regardless of load promise's state (was it fulfilled or rejected).
       @method onModelLoadingAlways.
      @param {Object} data Data about completed load operation.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingAlways: function onModelLoadingAlways(data) {
      var loadCount = this.get('controller.loadCount') + 1;
      this.set('controller.loadCount', loadCount);
    }
  }
  /* eslint-enable no-unused-vars */
  );
});
define('dummy/routes/components-acceptance-tests/flexberry-objectlistview/folv-paging', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionL'
     */
    modelProjection: 'SuggestionTypeL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVPagingObjectListView: {
          'DEFAULT': {
            'sorting': [{
              'propName': 'name',
              'direction': 'asc',
              'sortPriority': 1
            }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
      This method will be invoked always when load operation completed,
      regardless of load promise's state (was it fulfilled or rejected).
       @method onModelLoadingAlways.
      @param {Object} data Data about completed load operation.
     */
    /* eslint-disable no-unused-vars */
    onModelLoadingAlways: function onModelLoadingAlways(data) {
      var loadCount = this.get('controller.loadCount') + 1;
      this.set('controller.loadCount', loadCount);
    }
  }
  /* eslint-enable no-unused-vars */
  );
});
define('dummy/routes/components-examples/flexberry-button/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({});
});
define('dummy/routes/components-examples/flexberry-checkbox/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-checkbox/settings-example/base', {});

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-ddau-checkbox/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
    */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      return this.get('store').createRecord('components-examples/flexberry-ddau-checkbox/settings-example/base', {});
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-dropdown/conditional-render-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-dropdown/conditional-render-example/base', {
        enumeration: null
      });

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-dropdown/empty-value-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-dropdown/empty-value-example/base', {});

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-dropdown/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-dropdown/settings-example/base', {});

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-field/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-field/settings-example/base', {});

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-file/flexberry-file-in-modal', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LookupInBlockFormView'
     */
    modelProjection: 'LookupInBlockFormView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    model: function model() {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
  });
});
define('dummy/routes/components-examples/flexberry-file/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      return this.get('store').createRecord('components-examples/flexberry-file/settings-example/base', {});
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-groupedit/configurate-row-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ConfigurateRowView'
    */
    modelProjection: 'ConfigurateRowView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'components-examples/flexberry-groupedit/shared/aggregator'
    */
    modelName: 'components-examples/flexberry-groupedit/shared/aggregator',

    /**
      Returns model related to current route.
       @method model
    */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var arrRec = [];
      for (var i = 1; i < 20; i++) {
        var newRecord = store.createRecord('components-examples/flexberry-groupedit/shared/detail', {
          text: i + 'test',
          flag: i % 2
        });
        arrRec.push(newRecord);
      }

      // Aggregator with details.
      var aggregator = store.createRecord('components-examples/flexberry-groupedit/shared/aggregator', { details: arrRec });
      return aggregator;
    }
  }
  /* eslint-enable no-unused-vars */
  );
});
define('dummy/routes/components-examples/flexberry-groupedit/custom-buttons-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ConfigurateRowView'
    */
    modelProjection: 'ConfigurateRowView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'components-examples/flexberry-groupedit/shared/aggregator'
    */
    modelName: 'components-examples/flexberry-groupedit/shared/aggregator',

    /**
      Returns model related to current route.
       @method model
    */
    model: function model() {
      var store = this.get('store');

      var arrRec = [];
      for (var i = 1; i < 5; i++) {
        var newRecord = store.createRecord('components-examples/flexberry-groupedit/shared/detail', {
          text: i + 'test',
          flag: i % 2
        });
        arrRec.push(newRecord);
      }

      // Aggregator with details.
      var aggregator = store.createRecord('components-examples/flexberry-groupedit/shared/aggregator', { details: arrRec });
      return aggregator;
    }
  });
});
define('dummy/routes/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-groupedit-with-lookup-with-computed-atribute', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionUserVotesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'voteType', 'width': 133 }, { 'propName': 'author', 'width': 348 }, { 'propName': 'author.eMail', 'width': 531 }],
            'sorting': [{ 'propName': 'author', 'direction': 'asc', 'attributePath': 'author.name' }]
          }
        },
        filesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'order', 'width': 140 }, { 'propName': 'file', 'width': 893 }],
            'colsOrder': [{ 'propName': 'file' }, { 'propName': 'order' }],
            'sorting': [{ 'propName': 'order', 'direction': 'desc' }]
          }
        },
        suggestionCommentsGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'votes', 'fixed': true }],
            'sorting': [{ 'propName': 'votes', 'direction': 'asc' }, { 'propName': 'moderated', 'direction': 'desc' }, { 'propName': 'text', 'direction': 'asc' }]
          }
        }
      };
    }),

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'

  });
});
define('dummy/routes/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-readonly-columns-by-configurate-row-example', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionUserVotesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'voteType', 'width': 133 }, { 'propName': 'author', 'width': 348 }, { 'propName': 'author.eMail', 'width': 531 }],
            'sorting': [{ 'propName': 'author', 'direction': 'asc', 'attributePath': 'author.name' }]
          }
        },
        filesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'order', 'width': 140 }, { 'propName': 'file', 'width': 893 }],
            'colsOrder': [{ 'propName': 'file' }, { 'propName': 'order' }],
            'sorting': [{ 'propName': 'order', 'direction': 'desc' }]
          }
        },
        suggestionCommentsGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'votes', 'fixed': true }],
            'sorting': [{ 'propName': 'votes', 'direction': 'asc' }, { 'propName': 'moderated', 'direction': 'desc' }, { 'propName': 'text', 'direction': 'asc' }]
          }
        }
      };
    }),

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'

  });
});
define('dummy/routes/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-groupedit-with-lookup-with-computed-atribute', ['exports', 'ember-flexberry/routes/list-form', 'dummy/mixins/list-form-route-operations-indication'], function (exports, _listForm, _listFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormRouteOperationsIndication.default, {
    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        SuggestionObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 90 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-readonly-columns-by-configurate-row-example', ['exports', 'ember-flexberry/routes/list-form', 'dummy/mixins/list-form-route-operations-indication'], function (exports, _listForm, _listFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormRouteOperationsIndication.default, {
    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        SuggestionObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 90 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-groupedit/model-update-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ManualModelUpdateView'
     */
    modelProjection: 'ManualModelUpdateView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'components-examples/flexberry-groupedit/shared/aggregator'
     */
    modelName: 'components-examples/flexberry-groupedit/shared/aggregator',

    developerUserSettings: Ember.computed(function () {
      return { aggregatorDetailsGroupedit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'width': 100 }],
            'sorting': [{ 'propName': 'flag', 'direction': 'desc', 'sortPriority': 1 }]
          }
        }

      };
    }),
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      // Empty aggregator without details.
      return store.createRecord('components-examples/flexberry-groupedit/shared/aggregator', {});
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-groupedit/settings-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'AggregatorE'
     */
    modelProjection: 'AggregatorE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'components-examples/flexberry-groupedit/shared/aggregator'
     */
    modelName: 'components-examples/flexberry-groupedit/shared/aggregator',

    developerUserSettings: Ember.computed(function () {
      return { aggregatorDetailsGroupedit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'width': 65 }],
            'sorting': [{ 'propName': 'flag', 'direction': 'desc', 'sortPriority': 1 }]
          }
        }

      };
    }),

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      // Empty aggregator without details.
      return store.createRecord('components-examples/flexberry-groupedit/shared/aggregator', {});
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-lookup/autocomplete-order-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-lookup/autofill-by-limit-example', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry-data/query/builder'], function (exports, _editForm, _builder) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LookupWithLimitFunctionExampleView'
     */
    modelProjection: 'LookupWithLimitFunctionExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Current predicate to limit values for lookup.
       @property limitValue
      @type BasePredicate
      @default undefined
     */
    limitValue: undefined,

    /**
      Returns model related to current route.
       @method model
     */
    model: function model() {
      var _this = this;

      var store = this.get('store');

      var query = new _builder.default(store).from('ember-flexberry-dummy-suggestion-type').selectByProjection('SuggestionTypeE');

      return store.queryRecord('ember-flexberry-dummy-suggestion-type', query.build()).then(function (suggestionType) {
        _this.set('limitValue', suggestionType);

        var base = store.createRecord('ember-flexberry-dummy-suggestion');
        return base;
      });
    },


    /**
      Load limit accessible values for lookup.
       @method setupController
     */
    setupController: function setupController() {
      this._super.apply(this, arguments);

      this.set('controller.limitValue', this.get('limitValue'));
    }
  });
});
define('dummy/routes/components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeE'
     */
    modelProjection: 'SuggestionTypeEWithComputedField',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionTypeLocalizedTypesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 55 }]
          }
        }
      };
    })
  });
});
define('dummy/routes/components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-list', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeL'
     */
    modelProjection: 'SuggestionTypeEWithComputedField',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return {
        SOLVSuggestionTypeObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 90 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type'
  });
});
define('dummy/routes/components-examples/flexberry-lookup/customizing-window-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'DropDownLookupExampleView'
     */
    modelProjection: 'CustomizeLookupWindowExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-lookup/default-ordering-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'DropDownLookupExampleView'
     */
    modelProjection: 'DefaultOrderingExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ]
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: sorting.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        lookupUserSettings: {
          'DEFAULT': {
            'sorting': [{ 'propName': 'name', 'direction': 'desc' }, { 'propName': 'moderated', 'direction': 'asc' }]
          }
        }
      };
    }),
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-lookup/dropdown-mode-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'DropDownLookupExampleView'
     */
    modelProjection: 'DropDownLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
    */
    model: function model() {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
  });
});
define('dummy/routes/components-examples/flexberry-lookup/hierarchy-olv-in-lookup-example', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry-data/query/builder'], function (exports, _editForm, _builder) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'DropDownLookupExampleView'
     */
    modelProjection: 'CustomizeLookupWindowExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    },

    /* eslint-enable no-unused-vars */

    actions: {
      loadRecordsById: function loadRecordsById(id, target, property) {
        var hierarchicalAttribute = 'parent';
        var modelName = 'ember-flexberry-dummy-suggestion-type';
        var projectionName = 'SettingLookupExampleView';
        var builder = new _builder.default(this.store).from(modelName).selectByProjection(projectionName).where(hierarchicalAttribute, 'eq', id);

        Ember.set(target, property, this.store.query(modelName, builder.build()));
      }
    }
  });
});
define('dummy/routes/components-examples/flexberry-lookup/limit-function-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LookupWithLimitFunctionExampleView'
     */
    modelProjection: 'LookupWithLimitFunctionExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-lookup/limit-function-through-dynamic-properties-example', ['exports', 'ember-flexberry-data/query/builder', 'ember-flexberry/routes/edit-form'], function (exports, _builder, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({

    /**
      Current predicate to limit accessible values for lookup.
       @property firstLimitType
      @type BasePredicate
      @default undefined
     */
    firstLimitType: undefined,

    /**
      Current predicate to limit accessible values for lookup.
       @property secondLimitType
      @type BasePredicate
      @default undefined
     */
    secondLimitType: undefined,
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LookupWithLimitFunctionExampleView'
     */
    modelProjection: 'LookupWithLimitFunctionExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var _this = this;

      var store = this.get('store');

      var query = new _builder.default(store).from('ember-flexberry-dummy-suggestion-type').selectByProjection('SuggestionTypeE').top(2);

      return store.query('ember-flexberry-dummy-suggestion-type', query.build()).then(function (suggestionTypes) {
        var suggestionTypesArr = suggestionTypes.toArray();
        _this.set('firstLimitType', suggestionTypesArr.objectAt(0).get('name'));
        _this.set('secondLimitType', suggestionTypesArr.objectAt(1).get('name'));

        var base = store.createRecord(_this.get('modelName'));
        return base;
      });
    },

    /* eslint-enable no-unused-vars */

    /**
      Load limit accessible values for lookup.
       @method setupController
     */
    setupController: function setupController() {
      this._super.apply(this, arguments);

      this.set('controller.firstLimitType', this.get('firstLimitType'));

      this.set('controller.secondLimitType', this.get('secondLimitType'));
    }
  });
});
define('dummy/routes/components-examples/flexberry-lookup/lookup-block-form-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LookupInBlockFormView'
     */
    modelProjection: 'LookupInBlockFormView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-lookup/lookup-in-modal', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LookupInBlockFormView'
     */
    modelProjection: 'LookupInBlockFormView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-lookup/numeric-autocomplete', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionEWithKarma',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    model: function model() {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
  });
});
define('dummy/routes/components-examples/flexberry-lookup/settings-example', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SettingLookupExampleView'
     */
    modelProjection: 'SettingLookupExampleView',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var base = store.createRecord('ember-flexberry-dummy-suggestion');
      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-menu/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({});
});
define('dummy/routes/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-cancel', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryObjectlistviewCustomFilter'
    */
    modelProjection: 'SuggestionTypeL',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVCustomFilterObjectListView: {}
      };
    })
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-immediately', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryObjectlistviewCustomFilter'
    */
    modelProjection: 'SuggestionTypeL',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVCustomFilterObjectListView: {}
      };
    })
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-cancel', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryObjectlistviewCustomFilter'
    */
    modelProjection: 'SuggestionTypeL',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVCustomFilterObjectListView: {}
      };
    })
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-immediately', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryObjectlistviewCustomFilter'
    */
    modelProjection: 'SuggestionTypeL',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVCustomFilterObjectListView: {}
      };
    })
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryObjectlistviewCustomFilter'
    */
    modelProjection: 'SuggestionTypeL',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVCustomFilterObjectListView: {}
      };
    })
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryObjectlistviewCustomFilter'
    */
    modelProjection: 'SuggestionTypeL',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVCustomFilterObjectListView: {}
      };
    })
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/configurate-rows', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVSettingExampleObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
    */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/custom-filter', ['exports', 'ember-flexberry/routes/list-form', 'ember-flexberry-data/query/predicate'], function (exports, _listForm, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryObjectlistviewCustomFilter'
    */
    modelProjection: 'FlexberryObjectlistviewCustomFilter',

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVCustomFilterObjectListView: {}
      };
    }),

    predicateForFilter: function predicateForFilter(filter) {
      if (filter.type === 'string' && filter.condition === 'empty') {
        return new _predicate.SimplePredicate(filter.name, 'eq', null);
      }

      if (filter.type === 'decimal') {
        return new _predicate.SimplePredicate(filter.name, filter.condition, filter.pattern ? Number(filter.pattern) : filter.pattern);
      }

      return this._super.apply(this, arguments);
    },
    predicateForAttribute: function predicateForAttribute(attribute, filter) {
      switch (attribute.type) {
        case 'boolean':
          {
            var yes = ['TRUE', 'True', 'true', 'YES', 'Yes', 'yes', 'ДА', 'Да', 'да', '1', '+'];
            var no = ['False', 'False', 'false', 'NO', 'No', 'no', 'НЕТ', 'Нет', 'нет', '0', '-'];

            if (yes.indexOf(filter) > 0) {
              return new _predicate.SimplePredicate(attribute.name, 'eq', 'true');
            }

            if (no.indexOf(filter) > 0) {
              return new _predicate.SimplePredicate(attribute.name, 'eq', 'false');
            }

            return null;
          }

        default:
          {
            return this._super.apply(this, arguments);
          }
      }
    }
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/downloading-files-from-olv-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionFileE'
     */
    modelProjection: 'SuggestionFileE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-file'
     */
    modelName: 'ember-flexberry-dummy-suggestion-file'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/downloading-files-from-olv-list', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionFileE'
     */
    modelProjection: 'SuggestionFileE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        DownloadingFilesFromOLV: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-file'
     */
    modelName: 'ember-flexberry-dummy-suggestion-file',

    actions: {
      objectListViewRowClick: function objectListViewRowClick(record, params) {
        // Prevent transition to edit form if cell containing 'flexberry-file' component has been clicked,
        // and click target isn't cell itself (so target is some element of 'flexberry-file' component).
        if (params.column && params.column.cellComponent.componentName === 'flexberry-file' && params.originalEvent.target.tagName.toLowerCase() !== 'td') {
          params.goToEditForm = false;
        }

        this._super.apply(this, arguments);
      }
    }
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/edit-form-with-detail-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeE'
     */
    modelProjection: 'SuggestionTypeE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionTypeLocalizedTypesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }]
          }
        }
      };
    })
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/edit-form-with-detail-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeE'
    */
    modelProjection: 'SuggestionTypeE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
    */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type-edit'
    */
    templateName: 'ember-flexberry-dummy-suggestion-type-edit'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/edit-form-with-detail-list', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeL'
     */
    modelProjection: 'SuggestionTypeL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionTypeLocalizedTypesObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 100 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 65 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/multi-list-route', 'ember-flexberry/mixins/multi-list-model-edit', 'ember-flexberry/objects/list-parameters', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _multiListRoute, _multiListModelEdit, _listParameters, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_multiListRoute.default, _multiListModelEdit.default, _editFormRouteOperationsIndication.default, {
    init: function init() {
      this._super.apply(this, arguments);

      this.set('multiListSettings.MultiUserList', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiUserList',
        modelName: 'ember-flexberry-dummy-application-user',
        projectionName: 'ApplicationUserL',
        editFormRoute: 'ember-flexberry-dummy-multi-list-user-edit'
      }));

      this.set('multiListSettings.MultiUserList2', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiUserList2',
        modelName: 'ember-flexberry-dummy-application-user',
        projectionName: 'ApplicationUserL',
        editFormRoute: 'ember-flexberry-dummy-multi-list-user-edit'
      }));

      this.set('multiListSettings.MultiSuggestionList', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiSuggestionList',
        modelName: 'ember-flexberry-dummy-suggestion',
        projectionName: 'SuggestionL',
        editFormRoute: 'components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit',
        exportExcelProjection: 'SuggestionL'
      }));

      this.set('multiListSettings.MultiHierarchyList', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiHierarchyList',
        modelName: 'ember-flexberry-dummy-suggestion-type',
        projectionName: 'SuggestionTypeL',
        editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit',
        inHierarchicalMode: true,
        hierarchicalAttribute: 'parent',
        hierarchyPaging: true
      }));
    },


    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default {}
    */

    developerUserSettings: Ember.computed(function () {
      return {
        suggestionUserVotesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'voteType', 'width': 133 }, { 'propName': 'author', 'width': 348 }, { 'propName': 'author.eMail', 'width': 531 }],
            'sorting': [{ 'propName': 'author', 'direction': 'asc', 'attributePath': 'author.name' }]
          }
        },
        filesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'order', 'width': 140 }, { 'propName': 'file', 'width': 893 }],
            'colsOrder': [{ 'propName': 'file' }, { 'propName': 'order' }],
            'sorting': [{ 'propName': 'order', 'direction': 'desc' }]
          }
        },
        suggestionCommentsGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'votes', 'fixed': true }],
            'sorting': [{ 'propName': 'votes', 'direction': 'asc' }, { 'propName': 'moderated', 'direction': 'desc' }, { 'propName': 'text', 'direction': 'asc' }]
          }
        },
        MultiUserList: {},
        MultiUserList2: {},
        MultiSuggestionList: {},
        MultiHierarchyList: {}
      };
    }),

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'

  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
    */
    modelProjection: 'SuggestionE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
    */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit'
    */
    templateName: 'components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/hierarchy-example', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeL'
     */
    modelProjection: 'SuggestionTypeL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        HiearchyExampleObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/hierarchy-paging-example', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeL'
     */
    modelProjection: 'SuggestionTypeL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return {
        HiearchyExampleObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({});
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/parent-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'BaseE'
     */
    modelProjection: 'parentE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-base'
     */
    modelName: 'ember-flexberry-dummy-parent'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/parent-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'parentE'
    */
    modelProjection: 'parentE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-parent'
    */
    modelName: 'ember-flexberry-dummy-parent',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'components-examples/flexberry-objectlistview/inheritance-models/parent-edit'
    */
    templateName: 'components-examples/flexberry-objectlistview/inheritance-models/parent-edit'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/parent-list', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'BaseL'
     */
    modelProjection: 'parentL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        OLVInheritanceModels: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-base'
     */
    modelName: 'ember-flexberry-dummy-parent'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'successorE'
     */
    modelProjection: 'SuccessorE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-successor-phone'
     */
    modelName: 'ember-flexberry-dummy-successor-phone'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuccessorE'
    */
    modelProjection: 'SuccessorE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-successor-phone'
    */
    modelName: 'ember-flexberry-dummy-successor-phone',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-application-user-edit'
    */
    templateName: 'components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-list', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'successorL'
     */
    modelProjection: 'SuccessorL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        OLVInheritanceModels: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'components-examples/flexberry-objectlistview/inheritance-models/successor-phone'
     */
    modelName: 'ember-flexberry-dummy-successor-phone'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuccessorE'
     */
    modelProjection: 'SuccessorE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network'
     */
    modelName: 'ember-flexberry-dummy-successor-social-network'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuccessorE'
    */
    modelProjection: 'SuccessorE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-successor-phone'
    */
    modelName: 'ember-flexberry-dummy-successor-phone',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-application-user-edit'
    */
    templateName: 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-list', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuccessorL'
     */
    modelProjection: 'SuccessorL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        OLVInheritanceModels: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'components-examples/flexberry-objectlistview/inheritance-models/successor-social-network'
     */
    modelName: 'ember-flexberry-dummy-successor-social-network'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/limit-function-example', ['exports', 'ember-flexberry/routes/list-form', 'ember-flexberry-data/query/builder', 'ember-flexberry-data/query/filter-operator', 'ember-flexberry-data/query/predicate'], function (exports, _listForm, _builder, _filterOperator, _predicate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    /**
      Current predicate to limit accessible values for lookup.
       @property firstLimitType
      @type BasePredicate
      @default undefined
     */
    firstLimitType: undefined,

    /**
      Current predicate to limit accessible values for lookup.
       @property secondLimitType
      @type BasePredicate
      @default undefined
     */
    secondLimitType: undefined,

    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVLimitFunctionExampleObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      It overrides base method and forms the limit predicate for loaded data.
      If there is displayed even number or records per page, records where 'address' attribute contains letter 'S' are filtered.
      If there is displayed odd number or records per page, records where 'address' attribute contains letter 'п' are filtered.
       @public
      @method objectListViewLimitPredicate
      @param {Object} options Method options.
      @param {String} [options.modelName] Type of records to load.
      @param {String} [options.projectionName] Projection name to load data by.
      @param {String} [options.params] Current route query parameters.
      @return {BasePredicate} The predicate to limit loaded data.
     */
    objectListViewLimitPredicate: function objectListViewLimitPredicate(options) {

      var methodOptions = Ember.merge({
        modelName: undefined,
        projectionName: undefined,
        params: undefined
      }, options);

      if (methodOptions.modelName === this.get('modelName') && methodOptions.projectionName === this.get('modelProjection')) {

        var limitFunctionText = this.get('controller.limitFunction');

        if (limitFunctionText) {
          var limitFunction = new _predicate.StringPredicate('address').contains(limitFunctionText);

          return limitFunction;
        }
      }

      return undefined;
    },

    /**
      Returns model related to current route.
      @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var _this = this;

      var store = this.get('store');

      var query = new _builder.default(store).from(this.get('modelName')).selectByProjection('SuggestionL').where('address', _filterOperator.default.Neq, '');

      store.query('ember-flexberry-dummy-suggestion', query.build()).then(function (limitdata) {
        var limitTypesArr = limitdata.toArray();
        _this.set('firstLimitType', limitTypesArr.objectAt(0).get('address'));
        _this.set('secondLimitType', limitTypesArr.objectAt(1).get('address'));
      });

      return this._super.apply(this, arguments);
    },

    /* eslint-enable no-unused-vars */

    actions: {
      refreshModel: function refreshModel() {
        this.refresh();
      }
    },

    /**
      Load limit accessible values for lookup.
      @method setupController
     */
    setupController: function setupController() {
      this._super.apply(this, arguments);

      this.set('controller.firstLimitType', this.get('firstLimitType'));

      this.set('controller.secondLimitType', this.get('secondLimitType'));
    },


    /* eslint-disable no-unused-vars */
    onModelLoadingAlways: function onModelLoadingAlways(data) {
      var loadCount = this.get('controller.loadCount') + 1;
      this.set('controller.loadCount', loadCount);
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/limited-text-size-example', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return {
        LimitedSizeOlv: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': false, 'width': 90 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/list-on-editform', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return { FOLVListOnEditformObjectListView: {} };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/lock-services-editor-view-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication', 'ember-flexberry/mixins/lock-route'], function (exports, _editForm, _editFormRouteOperationsIndication, _lockRoute) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, _lockRoute.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionUserVotesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'voteType', 'width': 133 }, { 'propName': 'author', 'width': 348 }, { 'propName': 'author.eMail', 'width': 531 }],
            'sorting': [{ 'propName': 'author', 'direction': 'asc', 'attributePath': 'author.name' }]
          }
        },
        filesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'order', 'width': 140 }, { 'propName': 'file', 'width': 893 }],
            'colsOrder': [{ 'propName': 'file' }, { 'propName': 'order' }],
            'sorting': [{ 'propName': 'order', 'direction': 'desc' }]
          }
        },
        suggestionCommentsGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'votes', 'fixed': true }],
            'sorting': [{ 'propName': 'votes', 'direction': 'asc' }, { 'propName': 'moderated', 'direction': 'desc' }, { 'propName': 'text', 'direction': 'asc' }]
          }
        }
      };
    }),

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    blockedByUser: undefined,

    /**
      This function will be called to solve open form read only or transition to parent route.
      You can override function for custom behavior.
       @method openReadOnly
      @param {String} lockUserName
      @return {Promise}
      @for EditFormRoute
    */

    openReadOnly: function openReadOnly(lockUserName) {
      this.set('blockedByUser', lockUserName);
      return this._super.apply(this, arguments);
    },


    /**
      Load limit accessible values for lookup.
       @method setupController
    */
    setupController: function setupController() {
      this._super.apply(this, arguments);

      this.set('controller.blockedByUser', this.get('blockedByUser'));
    },


    /* eslint-disable no-unused-vars */
    resetController: function resetController(controller, isExiting, transition) {
      this._super.apply(this, arguments);

      this.set('blockedByUser', undefined);
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/lock-services-editor-view-list', ['exports', 'ember-flexberry/routes/list-form', 'dummy/mixins/list-form-route-operations-indication'], function (exports, _listForm, _listFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormRouteOperationsIndication.default, {
    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        SuggestionObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 90 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/object-list-view-resize', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({

    modelProjection: 'SuggestionL',

    developerUserSettings: Ember.computed(function () {
      return { ObjectListViewResize: {} };
    }),

    modelName: 'ember-flexberry-dummy-suggestion',

    model: function model() {
      return this.store.findAll('ember-flexberry-dummy-suggestion').then(function (posts) {
        return posts.toArray();
      });
    }
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/on-edit-form', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ApplicationUserL'
     */
    modelProjection: 'ApplicationUserL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVOnEditFormObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
     */
    modelName: 'ember-flexberry-dummy-application-user'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/on-edit-form/suggestion', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default {}
    */

    developerUserSettings: Ember.computed(function () {
      return { listOnEditform: {} };
    }),

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/on-edit-form/user', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ApplicationUserE'
     */
    modelProjection: 'ApplicationUserE',

    developerUserSettings: Ember.computed(function () {
      return { FOLVOnEditFormSuggestionsObjectListView: {} };
    }),
    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
     */
    modelName: 'ember-flexberry-dummy-application-user'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default null
    */
    developerUserSettings: null,

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    init: function init() {
      this._super.apply(this, arguments);
      this.set('developerUserSettings', {
        suggestionUserVotesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'voteType', 'width': 133 }, { 'propName': 'author', 'width': 348 }, { 'propName': 'author.eMail', 'width': 531 }],
            'sorting': [{ 'propName': 'author', 'direction': 'asc', 'attributePath': 'author.name' }]
          }
        },
        filesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'order', 'width': 140 }, { 'propName': 'file', 'width': 893 }],
            'colsOrder': [{ 'propName': 'file' }, { 'propName': 'order' }],
            'sorting': [{ 'propName': 'order', 'direction': 'desc' }]
          }
        },
        suggestionCommentsGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'votes', 'fixed': true }],
            'sorting': [{ 'propName': 'votes', 'direction': 'asc' }, { 'propName': 'moderated', 'direction': 'desc' }, { 'propName': 'text', 'direction': 'asc' }]
          }
        }
      });
    }
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-list', ['exports', 'ember-flexberry/routes/list-form', 'dummy/mixins/list-form-route-operations-indication'], function (exports, _listForm, _listFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormRouteOperationsIndication.default, {
    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default null
    */
    developerUserSettings: null,

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      This method will be invoked always when load operation completed,
      regardless of load promise's state (was it fulfilled or rejected).
       @method onModelLoadingAlways.
     */
    init: function init() {
      this._super();
      this.set('developerUserSettings', {
        SuggestionObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 86 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      });
    },
    onModelLoadingAlways: function onModelLoadingAlways() {
      var loadCount = this.get('controller.loadCount') + 1;
      this.set('controller.loadCount', loadCount);
    }
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/selected-rows', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeL'
     */
    modelProjection: 'SuggestionTypeL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionTypeLocalizedTypesObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/settings-example', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVSettingsExampleObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': false, 'width': 90 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-objectlistview/toolbar-custom-buttons-example', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FolvWithLimitFunctionExampleView'
     */
    modelProjection: 'FolvWithLimitFunctionExampleView',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVToolbarCustomButtonsExample: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/components-examples/flexberry-simpledatetime/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-simpledatetime/settings-example/base', {});

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-text-cell/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({});
});
define('dummy/routes/components-examples/flexberry-textarea/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-textarea/settings-example/base', {});

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-textbox/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      var base = store.createRecord('components-examples/flexberry-textbox/settings-example/base', {});

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/components-examples/flexberry-toggler/ge-into-toggler-example', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'TogglerExampleMasterL'
     */
    modelProjection: 'TogglerExampleMasterL',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        SuggestionObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-toggler-example-master'
     */
    modelName: 'ember-flexberry-dummy-toggler-example-master'
  });
});
define('dummy/routes/components-examples/flexberry-toggler/settings-example-inner', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({});
});
define('dummy/routes/components-examples/flexberry-toggler/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({});
});
define('dummy/routes/components-examples/flexberry-tree/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({});
});
define('dummy/routes/components-examples/ui-message/settings-example', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({});
});
define('dummy/routes/edit-form', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _editForm.default;
    }
  });
});
define('dummy/routes/ember-flexberry-dummy-application-user-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ApplicationUserE'
     */
    modelProjection: 'ApplicationUserE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
     */
    modelName: 'ember-flexberry-dummy-application-user'
  });
});
define('dummy/routes/ember-flexberry-dummy-application-user-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ApplicationUserE'
    */
    modelProjection: 'ApplicationUserE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-application-user',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-application-user-edit'
    */
    templateName: 'ember-flexberry-dummy-application-user-edit'
  });
});
define('dummy/routes/ember-flexberry-dummy-application-user-list', ['exports', 'ember-flexberry/routes/list-form', 'dummy/mixins/list-form-route-operations-indication'], function (exports, _listForm, _listFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ApplicationUserL'
     */
    modelProjection: 'ApplicationUserL',

    /**
    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        applicationUserObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': false, 'width': 90 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
     */
    modelName: 'ember-flexberry-dummy-application-user'
  });
});
define('dummy/routes/ember-flexberry-dummy-comment-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'CommentE'
     */
    modelProjection: 'CommentE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-comment'
     */
    modelName: 'ember-flexberry-dummy-comment'
  });
});
define('dummy/routes/ember-flexberry-dummy-comment-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'CommentE'
    */
    modelProjection: 'CommentE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-comment'
    */
    modelName: 'ember-flexberry-dummy-comment',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-comment-edit'
    */
    templateName: 'ember-flexberry-dummy-comment-edit'
  });
});
define('dummy/routes/ember-flexberry-dummy-comment-vote-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'CommentVoteE'
     */
    modelProjection: 'CommentVoteE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-comment-vote'
     */
    modelName: 'ember-flexberry-dummy-comment-vote'
  });
});
define('dummy/routes/ember-flexberry-dummy-comment-vote-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'CommentVoteE'
    */
    modelProjection: 'CommentVoteE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-comment-vote'
    */
    modelName: 'ember-flexberry-dummy-comment-vote',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-comment-vote-edit'
    */
    templateName: 'ember-flexberry-dummy-comment-vote-edit'
  });
});
define('dummy/routes/ember-flexberry-dummy-localization-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LocalizationE'
     */
    modelProjection: 'LocalizationE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-localization'
     */
    modelName: 'ember-flexberry-dummy-localization'
  });
});
define('dummy/routes/ember-flexberry-dummy-localization-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LocalizationE'
    */
    modelProjection: 'LocalizationE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-localization'
    */
    modelName: 'ember-flexberry-dummy-localization',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-localization-edit'
    */
    templateName: 'ember-flexberry-dummy-localization-edit'
  });
});
define('dummy/routes/ember-flexberry-dummy-localization-list', ['exports', 'ember-flexberry/routes/list-form', 'dummy/mixins/list-form-route-operations-indication'], function (exports, _listForm, _listFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'LocalizationL'
     */
    modelProjection: 'LocalizationL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        localizationObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-localization'
     */
    modelName: 'ember-flexberry-dummy-localization'
  });
});
define('dummy/routes/ember-flexberry-dummy-multi-list-user-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/objects/list-parameters', 'ember-flexberry/mixins/multi-list-route', 'ember-flexberry/mixins/multi-list-model-edit'], function (exports, _editForm, _listParameters, _multiListRoute, _multiListModelEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_multiListRoute.default, _multiListModelEdit.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ApplicationUserE'
     */
    modelProjection: 'ApplicationUserE',

    developerUserSettings: Ember.computed(function () {
      return { MultiUserListOnEdit: {}, MultiUserList2OnEdit: {}, MultiSuggestionListOnEdit: {}, MultiHierarchyListOnEdit: {} };
    }),

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
     */
    modelName: 'ember-flexberry-dummy-application-user',

    init: function init() {
      this._super.apply(this, arguments);

      this.set('multiListSettings.MultiUserListOnEdit', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiUserListOnEdit',
        modelName: 'ember-flexberry-dummy-application-user',
        projectionName: 'ApplicationUserL',
        editFormRoute: 'ember-flexberry-dummy-application-user-edit'
      }));

      this.set('multiListSettings.MultiUserList2OnEdit', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiUserList2OnEdit',
        modelName: 'ember-flexberry-dummy-application-user',
        projectionName: 'ApplicationUserL',
        editFormRoute: 'ember-flexberry-dummy-application-user-edit'
      }));

      this.set('multiListSettings.MultiSuggestionListOnEdit', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiSuggestionListOnEdit',
        modelName: 'ember-flexberry-dummy-suggestion',
        projectionName: 'SuggestionL',
        editFormRoute: 'ember-flexberry-dummy-suggestion-edit',
        exportExcelProjection: 'SuggestionL'
      }));

      this.set('multiListSettings.MultiHierarchyListOnEdit', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiHierarchyListOnEdit',
        modelName: 'ember-flexberry-dummy-suggestion-type',
        projectionName: 'SuggestionTypeL',
        editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit',
        inHierarchicalMode: true,
        hierarchicalAttribute: 'parent'
      }));
    }
  });
});
define('dummy/routes/ember-flexberry-dummy-multi-list-user-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/objects/list-parameters', 'ember-flexberry/mixins/edit-form-route-operations-indication', 'ember-flexberry/mixins/multi-list-route', 'ember-flexberry/mixins/multi-list-model-edit'], function (exports, _editFormNew, _listParameters, _editFormRouteOperationsIndication, _multiListRoute, _multiListModelEdit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, _multiListRoute.default, _multiListModelEdit.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ApplicationUserE'
    */
    modelProjection: 'ApplicationUserE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-application-user'
    */
    modelName: 'ember-flexberry-dummy-application-user',

    /**
      @property developerUserSettings
      @type Object
      @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return { FOLVOnEditFormObjectListView: {} };
    }),

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-multi-list-user-edit'
    */
    templateName: 'ember-flexberry-dummy-multi-list-user-edit',

    init: function init() {
      this._super.apply(this, arguments);

      this.set('multiListSettings.MultiUserListOnEdit', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiUserListOnEdit',
        modelName: 'ember-flexberry-dummy-application-user',
        projectionName: 'ApplicationUserL',
        editFormRoute: 'ember-flexberry-dummy-application-user-edit'
      }));

      this.set('multiListSettings.MultiUserList2OnEdit', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiUserList2OnEdit',
        modelName: 'ember-flexberry-dummy-application-user',
        projectionName: 'ApplicationUserL',
        editFormRoute: 'ember-flexberry-dummy-application-user-edit'
      }));

      this.set('multiListSettings.MultiSuggestionListOnEdit', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiSuggestionListOnEdit',
        modelName: 'ember-flexberry-dummy-suggestion',
        projectionName: 'SuggestionL',
        editFormRoute: 'ember-flexberry-dummy-suggestion-edit',
        exportExcelProjection: 'SuggestionL'
      }));

      this.set('multiListSettings.MultiHierarchyListOnEdit', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiHierarchyListOnEdit',
        modelName: 'ember-flexberry-dummy-suggestion-type',
        projectionName: 'SuggestionTypeL',
        editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit',
        inHierarchicalMode: true,
        hierarchicalAttribute: 'parent'
      }));
    }
  });
});
define('dummy/routes/ember-flexberry-dummy-multi-list', ['exports', 'ember-flexberry/routes/list-form', 'ember-flexberry/mixins/multi-list-route', 'ember-flexberry/mixins/multi-list-model', 'ember-flexberry/objects/list-parameters'], function (exports, _listForm, _multiListRoute, _multiListModel, _listParameters) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_multiListRoute.default, _multiListModel.default, {
    init: function init() {
      this._super.apply(this, arguments);

      this.set('multiListSettings.MultiUserList', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiUserList',
        modelName: 'ember-flexberry-dummy-application-user',
        projectionName: 'ApplicationUserL',
        editFormRoute: 'ember-flexberry-dummy-multi-list-user-edit',
        advLimitButton: false
      }));

      this.set('multiListSettings.MultiUserList2', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiUserList2',
        modelName: 'ember-flexberry-dummy-application-user',
        projectionName: 'ApplicationUserL',
        editFormRoute: 'ember-flexberry-dummy-multi-list-user-edit',
        advLimitButton: false
      }));

      this.set('multiListSettings.MultiSuggestionList', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiSuggestionList',
        modelName: 'ember-flexberry-dummy-suggestion',
        projectionName: 'SuggestionL',
        editFormRoute: 'components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit',
        exportExcelProjection: 'SuggestionL'
      }));

      this.set('multiListSettings.MultiHierarchyList', new _listParameters.default({
        objectlistviewEvents: this.get('objectlistviewEvents'),
        componentName: 'MultiHierarchyList',
        modelName: 'ember-flexberry-dummy-suggestion-type',
        projectionName: 'SuggestionTypeL',
        editFormRoute: 'ember-flexberry-dummy-suggestion-type-edit',
        inHierarchicalMode: true,
        hierarchicalAttribute: 'parent',
        hierarchyPaging: true
      }));
    },


    /**
      Defined user settings developer.
      For default userSetting use empty name ('').
      Property `<componentName>` may contain any of properties: `colsOrder`, `sorting`, `colsWidth` or being empty.
       ```javascript
      {
        <componentName>: {
          <settingName>: {
            colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
            sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
            colsWidths: [ <colName>:<colWidth>, ... ],
          },
          ...
        },
        ...
      }
      ```
       @property developerUserSettings
      @type Object
      @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return { MultiUserList: {}, MultiUserList2: {}, MultiSuggestionList: {}, MultiHierarchyList: {} };
    })
  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
     */
    modelProjection: 'SuggestionE',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionUserVotesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'voteType', 'width': 133 }, { 'propName': 'author', 'width': 348 }, { 'propName': 'author.eMail', 'width': 531 }],
            'sorting': [{ 'propName': 'author', 'direction': 'asc', 'attributePath': 'author.name' }]
          }
        },
        filesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'order', 'width': 140 }, { 'propName': 'file', 'width': 893 }],
            'colsOrder': [{ 'propName': 'file' }, { 'propName': 'order' }],
            'sorting': [{ 'propName': 'order', 'direction': 'desc' }]
          }
        },
        suggestionCommentsGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'votes', 'fixed': true }],
            'sorting': [{ 'propName': 'votes', 'direction': 'asc' }, { 'propName': 'moderated', 'direction': 'desc' }, { 'propName': 'text', 'direction': 'asc' }]
          }
        }
      };
    }),

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'

  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionE'
    */
    modelProjection: 'SuggestionE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
    */
    modelName: 'ember-flexberry-dummy-suggestion',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-suggestion-edit'
    */
    templateName: 'ember-flexberry-dummy-suggestion-edit',

    developerUserSettings: Ember.computed(function () {
      return {
        suggestionUserVotesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'voteType', 'width': 133 }, { 'propName': 'author', 'width': 348 }, { 'propName': 'author.eMail', 'width': 531 }],
            'sorting': [{ 'propName': 'author', 'direction': 'asc', 'attributePath': 'author.name' }]
          }
        },
        filesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'order', 'width': 140 }, { 'propName': 'file', 'width': 893 }],
            'colsOrder': [{ 'propName': 'file' }, { 'propName': 'order' }],
            'sorting': [{ 'propName': 'order', 'direction': 'desc' }]
          }
        },
        suggestionCommentsGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'votes', 'fixed': true }],
            'sorting': [{ 'propName': 'votes', 'direction': 'asc' }, { 'propName': 'moderated', 'direction': 'desc' }, { 'propName': 'text', 'direction': 'asc' }]
          }
        }
      };
    })
  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-file-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionFileE'
     */
    modelProjection: 'SuggestionFileE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-file'
     */
    modelName: 'ember-flexberry-dummy-suggestion-file'
  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-file-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionFileE'
    */
    modelProjection: 'SuggestionFileE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-file'
    */
    modelName: 'ember-flexberry-dummy-suggestion-file',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-suggestion-file-edit'
    */
    templateName: 'ember-flexberry-dummy-suggestion-file-edit'
  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-file-list', ['exports', 'ember-flexberry/routes/list-form', 'dummy/mixins/list-form-route-operations-indication'], function (exports, _listForm, _listFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionFileE'
     */
    modelProjection: 'SuggestionFileL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    @default {}
    */
    developerUserSettings: Ember.computed(function () {
      return {
        localizationObjectListView: {}
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-file'
     */
    modelName: 'ember-flexberry-dummy-suggestion-file'
  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-list', ['exports', 'ember-flexberry/routes/list-form', 'dummy/mixins/list-form-route-operations-indication'], function (exports, _listForm, _listFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend(_listFormRouteOperationsIndication.default, {
    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'SuggestionL'
     */
    modelProjection: 'SuggestionL',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        SuggestionObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 90 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion'
     */
    modelName: 'ember-flexberry-dummy-suggestion'
  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-type-edit', ['exports', 'ember-flexberry/routes/edit-form', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editForm, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeE'
     */
    modelProjection: 'SuggestionTypeE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        suggestionTypeLocalizedTypesGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 55 }]
          }
        }
      };
    })
  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-type-edit/new', ['exports', 'ember-flexberry/routes/edit-form-new', 'ember-flexberry/mixins/edit-form-route-operations-indication'], function (exports, _editFormNew, _editFormRouteOperationsIndication) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend(_editFormRouteOperationsIndication.default, {
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeE'
    */
    modelProjection: 'SuggestionTypeE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
    */
    modelName: 'ember-flexberry-dummy-suggestion-type',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type-edit'
    */
    templateName: 'ember-flexberry-dummy-suggestion-type-edit'
  });
});
define('dummy/routes/ember-flexberry-dummy-suggestion-type-list', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'SuggestionTypeL'
     */
    modelProjection: 'SuggestionTypeL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        SOLVSuggestionTypeObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 100 }, { 'propName': 'OlvRowMenu', 'fixed': true, 'width': 68 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-suggestion-type'
     */
    modelName: 'ember-flexberry-dummy-suggestion-type'
  });
});
define('dummy/routes/ember-flexberry-dummy-toggler-example-master-e', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({

    /**
     Name of model projection to be used as record's properties limitation.
      @property modelProjection
     @type String
     @default 'TogglerExampleMasterE'
     */
    modelProjection: 'TogglerExampleMasterE',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        togglerExampleDetailGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'togglerExampleDetailProperty', 'width': 935 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-toggler-example-master'
    */
    modelName: 'ember-flexberry-dummy-toggler-example-master'
  });
});
define('dummy/routes/ember-flexberry-dummy-toggler-example-master-e/new', ['exports', 'ember-flexberry/routes/edit-form-new'], function (exports, _editFormNew) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editFormNew.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'TogglerExampleMasterE'
    */
    modelProjection: 'TogglerExampleMasterE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'ember-flexberry-dummy-toggler-example-master'
    */
    modelName: 'ember-flexberry-dummy-toggler-example-master',

    /**
      Name of template to be rendered.
       @property templateName
      @type String
      @default 'ember-flexberry-dummy-toggler-example-master-e'
    */
    templateName: 'ember-flexberry-dummy-toggler-example-master-e',

    /**
    developerUserSettings.
    Format:
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        togglerExampleDetailGroupEdit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'togglerExampleDetailProperty', 'width': 935 }]
          }
        }
      };
    })
  });
});
define('dummy/routes/i-i-s-caseberry-logging-objects-application-log-e', ['exports', 'ember-flexberry/routes/i-i-s-caseberry-logging-objects-application-log-e'], function (exports, _iISCaseberryLoggingObjectsApplicationLogE) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iISCaseberryLoggingObjectsApplicationLogE.default;
    }
  });
});
define('dummy/routes/i-i-s-caseberry-logging-objects-application-log-l', ['exports', 'ember-flexberry/routes/i-i-s-caseberry-logging-objects-application-log-l'], function (exports, _iISCaseberryLoggingObjectsApplicationLogL) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iISCaseberryLoggingObjectsApplicationLogL.default;
    }
  });
});
define('dummy/routes/index', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend();
});
define('dummy/routes/integration-examples/edit-form/readonly-mode', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'AggregatorE'
     */
    modelProjection: 'AggregatorE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'integration-examples/edit-form/readonly-mode/aggregator'
     */
    modelName: 'integration-examples/edit-form/readonly-mode/aggregator',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');
      var aggregator = store.createRecord('integration-examples/edit-form/readonly-mode/aggregator', {});
      var detail = store.createRecord('integration-examples/edit-form/readonly-mode/detail', {});
      aggregator.get('details').pushObject(detail);

      return aggregator;
    },

    /* eslint-enable no-unused-vars */

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        aggregatorDetailsGroupedit: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }, { 'propName': 'masterDropdown', 'width': 220 }]
          }
        }
      };
    })
  });
});
define('dummy/routes/integration-examples/edit-form/validation', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _editForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _editForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'BaseE'
     */
    modelProjection: 'BaseE',

    /**
      Name of model to be used as form's record type.
       @property modelName
      @type String
      @default 'integration-examples/edit-form/validation/base'
     */
    modelName: 'integration-examples/edit-form/validation/base',

    /**
      Returns model related to current route.
       @method model
     */
    /* eslint-disable no-unused-vars */
    model: function model(params) {
      var store = this.get('store');

      // Create base model.
      var base = store.createRecord('integration-examples/edit-form/validation/base', {});

      // Create detail & add to base model.
      var detail1 = store.createRecord('integration-examples/edit-form/validation/detail', {});
      base.get('details').pushObject(detail1);

      return base;
    }
    /* eslint-enable no-unused-vars */

  });
});
define('dummy/routes/list-form', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _listForm.default;
    }
  });
});
define('dummy/routes/log-service-examples/clear-log-form', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    /**
      A hook you can use to setup the controller for the current route.
      [More info](https://www.emberjs.com/api/ember/release/classes/Route/methods/setupController?anchor=setupController).
       @method setupController
      @param {<a href="https://emberjs.com/api/ember/release/classes/Controller">Controller</a>} controller
      @param {Object} model
    */
    /* eslint-disable no-unused-vars */
    setupController: function setupController(controller, model) {
      this._super.apply(this, arguments);
      controller.getCounts();
    }
    /* eslint-enable no-unused-vars */
  });
});
define('dummy/routes/log-service-examples/settings-example', ['exports', 'ember-flexberry/routes/i-i-s-caseberry-logging-objects-application-log-l'], function (exports, _iISCaseberryLoggingObjectsApplicationLogL) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _iISCaseberryLoggingObjectsApplicationLogL.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'ApplicationLogL'
    */
    modelProjection: 'ApplicationLogL',

    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: 'asc'|'desc' }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        FOLVSettingExample: '\n        {\n          "DEFAULT": {\n            "colsOrder": [\n            {\n              "propName": "timestamp"\n            },\n            {\n              "propName": "category"\n            },\n            {\n              "propName": "machineName"\n            },\n            {\n              "propName": "appDomainName"\n            },\n            {\n              "propName": "processId"\n            },\n            {\n              "propName": "message"\n            },\n            {\n              "propName": "processName",\n              "hide": true\n            },\n            {\n              "propName": "formattedMessage",\n              "hide": true\n            },\n            {\n              "propName": "eventId",\n              "hide": true\n            },\n            {\n              "propName": "priority",\n              "hide": true\n            },\n            {\n              "propName": "severity",\n              "hide": true\n            },\n            {\n              "propName": "title",\n              "hide": true\n            },\n            {\n              "propName": "threadName",\n              "hide": true\n            },\n            {\n              "propName": "win32ThreadId",\n              "hide": true\n            }\n            ],\n            "sorting": [\n            {\n              "propName": "timestamp",\n              "direction": "desc",\n              "sortPriority": 1\n            }\n            ]\n          },\n          "Message": {\n            "colsOrder": [\n            {\n              "propName": "timestamp"\n            },\n            {\n              "propName": "category"\n            },\n            {\n              "propName": "machineName"\n            },\n            {\n              "propName": "appDomainName"\n            },\n            {\n              "propName": "processId"\n            },\n            {\n              "propName": "message"\n            },\n            {\n              "propName": "processName",\n              "hide": true\n            },\n            {\n              "propName": "formattedMessage",\n              "hide": true\n            },\n            {\n              "propName": "eventId",\n              "hide": true\n            },\n            {\n              "propName": "priority",\n              "hide": true\n            },\n            {\n              "propName": "severity",\n              "hide": true\n            },\n            {\n              "propName": "title",\n              "hide": true\n            },\n            {\n              "propName": "threadName",\n              "hide": true\n            },\n            {\n              "propName": "win32ThreadId",\n              "hide": true\n            }\n            ],\n            "sorting": [\n            {\n              "propName": "timestamp",\n              "direction": "desc",\n              "sortPriority": 1\n            }\n            ]\n          },\n          "FormattedMessage": {\n            "colsOrder": [\n            {\n              "propName": "timestamp"\n            },\n            {\n              "propName": "category"\n            },\n            {\n              "propName": "machineName"\n            },\n            {\n              "propName": "appDomainName"\n            },\n            {\n              "propName": "processId"\n            },\n            {\n              "propName": "formattedMessage",\n              "hide": false\n            },\n            {\n              "propName": "message",\n              "hide": true\n            },\n            {\n              "propName": "processName",\n              "hide": true\n            },\n            {\n              "propName": "eventId",\n              "hide": true\n            },\n            {\n              "propName": "priority",\n              "hide": true\n            },\n            {\n              "propName": "severity",\n              "hide": true\n            },\n            {\n              "propName": "title",\n              "hide": true\n            },\n            {\n              "propName": "threadName",\n              "hide": true\n            },\n            {\n              "propName": "win32ThreadId",\n              "hide": true\n            }\n            ],\n            "sorting": [\n            {\n              "propName": "timestamp",\n              "direction": "desc",\n              "sortPriority": 1\n            }\n            ]\n          }\n        }\n      '
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'i-i-s-caseberry-logging-objects-application-log'
    */
    modelName: 'i-i-s-caseberry-logging-objects-application-log'
  });
});
define('dummy/routes/login', ['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.Route.extend({
    activate: function activate() {
      this._super();
      Ember.run.next(this, function () {
        Ember.$('.main.menu.ui.sidebar').css('cssText', 'display: none !important;');
        Ember.$('.full.height').css('margin-left', 0);
        Ember.$('.page-header-userbar').css('display', 'none');
        Ember.$('.sidebar.icon').css('display', 'none');
      });
    },
    deactivate: function deactivate() {
      this._super();
      Ember.$('.main.menu.ui.sidebar').css('display', '');
      Ember.$('.full.height').css('margin-left', '');
      Ember.$('.page-header-userbar').css('display', '');
      Ember.$('.sidebar.icon').css('display', '');
    }
  });
});
define('dummy/routes/new-platform-flexberry-services-lock-list', ['exports', 'ember-flexberry/routes/new-platform-flexberry-services-lock-list'], function (exports, _newPlatformFlexberryServicesLockList) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _newPlatformFlexberryServicesLockList.default;
    }
  });
});
define('dummy/routes/user-setting-forms/user-setting-delete', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _listForm) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _listForm.default.extend({
    /**
      Name of model projection to be used as record's properties limitation.
       @property modelProjection
      @type String
      @default 'FlexberryUserSettingE'
     */
    modelProjection: 'FlexberryUserSettingE',

    /**
    /**
    developerUserSettings.
    {
    <componentName>: {
      <settingName>: {
          colsOrder: [ { propName :<colName>, hide: true|false }, ... ],
          sorting: [{ propName: <colName>, direction: "asc"|"desc" }, ... ],
          colsWidths: [ <colName>:<colWidth>, ... ],
        },
        ...
      },
      ...
    }
    For default userSetting use empty name ('').
    <componentName> may contain any of properties: colsOrder, sorting, colsWidth or being empty.
     @property developerUserSettings
    @type Object
    */
    developerUserSettings: Ember.computed(function () {
      return {
        userSettingObjectListView: {
          'DEFAULT': {
            'columnWidths': [{ 'propName': 'OlvRowToolbar', 'fixed': true, 'width': 65 }]
          }
        }
      };
    }),

    /**
      Name of model to be used as list's records types.
       @property modelName
      @type String
      @default 'new-platform-flexberry-flexberry-user-setting'
     */
    modelName: 'new-platform-flexberry-flexberry-user-setting'
  });
});
define('dummy/serializers/application', ['exports', 'ember-flexberry-data/serializers/odata'], function (exports, _odata) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _odata.default.extend({});
});
define('dummy/serializers/base', ['exports', 'ember-flexberry-data/serializers/base'], function (exports, _base) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _base.default;
    }
  });
});
define('dummy/serializers/ember-flexberry-dummy-application-user', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {},

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-comment-vote', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      applicationUser: { serialize: 'odata-id', deserialize: 'records' },
      comment: { serialize: 'odata-id', deserialize: 'records' }
    },

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-comment', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      author: { serialize: 'odata-id', deserialize: 'records' },
      suggestion: { serialize: 'odata-id', deserialize: 'records' },
      userVotes: { serialize: false, deserialize: 'records' }
    },

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-localization', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {},

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-localized-suggestion-type', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      localization: { serialize: 'odata-id', deserialize: 'records' },
      suggestionType: { serialize: 'odata-id', deserialize: 'records' }
    },

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-parent', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {},

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-successor-phone', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {},

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-successor-social-network', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {},

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-suggestion-file', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      suggestion: { serialize: 'odata-id', deserialize: 'records' }
    },

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-suggestion-type', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      parent: { serialize: 'odata-id', deserialize: 'records' },
      localizedTypes: { serialize: false, deserialize: 'records' }
    },

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-suggestion', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      editor1: { serialize: 'odata-id', deserialize: 'records' },
      type: { serialize: 'odata-id', deserialize: 'records' },
      author: { serialize: 'odata-id', deserialize: 'records' },
      files: { serialize: false, deserialize: 'records' },
      comments: { serialize: false, deserialize: 'records' },
      userVotes: { serialize: false, deserialize: 'records' }
    },

    /* eslint-disable no-unused-vars */
    serialize: function serialize(snapshot, options) {
      var data = this._super.apply(this, arguments);
      delete data.СommentsCount;
      return data;
    },

    /* eslint-enable no-unused-vars */

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-toggler-example-detail', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      togglerExampleMaster: { serialize: 'odata-id', deserialize: 'records' }
    },

    /* eslint-disable no-unused-vars */
    serialize: function serialize(snapshot, options) {
      var data = this._super.apply(this, arguments);
      return data;
    },

    /* eslint-enable no-unused-vars */

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-toggler-example-master', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      togglerExampleDetail: { serialize: false, deserialize: 'records' }
    },

    /* eslint-disable no-unused-vars */
    serialize: function serialize(snapshot, options) {
      var data = this._super.apply(this, arguments);
      return data;
    },

    /* eslint-enable no-unused-vars */

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/ember-flexberry-dummy-vote', ['exports', 'dummy/serializers/application'], function (exports, _application) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _application.default.extend({
    attrs: {
      author: { serialize: 'odata-id', deserialize: 'records' },
      suggestion: { serialize: 'odata-id', deserialize: 'records' }
    },

    /**
      Property name in which object identifier is kept.
     */
    primaryKey: '__PrimaryKey'
  });
});
define('dummy/serializers/flexberry-adv-limit', ['exports', 'ember-flexberry/serializers/flexberry-adv-limit'], function (exports, _flexberryAdvLimit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryAdvLimit.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity-offline'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsAuditEntityOffline) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsAuditEntityOffline.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsAuditEntity) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsAuditEntity.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field-offline'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsAuditFieldOffline) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsAuditFieldOffline.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsAuditField) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsAuditField.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type-offline'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsObjectTypeOffline) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsObjectTypeOffline.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsObjectType) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsObjectType.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent-offline'], function (exports, _iCSSoftSTORMNETSecurityAgentOffline) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETSecurityAgentOffline.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent'], function (exports, _iCSSoftSTORMNETSecurityAgent) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETSecurityAgent.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group'], function (exports, _iCSSoftSTORMNETSecurityLinkGroup) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETSecurityLinkGroup.default;
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-session', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-session'], function (exports, _iCSSoftSTORMNETSecuritySession) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETSecuritySession.default;
    }
  });
});
define('dummy/serializers/i-i-s-caseberry-logging-objects-application-log', ['exports', 'ember-flexberry/serializers/i-i-s-caseberry-logging-objects-application-log'], function (exports, _iISCaseberryLoggingObjectsApplicationLog) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iISCaseberryLoggingObjectsApplicationLog.default;
    }
  });
});
define('dummy/serializers/new-platform-flexberry-flexberry-user-setting', ['exports', 'ember-flexberry/serializers/new-platform-flexberry-flexberry-user-setting'], function (exports, _newPlatformFlexberryFlexberryUserSetting) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _newPlatformFlexberryFlexberryUserSetting.default;
    }
  });
});
define('dummy/serializers/new-platform-flexberry-services-lock', ['exports', 'ember-flexberry/serializers/new-platform-flexberry-services-lock'], function (exports, _newPlatformFlexberryServicesLock) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _newPlatformFlexberryServicesLock.default;
    }
  });
});
define('dummy/serializers/odata', ['exports', 'ember-flexberry-data/serializers/odata'], function (exports, _odata) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _odata.default;
    }
  });
});
define('dummy/serializers/offline', ['exports', 'ember-flexberry-data/serializers/offline'], function (exports, _offline) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _offline.default;
    }
  });
});
define('dummy/services/adv-limit', ['exports', 'ember-flexberry/services/adv-limit'], function (exports, _advLimit) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _advLimit.default;
});
define('dummy/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _ajax.default;
    }
  });
});
define('dummy/services/app-state', ['exports', 'ember-flexberry/services/app-state'], function (exports, _appState) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _appState.default;
    }
  });
});
define('dummy/services/cols-config-menu', ['exports', 'ember-flexberry/services/cols-config-menu', 'dummy/config/environment'], function (exports, _colsConfigMenu, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var environment = Ember.get(_environment.default, 'environment');
  _colsConfigMenu.default.reopen({
    environment: environment
  });

  exports.default = _colsConfigMenu.default;
});
define('dummy/services/detail-interaction', ['exports', 'ember-flexberry/services/detail-interaction'], function (exports, _detailInteraction) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _detailInteraction.default;
});
define('dummy/services/device', ['exports', 'ember-flexberry/services/device'], function (exports, _device) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _device.default;
    }
  });
});
define('dummy/services/dexie', ['exports', 'ember-flexberry-data/services/dexie'], function (exports, _dexie) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _dexie.default;
    }
  });
});
define('dummy/services/form-load-time-tracker', ['exports', 'ember-flexberry/services/form-load-time-tracker'], function (exports, _formLoadTimeTracker) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _formLoadTimeTracker.default;
    }
  });
});
define('dummy/services/i18n', ['exports', 'ember-i18n/services/i18n'], function (exports, _i18n) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _i18n.default;
    }
  });
});
define('dummy/services/log', ['exports', 'ember-flexberry/services/log'], function (exports, _log) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _log.default;
    }
  });
});
define('dummy/services/lookup-events', ['exports', 'ember-flexberry/services/lookup-events'], function (exports, _lookupEvents) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _lookupEvents.default;
});
define('dummy/services/moment', ['exports', 'ember-moment/services/moment', 'dummy/config/environment'], function (exports, _moment, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var get = Ember.get;
  exports.default = _moment.default.extend({
    defaultFormat: get(_environment.default, 'moment.outputFormat')
  });
});
define('dummy/services/objectlistview-events', ['exports', 'ember-flexberry/services/objectlistview-events'], function (exports, _objectlistviewEvents) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _objectlistviewEvents.default;
});
define('dummy/services/offline-globals', ['exports', 'ember-flexberry/services/offline-globals'], function (exports, _offlineGlobals) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _offlineGlobals.default;
});
define('dummy/services/perf', ['exports', 'ember-flexberry/services/perf', 'dummy/config/environment'], function (exports, _perf, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var enabled = Ember.get(_environment.default, 'APP.perf.enabled');
  if (Ember.typeOf(enabled) === 'boolean') {
    _perf.default.reopen({
      enabled: enabled
    });
  }

  exports.default = _perf.default;
});
define('dummy/services/store', ['exports', 'ember-flexberry-data/stores/online-store', 'ember-flexberry-data/mixins/store'], function (exports, _onlineStore, _store) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _onlineStore.default.reopen(_store.default);
});
define('dummy/services/syncer', ['exports', 'ember-flexberry-data/services/syncer'], function (exports, _syncer) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _syncer.default;
    }
  });
});
define('dummy/services/user-settings', ['exports', 'ember-flexberry/services/user-settings', 'dummy/config/environment'], function (exports, _userSettings, _environment) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });


  var enabled = Ember.get(_environment.default, 'APP.useUserSettingsService');
  var appName = Ember.get(_environment.default, 'APP.name');
  if (Ember.typeOf(enabled) === 'boolean') {
    _userSettings.default.reopen({
      isUserSettingsServiceEnabled: enabled,
      appName: appName
    });
  }

  exports.default = _userSettings.default;
});
define('dummy/services/user', ['exports', 'ember-flexberry-data/services/user'], function (exports, _user) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _user.default.extend({
    /**
      @property userName
      @type String
      @default 'admin'
      @for _userSettingsService
    **/
    userName: 'admin',

    /**
      Returns current user name.
      Method must be overridden if application uses some authentication.
       @method getCurrentUserName
      @return {String} Current user name.
    */
    getCurrentUserName: function getCurrentUserName() {
      var user = this.get('userName');
      return user;
    }
  });
});
define("dummy/templates/advlimit-dialog-content", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "lv+4UQC3", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"advlimit-dialog-content\",null,[[\"model\",\"close\",\"message\"],[[22,[\"model\"]],[26,\"action\",[[21,0,[]],\"closeModalDialog\"],null],[22,[\"message\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/advlimit-dialog-content.hbs" } });
});
define("dummy/templates/advlimit-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "MtHBTQPa", "block": "{\"symbols\":[],\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"sizeClass\",\"close\",\"created\",\"useOkButton\",\"useCloseButton\"],[[22,[\"title\"]],\"small\",\"removeModalDialog\",\"createdModalDialog\",false,false]],{\"statements\":[[0,\"  \"],[1,[26,\"outlet\",[\"modal-content\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/advlimit-dialog.hbs" } });
});
define("dummy/templates/application-with-submenu", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "C9dFBwbC", "block": "{\"symbols\":[],\"statements\":[[4,\"flexberry-sidebar\",null,[[\"class\"],[\"inverted vertical main menu\"]],{\"statements\":[[0,\"  \"],[6,\"a\"],[10,\"class\",\"item\"],[10,\"href\",\"https://github.com/flexberry\"],[10,\"target\",\"_blank\"],[11,\"title\",[26,\"t\",[\"forms.application.sitemap.application-name.title\"],null],null],[8],[0,\"\\n    \"],[6,\"img\"],[10,\"class\",\"ui centered image\"],[10,\"src\",\"assets/images/flexberry-logo.png\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"a\"],[10,\"class\",\"item\"],[11,\"href\",[20,\"addonVersionHref\"],null],[10,\"target\",\"_blank\"],[11,\"title\",[26,\"t\",[\"forms.application.sitemap.application-version.title\"],null],null],[8],[0,\"\\n    \"],[1,[26,\"t\",[\"forms.application.sitemap.application-version.caption\"],[[\"version\"],[[22,[\"addonVersion\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[1,[26,\"flexberry-sitemap\",null,[[\"sitemap\"],[[22,[\"sitemap\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[6,\"div\"],[10,\"id\",\"example-with-submenu\"],[10,\"class\",\"pusher\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"full height\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui fixed main menu\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"ui container\"],[8],[0,\"\\n        \"],[6,\"a\"],[10,\"class\",\"launch icon item\"],[3,\"action\",[[21,0,[]],\"toggleSidebar\"]],[8],[0,\"\\n          \"],[6,\"i\"],[10,\"class\",\"sidebar icon\"],[8],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"right menu\"],[8],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui main container segment flexberry-content\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"ui close left rail\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui sticky transition visible\"],[8],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"flexberry-submenu ui large violet pointing secondary vertical following fluid menu\"],[8],[0,\"\\n            \"],[1,[26,\"flexberry-sitemap\",null,[[\"sitemap\"],[[22,[\"sitemap\"]]]]],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[1,[20,\"outlet\"],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"ui main container\"],[8],[0,\"\\n  \"],[1,[26,\"outlet\",[\"modal\"],null],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/application-with-submenu.hbs" } });
});
define("dummy/templates/application", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "wkac2u1H", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"isInAcceptanceTestMode\"]]],null,{\"statements\":[[0,\"  \"],[1,[20,\"outlet\"],false],[0,\"\\n  \"],[1,[26,\"outlet\",[\"modal\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"flexberry-sidebar\",null,[[\"class\",\"settings\"],[\"inverted vertical main menu visible\",[26,\"hash\",null,[[\"closable\",\"dimPage\",\"onShow\",\"onHidden\"],[false,false,[26,\"action\",[[21,0,[]],\"updateWidth\"],null],[26,\"action\",[[21,0,[]],\"updateWidth\"],null]]]]]],{\"statements\":[[0,\"\\n    \"],[1,[26,\"flexberry-sitemap-guideline\",null,[[\"sitemap\",\"class\"],[[22,[\"sitemap\"]],\"flexberry-sitemap\"]]],false],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sitebar-footer\"],[8],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"item\"],[11,\"href\",[20,\"addonVersionHref\"],null],[10,\"target\",\"_blank\"],[11,\"title\",[26,\"t\",[\"forms.application.sitemap.application-version.title\"],null],null],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.application.sitemap.application-version.caption\"],[[\"version\"],[[22,[\"addonVersion\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"item\"],[11,\"title\",[26,\"t\",[\"forms.support-form.caption\"],null],null],[3,\"action\",[[21,0,[]],\"showModalSupport\"]],[8],[1,[26,\"t\",[\"forms.support-form.caption\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n\"]],\"parameters\":[]},null],[0,\"  \"],[6,\"div\"],[10,\"class\",\"bgw-fix\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"background-logo\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"ui top attached\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui attached menu\"],[8],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"ui container flex-container\"],[8],[0,\"\\n            \"],[6,\"a\"],[10,\"class\",\"launch icon item\"],[11,\"title\",[26,\"t\",[\"forms.application.header.menu.sitemap-button.title\"],null],null],[3,\"action\",[[21,0,[]],\"toggleSidebar\"]],[8],[0,\"\\n              \"],[6,\"i\"],[10,\"class\",\"sidebar icon text-menu-hide\"],[8],[0,\"\\n                \"],[6,\"span\"],[10,\"class\",\"text_menu hidden\"],[8],[0,\"\\n                  \"],[1,[26,\"t\",[\"forms.application.header.menu.show-menu.caption\"],null],false],[0,\"\\n                \"],[9],[0,\"\\n                \"],[6,\"span\"],[10,\"class\",\"text_menu hidden-text\"],[8],[0,\"\\n                  \"],[1,[26,\"t\",[\"forms.application.header.menu.hide-menu.caption\"],null],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"item logo\"],[10,\"href\",\"https://github.com/flexberry\"],[10,\"target\",\"_blank\"],[11,\"title\",[26,\"t\",[\"forms.application.sitemap.application-name.title\"],null],null],[8],[0,\"\\n        \"],[6,\"img\"],[10,\"class\",\"ui centered image\"],[10,\"src\",\"assets/images/flexberry-logo.png\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"page-header-caption\"],[10,\"href\",\"https://github.com/flexberry\"],[8],[0,\"\\n        \"],[6,\"span\"],[10,\"class\",\"page-header-caption-app-name\"],[8],[1,[26,\"t\",[\"application-name\"],null],false],[9],[0,\"\\n        \"],[6,\"span\"],[10,\"class\",\"page-header-caption-logo\"],[8],[1,[26,\"t\",[\"forms.application.sitemap.application-version.caption\"],[[\"version\"],[[22,[\"addonVersion\"]]]]],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"page-header-actions ui text menu\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"item\"],[11,\"title\",[26,\"t\",[\"forms.application.header.menu.user-settings-service-checkbox.title\"],null],null],[8],[0,\"\\n          \"],[6,\"label\"],[10,\"style\",\"margin-right: 5px;\"],[8],[0,\"\\n            \"],[1,[26,\"t\",[\"forms.application.header.menu.user-settings-service-checkbox.caption\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[1,[26,\"flexberry-checkbox\",null,[[\"class\",\"value\"],[\"toggle\",[22,[\"userSettingsService\",\"isUserSettingsServiceEnabled\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"item lang\"],[8],[0,\"\\n          \"],[6,\"label\"],[10,\"style\",\"margin-right: 5px;\"],[8],[0,\"\\n            \"],[1,[26,\"t\",[\"forms.application.header.menu.language-dropdown.caption\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n          \"],[1,[26,\"flexberry-dropdown\",null,[[\"class\",\"items\",\"value\",\"placeholder\"],[\"compact\",[22,[\"locales\"]],[22,[\"i18n\",\"locale\"]],[26,\"t\",[\"forms.application.header.menu.language-dropdown.placeholder\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n      \"],[6,\"div\"],[10,\"class\",\"page-header-userbar\"],[8],[0,\"\\n        \"],[6,\"img\"],[10,\"src\",\"assets/images/user-foto.jpg\"],[8],[9],[0,\"\\n        \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"onItemClick\"],[[22,[\"itemsUserMenu\"]],[26,\"action\",[[21,0,[]],\"onMenuItemClick\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"id\",\"example\"],[10,\"class\",\"pusher\"],[8],[0,\"\\n    \"],[6,\"div\"],[11,\"class\",[27,[\"ui form \",[22,[\"appState\",\"state\"]]]]],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"bgw-opacity hidden\"],[8],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"full height\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"flexberry-content ui attached segment\"],[8],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"ui main container\"],[8],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"stackable grid container\"],[8],[0,\"\\n              \"],[1,[20,\"outlet\"],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui main container\"],[8],[0,\"\\n    \"],[1,[26,\"outlet\",[\"modal\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/application.hbs" } });
});
define("dummy/templates/colsconfig-dialog-content", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Mi9O+5FC", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"colsconfig-dialog-content\",null,[[\"model\",\"close\",\"type\",\"closeable\",\"visible\",\"caption\",\"message\"],[[22,[\"model\"]],[26,\"action\",[[21,0,[]],\"sortByColumnsConfig\"],null],[22,[\"message\",\"type\"]],true,[22,[\"message\",\"visible\"]],[22,[\"message\",\"caption\"]],[22,[\"message\",\"message\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/colsconfig-dialog-content.hbs" } });
});
define("dummy/templates/colsconfig-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "+hwKvaGQ", "block": "{\"symbols\":[],\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"sizeClass\",\"close\",\"created\",\"useOkButton\",\"useCloseButton\",\"useSidePageMode\",\"componentName\"],[[26,\"if\",[[22,[\"model\",\"exportParams\",\"isExportExcel\"]],[26,\"t\",[\"components.colsconfig-dialog-content.export-modal-dialog-title\"],null],[26,\"t\",[\"components.colsconfig-dialog-content.title\"],null]],null],\"small\",\"removeModalDialog\",\"createdModalDialog\",false,false,[22,[\"model\",\"useSidePageMode\"]],[22,[\"model\",\"componentName\"]]]],{\"statements\":[[0,\"  \"],[1,[26,\"outlet\",[\"modal-content\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/colsconfig-dialog.hbs" } });
});
define("dummy/templates/components-acceptance-tests/edit-form-readonly", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "jLrWOvx0", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.caption\"],null],false],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"not-in-groupedit\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"flag\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-textbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"text\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-textarea\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"longText\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"datetime-local\",[22,[\"model\",\"time\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\",\"readonly\"],[[26,\"flexberry-enum\",[\"integration-examples/edit-form/readonly-mode/enumeration\"],null],[22,[\"model\",\"enumeration\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-file\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"file\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\"],[[22,[\"model\",\"master\"]],[22,[\"model\"]],\"master\",\"MasterL\",\"text\",[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.master-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\"],[[22,[\"model\",\"masterDropdown\"]],[22,[\"model\"]],\"masterDropdown\",\"MasterDropdownL\",\"text\",[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.master-dropdown-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"in-groupedit\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"readonly\",\"showDeleteButtonInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\"],[\"aggregatorDetailsGroupedit\",[22,[\"model\",\"details\"]],[22,[\"modelProjection\",\"attributes\",\"details\"]],[22,[\"readonly\"]],true,true,true]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/edit-form-readonly.hbs" } });
});
define("dummy/templates/components-acceptance-tests/edit-form-validation/validation", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "ZWsGtYv+", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"flag\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.flag-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\"],[[22,[\"model\",\"flag\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"flag\"],null],\"messages\"],null],\"left pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"number\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.number-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-textbox\",null,[[\"value\"],[[22,[\"model\",\"number\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"number\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.text-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-textbox\",null,[[\"value\"],[[22,[\"model\",\"text\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"longText\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n  \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.long-text-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-textarea\",null,[[\"value\"],[[22,[\"model\",\"longText\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"longText\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.date-caption\"],null],false],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"inline fields\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"messages\"],null],\"right pointing\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\"],[\"date\",[22,[\"model\",\"date\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"enumeration\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.enumeration-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\"],[[26,\"flexberry-enum\",[\"integration-examples/edit-form/validation/enumeration\"],null],[22,[\"model\",\"enumeration\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"enumeration\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"file\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.file-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-file\",null,[[\"value\",\"showUploadButton\",\"showDownloadButton\"],[[22,[\"model\",\"file\"]],false,false]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"file\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"master\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.master-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"componentName\",\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\"],[\"IntegrationExamplesValidationsMaster\",[22,[\"model\",\"master\"]],[22,[\"model\"]],\"master\",\"MasterL\",\"text\",[26,\"t\",[\"forms.integration-examples.edit-form.validation.master-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"master\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.details-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\"],[\"IntegrationExamplesEditFormValidationsDetails\",[22,[\"model\",\"details\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"details\"]],false]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/edit-form-validation/validation.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "sYDL8yvB", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"address\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"address\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.address-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"address\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.date-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"type\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\",\"direction\",\"componentName\"],[[22,[\"model\",\"type\"]],[22,[\"model\"]],\"type\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]],\"upward\",\"SuggestionEditType\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"type\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.files-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"filesGroupEdit\",[22,[\"model\",\"files\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"files\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"files\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"userVotes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.comments-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"suggestionCommentsGroupEdit\",[22,[\"model\",\"comments\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"comments\"]],true,\"rowClick\",true,[22,[\"commentsEditRoute\"]],true,true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"comments\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-edit-with-checked-checkbox.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-list-with-checked-checkbox", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "j+bDnHok", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],true,true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionObjectListView\",true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-checkbox/ember-flexberry-dummy-suggestion-list-with-checked-checkbox.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-groupedit/properly-rerenders", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "DpMrIuTG", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-groupedit\",null,[[\"content\",\"componentName\",\"modelProjection\",\"searchForContentChange\"],[[22,[\"model\",\"details\"]],\"my-test-component-to-count-rerender\",[22,[\"modelProjection\",\"attributes\",\"details\"]],true]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-groupedit/properly-rerenders.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/base-operations", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "mxRaziea", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-lookup\",null,[[\"componentName\",\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"choose\",\"remove\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"lookupLimitPredicate\"],[[22,[\"componentName\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"type\"]],[22,[\"projection\"]],[22,[\"displayAttributeName\"]],[22,[\"title\"]],[22,[\"model\"]],[22,[\"relationName\"]],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],[22,[\"lookupLimitPredicate\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/base-operations.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-actions", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "pX6pNXhl", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-lookup\",null,[[\"componentName\",\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"lookupLimitPredicate\",\"choose\",\"remove\"],[[22,[\"componentName\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"type\"]],[22,[\"projection\"]],[22,[\"displayAttributeName\"]],[22,[\"title\"]],[22,[\"model\"]],[22,[\"relationName\"]],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],[22,[\"lookupLimitPredicate\"]],[26,\"action\",[[21,0,[]],\"externalChooseAction\"],null],[26,\"action\",[[21,0,[]],\"externalRemoveAction\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-actions.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-autocomplete", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "CljNCzaH", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-lookup\",null,[[\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"choose\",\"remove\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"autocomplete\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"type\"]],\"SettingLookupExampleView\",\"name\",[22,[\"title\"]],[22,[\"model\"]],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],true]]],false],[0,\"\\n\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-autocomplete.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-autofill-by-limit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "5lOl2/b2", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"field base isreadonly\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupLimitPredicate\",\"autocomplete\",\"autofillByLimit\"],[[22,[\"model\",\"readonly\",\"type\"]],[22,[\"model\",\"readonly\"]],\"LookupWithLimitFunctionExampleView\",\"id\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.autofill-by-limit-example.titleLookup\"],null],\"type\",\"showLookupDialog\",\"removeLookupValue\",true,[22,[\"lookupCustomLimitPredicate\"]],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field base isclean\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupLimitPredicate\",\"autocomplete\",\"autofillByLimit\"],[[22,[\"model\",\"base\",\"type\"]],[22,[\"model\",\"base\"]],\"LookupWithLimitFunctionExampleView\",\"id\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.autofill-by-limit-example.titleLookup\"],null],\"type\",\"showLookupDialog\",\"removeLookupValue\",[22,[\"readonly\"]],[22,[\"lookupCustomLimitPredicate\"]],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field exist\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupLimitPredicate\",\"autocomplete\",\"autofillByLimit\"],[[22,[\"model\",\"exist\",\"type\"]],[22,[\"model\",\"exist\"]],\"LookupWithLimitFunctionExampleView\",\"id\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.autofill-by-limit-example.titleLookup\"],null],\"type\",\"showLookupDialog\",\"removeLookupValue\",[22,[\"readonly\"]],[22,[\"lookupCustomLimitPredicate\"]],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-autofill-by-limit.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-dropdown", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "szCsqb6n", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-lookup\",null,[[\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"choose\",\"remove\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"dropdown\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"type\"]],\"SettingLookupExampleView\",\"name\",[22,[\"title\"]],[22,[\"model\"]],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],true]]],false],[0,\"\\n\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-dropdown.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-limit-function", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "eZIf0Yp3", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-through-dynamic-properties-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"autocomplete\",\"dynamicProperties\"],[[22,[\"model\",\"type\"]],\"SettingLookupExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-example.titleLookup\"],null],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],true,[22,[\"dynamicProperties\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"br\"],[8],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button limitFunction\"],[3,\"action\",[[21,0,[]],\"limitFunction\"],[[\"on\"],[\"click\"]]],[8],[0,\"\\n    \"],[1,[26,\"concat\",[[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-through-dynamic-properties-example.captionFirstLimitFunction\"],null],\": \",[22,[\"limitType\"]]],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-limit-function.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-preview-page", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "o7cLFW1H", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[0,\"-->\"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-preview-page.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-preview", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "+n0B8O15", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"in-modal\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-lookup\",null,[[\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"showPreviewButton\",\"previewFormRoute\",\"choose\",\"remove\",\"preview\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"previewButtonClass\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"author\"]],\"PreviewExampleView\",\"name\",[22,[\"title\"]],[22,[\"model\"]],\"author\",true,\"components-acceptance-tests/flexberry-lookup/settings-example-preview-page\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],[22,[\"previewButtonClass\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"in-separate-route\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-lookup\",null,[[\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"showPreviewButton\",\"previewOnSeparateRoute\",\"previewFormRoute\",\"choose\",\"remove\",\"preview\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"previewButtonClass\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"editor1\"]],\"PreviewExampleView\",\"name\",[22,[\"title\"]],[22,[\"model\"]],\"editor1\",true,true,\"components-acceptance-tests/flexberry-lookup/settings-example-preview-page\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],[22,[\"previewButtonClass\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"in-groupedit\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"readonly\",\"createNewButton\",\"deleteButton\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],[22,[\"readonly\"]],false,false]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-preview.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-projection", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "wBYVkNPT", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-lookup\",null,[[\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"choose\",\"remove\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"lookupLimitPredicate\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"type\"]],\"SuggestionTypeE\",\"name\",[22,[\"title\"]],[22,[\"model\"]],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],[22,[\"lookupLimitPredicate\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-projection.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-relation-name", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "h314O+4K", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-lookup\",null,[[\"componentName\",\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"choose\",\"remove\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"lookupLimitPredicate\"],[[22,[\"componentName\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"type\"]],[22,[\"projection\"]],[22,[\"displayAttributeName\"]],[22,[\"title\"]],[22,[\"model\"]],[22,[\"relationName\"]],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],[22,[\"lookupLimitPredicate\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example-relation-name.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "095zrUiy", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-lookup\",null,[[\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"choose\",\"remove\",\"autocomplete\",\"dropdown\",\"chooseText\",\"removeText\",\"chooseButtonClass\",\"removeButtonClass\",\"lookupLimitPredicate\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"type\"]],\"SettingLookupExampleView\",\"name\",[22,[\"title\"]],[22,[\"model\"]],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"dropdown\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],[22,[\"lookupLimitPredicate\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-lookup/settings-example.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-objectlistview/base-operations", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Vnz9qFrj", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\",\"rowClickable\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"FOLVSettingExampleObjectListView\",true,true,[22,[\"rowClickable\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-objectlistview/base-operations.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-objectlistview/computable-field", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "f5+XaMzw", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\",\"rowClickable\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"FOLVSettingExampleObjectListView\",true,true,[22,[\"rowClickable\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-objectlistview/computable-field.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-objectlistview/custom-filter", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "CduQ8NRY", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.custom-filter.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"enableFilters\",\"filters\",\"applyFilters\",\"resetFilters\",\"componentForFilter\",\"conditionsByType\",\"filterButton\",\"filterText\",\"filterByAnyWord\",\"filterByAllWords\",\"filterByAnyMatch\",\"beforeDeleteAllRecords\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"colsConfigButton\",\"componentName\",\"customButtons\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,true,[22,[\"filters\"]],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[26,\"action\",[[21,0,[]],\"componentForFilter\"],null],[26,\"action\",[[21,0,[]],\"conditionsByType\"],null],true,[22,[\"filter\"]],[22,[\"filterByAnyWord\"]],[22,[\"filterByAllWords\"]],[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],false,\"FOLVCustomFilterObjectListView\",[22,[\"customButtons\"]],\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-objectlistview/custom-filter.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-objectlistview/date-format", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "e41vvdRg", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\",\"rowClickable\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionTypeObjectListView\",true,true,[22,[\"rowClickable\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-objectlistview/date-format.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-objectlistview/folv-filter", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "XhPDvJfD", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"modelName\",\"modelProjection\",\"content\",\"refreshButton\",\"orderable\",\"colsConfigButton\",\"rowClickable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"enableFilters\",\"filters\",\"applyFilters\",\"resetFilters\"],[[22,[\"editFormRoute\"]],[22,[\"modelName\"]],[22,[\"modelProjection\"]],[22,[\"model\"]],[22,[\"refreshButton\"]],[22,[\"orderable\"]],[22,[\"colsConfigButton\"]],[22,[\"rowClickable\"]],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"FOLVSettingExampleObjectListView\",true,[22,[\"filters\"]],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-objectlistview/folv-filter.hbs" } });
});
define("dummy/templates/components-acceptance-tests/flexberry-objectlistview/folv-paging", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "imJiul6g", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"showDeleteButtonInRow\",\"showEditButtonInRow\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\",\"rowClickable\",\"useRowByRowLoading\"],[[22,[\"editFormRoute\"]],true,[22,[\"modelName\"]],[22,[\"modelProjection\"]],[22,[\"model\"]],true,true,[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditButtonInRow\"]],[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"FOLVPagingObjectListView\",true,true,[22,[\"rowClickable\"]],false]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-acceptance-tests/flexberry-objectlistview/folv-paging.hbs" } });
});
define("dummy/templates/components-examples/flexberry-button/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "cU5qleY2", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-button.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-button\",null,[[\"class\",\"iconClass\",\"caption\",\"tooltip\",\"readonly\",\"click\"],[[22,[\"class\"]],[22,[\"iconClass\"]],[22,[\"caption\"]],[22,[\"tooltip\"]],[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"onButtonClick\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-button/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-checkbox/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "5izmeEPp", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-checkbox.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"label\",\"readonly\",\"class\"],[[22,[\"model\",\"flag\"]],[22,[\"label\"]],[22,[\"readonly\"]],[22,[\"class\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-checkbox/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-datepicker/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "+RzPsLmL", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-datepicker.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-datepicker\",null,[[\"dateTimeFormat\",\"hasTimePicker\",\"minDate\",\"maxDate\",\"value\",\"placeholder\",\"readonly\",\"drops\"],[[22,[\"dateTimeFormat\"]],[22,[\"hasTimePicker\"]],[22,[\"minDate\"]],[22,[\"maxDate\"]],[22,[\"model\",\"date\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],\"up\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-datepicker/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-ddau-checkbox/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "xI0iWtOl", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-ddau-checkbox.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-ddau-checkbox\",null,[[\"class\",\"value\",\"caption\",\"readonly\",\"change\"],[[22,[\"class\"]],[22,[\"model\",\"flag\"]],[22,[\"caption\"]],[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"onCheckboxChange\",\"model.flag\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-ddau-checkbox/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-dropdown/conditional-render-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "UYCeA/hT", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-dropdown.conditional-render-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"icon\",\"title\",\"message\"],[\"info\",false,true,\"info circle icon\",[26,\"t\",[\"forms.components-examples.flexberry-dropdown.conditional-render-example.info-caption\"],null],[22,[\"infoMessage\"]]]]],false],[0,\"\\n    \"],[6,\"br\"],[8],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"enumeration\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[8],[1,[22,[\"model\",\"enumeration\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\"],[[26,\"flexberry-enum\",[\"components-examples/flexberry-dropdown/conditional-render-example/enumeration\"],null],[22,[\"model\",\"enumeration\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-dropdown/conditional-render-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-dropdown/empty-value-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "PjR28y9V", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-dropdown.empty-value-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui info message\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[0,\"\\n    \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-dropdown.empty-value-example.message\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\"],[[26,\"flexberry-enum\",[\"components-examples/flexberry-dropdown/empty-value-example/enumeration\"],null],\"Enum value №2\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-dropdown/empty-value-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-dropdown/items-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "4FyI4JHP", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-dropdown.items-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"icon\",\"title\",\"message\"],[\"info\",false,true,\"info circle icon\",[26,\"t\",[\"forms.components-examples.flexberry-dropdown.items-example.info-caption\"],null],[22,[\"message\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"class\",\"onChange\",\"label\"],[[26,\"concat\",[[26,\"if\",[[22,[\"value\"]],\"disabled\"],null],\" toggle\"],null],[26,\"action\",[[21,0,[]],\"checked\"],null],[26,\"t\",[\"forms.components-examples.flexberry-dropdown.items-example.checkbox-caption\"],null]]]],false],[0,\"\\n\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui action fluid input\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"placeholder\",\"readonly\",\"class\",\"value\"],[[22,[\"currentItems\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],\"fluid\",[22,[\"value\"]]]]],false],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button icon\"],[3,\"action\",[[21,0,[]],\"resetValue\"]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"large remove circle icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-dropdown/items-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-dropdown/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "yPrhDvcE", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-dropdown.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\",\"placeholder\",\"readonly\",\"class\"],[[26,\"flexberry-enum\",[\"components-examples/flexberry-dropdown/settings-example/enumeration\"],null],[22,[\"model\",\"enumeration\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"class\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-dropdown/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-field/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "YL/25a/l", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-field.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-field\",null,[[\"class\",\"value\",\"label\",\"placeholder\",\"readonly\",\"type\",\"maxlength\"],[[22,[\"class\"]],[22,[\"model\",\"text\"]],[22,[\"label\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"type\"]],[22,[\"maxlength\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-field/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-file/flexberry-file-in-modal", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "+UmDSXJx", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.caption\"],null],false],[9],[0,\"\\n\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"modalWindow\",\"#example\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonModal\"],null],false],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"ui modal repeat-window hidden\"],[8],[0,\"\\n  \"],[6,\"i\"],[10,\"class\",\"close icon\"],[8],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.captionModal\"],null],false],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-file\",null,[[\"value\",\"placeholder\",\"readonly\",\"uploadUrl\",\"maxUploadFileSize\",\"showPreview\",\"showUploadButton\",\"showDownloadButton\",\"showModalDialogOnUploadError\",\"showModalDialogOnDownloadError\",\"inputClass\",\"buttonClass\",\"previewSettings\"],[[22,[\"model\",\"file\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"uploadUrl\"]],[22,[\"maxUploadFileSize\"]],[22,[\"showPreview\"]],[22,[\"showUploadButton\"]],[22,[\"showDownloadButton\"]],[22,[\"showModalDialogOnUploadError\"]],[22,[\"showModalDialogOnDownloadError\"]],[22,[\"inputClass\"]],[22,[\"buttonClass\"]],[22,[\"previewSettings\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"logOut\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonClose\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-file/flexberry-file-in-modal.hbs" } });
});
define("dummy/templates/components-examples/flexberry-file/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "tJ8nhg9Z", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-file.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-file\",null,[[\"value\",\"placeholder\",\"readonly\",\"uploadUrl\",\"maxUploadFileSize\",\"showPreview\",\"showUploadButton\",\"showDownloadButton\",\"showModalDialogOnUploadError\",\"showModalDialogOnDownloadError\",\"inputClass\",\"buttonClass\",\"openFileInNewWindowInsteadOfLoading\",\"base64Value\",\"base64FileName\",\"base64FileExtension\"],[[22,[\"model\",\"file\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"uploadUrl\"]],[22,[\"maxUploadFileSize\"]],[22,[\"showPreview\"]],[22,[\"showUploadButton\"]],[22,[\"showDownloadButton\"]],[22,[\"showModalDialogOnUploadError\"]],[22,[\"showModalDialogOnDownloadError\"]],[22,[\"inputClass\"]],[22,[\"buttonClass\"]],[22,[\"openFileInNewWindowInsteadOfLoading\"]],[22,[\"base64Value\"]],[22,[\"base64FileName\"]],[22,[\"base64FileExtension\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-file/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-groupedit/configurate-row-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "vvRTitN3", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-groupedit.configurate-row-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"placeholder\",\"readonly\",\"allowColumnResize\",\"createNewButton\",\"deleteButton\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"rowClickable\",\"immediateDelete\",\"editOnSeperateRoute\",\"searchForContentChange\",\"orderable\",\"configurateRow\"],[\"aggregatorDetailsGroupedit\",[22,[\"model\",\"details\"]],[22,[\"modelProjection\",\"attributes\",\"details\"]],[22,[\"placeholder\"]],false,false,true,true,true,true,true,false,false,false,[22,[\"searchForContentChange\"]],false,[26,\"action\",[[21,0,[]],\"configurateRow\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-groupedit/configurate-row-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-groupedit/custom-buttons-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "AW6OlLiH", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-groupedit.custom-buttons-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"placeholder\",\"readonly\",\"allowColumnResize\",\"createNewButton\",\"deleteButton\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"rowClickable\",\"immediateDelete\",\"editOnSeperateRoute\",\"searchForContentChange\",\"orderable\",\"readonly\",\"customButtons\",\"customButtonActionTest\",\"toggleHideCustomButton\"],[\"aggregatorDetailsGroupedit\",[22,[\"model\",\"details\"]],[22,[\"modelProjection\",\"attributes\",\"details\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],false,false,false,true,true,true,false,false,false,[22,[\"searchForContentChange\"]],false,[22,[\"readonly\"]],[22,[\"customButtons\"]],[26,\"action\",[[21,0,[]],\"customButtonActionTest\"],null],[26,\"action\",[[21,0,[]],\"toggleHideCustomButton\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[1,[20,\"messageForUser\"],false],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-groupedit/custom-buttons-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-groupedit-with-lookup-with-computed-atribute", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "CAS0TdY1", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"address\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"address\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.address-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"address\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.date-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"type\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\",\"direction\",\"componentName\"],[[22,[\"model\",\"type\"]],[22,[\"model\"]],\"type\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]],\"upward\",\"SuggestionEditType\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"type\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.files-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"filesGroupEdit\",[22,[\"model\",\"files\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"files\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"files\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.readonly-groupedit-with-lookup-with-computed-atribute-field\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\"],[[22,[\"checkboxValue\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.limit-function-groupedit-with-lookup-with-computed-atribute-field\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\"],[[22,[\"fieldvalue\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"userVotes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.comments-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"suggestionCommentsGroupEdit\",[22,[\"model\",\"comments\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"comments\"]],true,\"rowClick\",true,[22,[\"commentsEditRoute\"]],true,true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"comments\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-groupedit-with-lookup-with-computed-atribute.hbs" } });
});
define("dummy/templates/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-readonly-columns-by-configurate-row-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "e0LnLxhW", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.application.sitemap.components-examples.flexberry-groupedit.readonly-columns-by-configurate-row-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"address\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"address\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.address-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"address\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.date-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"type\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\",\"direction\",\"componentName\"],[[22,[\"model\",\"type\"]],[22,[\"model\"]],\"type\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]],\"upward\",\"SuggestionEditType\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"type\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.files-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\",\"configurateRow\"],[\"filesGroupEdit\",[22,[\"model\",\"files\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"files\"]],true,[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"configurateFilesRow\"],null]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"files\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\",\"configurateRow\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],true,[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"configurateVotesRow\"],null]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"userVotes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.comments-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"suggestionCommentsGroupEdit\",[22,[\"model\",\"comments\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"comments\"]],true,\"rowClick\",true,[22,[\"commentsEditRoute\"]],true,true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"comments\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-edit-readonly-columns-by-configurate-row-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-groupedit-with-lookup-with-computed-atribute", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "oC3oIvhu", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"showEditMenuItemInRow\",\"deleteButton\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],false,true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionObjectListView\",true,true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-groupedit-with-lookup-with-computed-atribute.hbs" } });
});
define("dummy/templates/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-readonly-columns-by-configurate-row-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "bh4snfac", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.application.sitemap.components-examples.flexberry-groupedit.readonly-columns-by-configurate-row-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"showEditMenuItemInRow\",\"deleteButton\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],false,true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionObjectListView\",true,true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-groupedit/ember-flexberry-dummy-suggestion-list-readonly-columns-by-configurate-row-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-groupedit/model-update-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "AdBvqfcE", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-groupedit.model-update-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"button\"],[10,\"class\",\"ui button add-deteil\"],[3,\"action\",[[21,0,[]],\"addDetail\",[22,[\"record\"]]]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-groupedit.model-update-example.addDetailButton\"],null],false],[9],[0,\"\\n    \"],[6,\"button\"],[10,\"class\",\"ui button delete-deteil\"],[3,\"action\",[[21,0,[]],\"deleteDetail\",[22,[\"record\"]]]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-groupedit.model-update-example.removeDetailButton\"],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"placeholder\",\"readonly\",\"createNewButton\",\"deleteButton\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"rowClickable\",\"immediateDelete\",\"editOnSeperateRoute\",\"searchForContentChange\",\"orderable\",\"readonly\"],[\"aggregatorDetailsGroupedit\",[22,[\"model\",\"details\"]],[22,[\"modelProjection\",\"attributes\",\"details\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],true,true,true,true,true,false,false,false,[22,[\"searchForContentChange\"]],false,[22,[\"readonly\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-groupedit/model-update-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-groupedit/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "f6xZCa1A", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-groupedit.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]]]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"placeholder\",\"readonly\",\"tableStriped\",\"createNewButton\",\"deleteButton\",\"defaultSortingButton\",\"allowColumnResize\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\",\"useSingleColumn\",\"singleColumnHeaderTitle\",\"rowClickable\",\"immediateDelete\",\"orderable\",\"defaultSettingsButton\",\"fixedHeader\"],[\"aggregatorDetailsGroupedit\",[22,[\"model\",\"details\"]],[22,[\"detailsProjection\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"tableStriped\"]],[22,[\"createNewButton\"]],[22,[\"deleteButton\"]],[22,[\"defaultSortingButton\"]],[22,[\"allowColumnResize\"]],[22,[\"showAsteriskInRow\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditMenuItemInRow\"]],[22,[\"showDeleteMenuItemInRow\"]],[22,[\"useSingleColumn\"]],[22,[\"singleColumnHeaderTitle\"]],[22,[\"rowClickable\"]],[22,[\"immediateDelete\"]],true,[22,[\"defaultSettingsButton\"]],[22,[\"fixedHeader\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-groupedit/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/autocomplete-order-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "pKc9J7CX", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.autocomplete-order-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"autocompleteOrder\",\"title\",\"relatedModel\",\"relationName\",\"choose\",\"remove\",\"autocomplete\",\"placeholder\"],[[22,[\"readonly\"]],[22,[\"model\",\"type\"]],\"SettingLookupExampleView\",\"name\",\"moderated asc, parent desc\",[22,[\"title\"]],[22,[\"model\"]],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"placeholder\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/autocomplete-order-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/autofill-by-limit-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "6yVJPIHX", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.autofill-by-limit-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]]]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupLimitPredicate\",\"autofillByLimit\"],[[22,[\"model\",\"type\"]],\"LookupWithLimitFunctionExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.autofill-by-limit-example.titleLookup\"],null],\"type\",\"showLookupDialog\",\"removeLookupValue\",[22,[\"readonly\"]],[22,[\"lookupCustomLimitPredicate\"]],[22,[\"autofillByLimit\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/autofill-by-limit-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "cSHSWbEX", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[22,[\"model\",\"errors\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"name\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"name\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"moderated\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"moderated\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"parent\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.parent-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"title\",\"choose\",\"remove\",\"readonly\",\"autocomplete\",\"autocompleteProjection\",\"displayAttributeName\"],[[22,[\"model\",\"parent\"]],[22,[\"model\"]],\"parent\",\"SuggestionTypeEWithComputedField\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.parent-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],true,\"AutocompleteProjectionExampleView\",\"computedField\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"parent\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.localized-types-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"mainModelProjection\",\"content\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionTypeLocalizedTypesGroupEdit\",[22,[\"modelProjection\"]],[22,[\"model\",\"localizedTypes\"]],[22,[\"modelProjection\",\"attributes\",\"localizedTypes\"]],false,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"localizedTypes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "cEiql/lB", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"deleteButton\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showCheckBoxInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\",\"showDeleteButtonInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SOLVSuggestionTypeObjectListView\",true,true,true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/compute-autocomplete/compute-autocomplete-list.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/customizing-window-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "ebOaD7VO", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.customizing-window-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"limitFunction\",\"lookupWindowCustomProperties\"],[[22,[\"model\",\"type\"]],\"CustomizeLookupWindowExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.customizing-window-example.titleLookup\"],null],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],null,[26,\"action\",[[21,0,[]],\"getLookupFolvProperties\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/customizing-window-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/default-ordering-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "nhZLx+Q3", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.default-ordering-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"limitFunction\",\"lookupWindowCustomProperties\",\"componentName\"],[[22,[\"model\",\"type\"]],\"CustomizeLookupWindowExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.default-ordering-example.titleLookup\"],null],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],null,[26,\"action\",[[21,0,[]],\"getLookupFolvProperties\"],null],[22,[\"lookupComponentName\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/default-ordering-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/dropdown-mode-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "crs4pERI", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.dropdown-mode-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[6,\"label\"],[8],[0,\"dropdownIsSearch=true, minCharacters=0, dropdownSettings=(hash direction=\\\"downward\\\")\"],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupLimitPredicate\",\"dropdown\",\"dropdownIsSearch\",\"sorting\",\"minCharacters\"],[[22,[\"model\",\"type\"]],\"DropDownLookupExampleView\",\"name\",\"Master\",\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],[22,[\"lookupCustomLimitPredicate\"]],true,true,\"desc\",0]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[6,\"label\"],[8],[0,\"dropdownIsSearch=false, dropdownSettings=(hash direction=\\\"upward\\\")\"],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupLimitPredicate\",\"dropdown\",\"sorting\",\"dropdownSettings\"],[[22,[\"model\",\"type\"]],\"DropDownLookupExampleView\",\"name\",\"Master\",\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],[22,[\"lookupCustomLimitPredicate\"]],true,\"desc\",[26,\"hash\",null,[[\"direction\"],[\"upward\"]]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/dropdown-mode-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/hierarchy-olv-in-lookup-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "nSfn1MpC", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.hierarchy-olv-in-lookup-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"componentName\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupWindowCustomProperties\",\"lookupLimitPredicate\",\"autocomplete\"],[\"HierarchyLookup\",[22,[\"model\",\"type\"]],\"CustomizeLookupWindowExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.hierarchy-olv-in-lookup-example.titleLookup\"],null],\"type\",\"showLookupDialog\",\"removeLookupValue\",[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"getLookupFolvProperties\"],null],[22,[\"lookupCustomLimitPredicate\"]],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"componentName\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupWindowCustomProperties\",\"lookupLimitPredicate\",\"autocomplete\"],[\"NoHierarchyLookup\",[22,[\"model\",\"type\"]],\"CustomizeLookupWindowExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.hierarchy-olv-in-lookup-example.titleLookup\"],null],\"type\",\"showLookupDialog\",\"removeLookupValue\",[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"getLookupFolvProperties\"],null],[22,[\"lookupCustomLimitPredicate\"]],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"componentName\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupWindowCustomProperties\",\"lookupLimitPredicate\",\"autocomplete\",\"inHierarchicalMode\",\"hierarchicalAttribute\"],[\"DisabledHierarchyLookup\",[22,[\"model\",\"type\"]],\"CustomizeLookupWindowExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.hierarchy-olv-in-lookup-example.titleLookup\"],null],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"getLookupFolvProperties\"],null],[22,[\"lookupCustomLimitPredicate\"]],true,true,\"parent\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/hierarchy-olv-in-lookup-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/limit-function-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "aBSQYd8d", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"lookupWindowCustomProperties\",\"lookupLimitPredicate\",\"autocomplete\"],[[22,[\"model\",\"type\"]],\"LookupWithLimitFunctionExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-example.titleLookup\"],null],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"getLookupFolvProperties\"],null],[22,[\"lookupCustomLimitPredicate\"]],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/limit-function-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/limit-function-through-dynamic-properties-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "nPiIp0pC", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-through-dynamic-properties-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\",\"autocomplete\",\"dynamicProperties\",\"lookupLimitPredicate\"],[[22,[\"model\",\"type\"]],\"LookupWithLimitFunctionExampleView\",\"name\",[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-example.titleLookup\"],null],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],true,[22,[\"dynamicProperties\"]],[22,[\"lookupCustomLimitPredicate\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"br\"],[8],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button firstLimitFunction\"],[3,\"action\",[[21,0,[]],\"firstLimitFunction\"],[[\"on\"],[\"click\"]]],[8],[0,\"\\n    \"],[1,[26,\"concat\",[[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-through-dynamic-properties-example.captionFirstLimitFunction\"],null],\": \",[22,[\"firstLimitType\"]]],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button secondLimitFunction\"],[3,\"action\",[[21,0,[]],\"secondLimitFunction\"],[[\"on\"],[\"click\"]]],[8],[0,\"\\n    \"],[1,[26,\"concat\",[[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-through-dynamic-properties-example.captionSecondLimitFunction\"],null],\": \",[22,[\"secondLimitType\"]]],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button clearLimitFunction\"],[3,\"action\",[[21,0,[]],\"clearLimitFunction\"],[[\"on\"],[\"click\"]]],[8],[0,\"\\n    \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.limit-function-through-dynamic-properties-example.captionClearLimitFunction\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/limit-function-through-dynamic-properties-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/lookup-block-form-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "torJ7Ole", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-block-form-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"ui info message\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[0,\"\\n  \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-block-form-example.message\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"ul\"],[10,\"class\",\"list\"],[8],[0,\"\\n    \"],[6,\"li\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-block-form-example.paragraph1\"],null],false],[9],[0,\"\\n    \"],[6,\"li\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-block-form-example.paragraph2\"],null],false],[9],[0,\"\\n    \"],[6,\"li\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-block-form-example.paragraph3\"],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/lookup-block-form-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/lookup-in-modal", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "/Oc92TWt", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.caption\"],null],false],[9],[0,\"\\n\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"modalWindow\",\"#example\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonModal\"],null],false],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"modalWindowDouble\",\"#example\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonModalDouble\"],null],false],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"ui modal repeat-window hidden\"],[8],[0,\"\\n  \"],[6,\"i\"],[10,\"class\",\"close icon\"],[8],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.captionModal\"],null],false],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"readonly\",\"choose\",\"remove\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"logOut\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonClose\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"ui modal repeat-window-double hidden\"],[8],[0,\"\\n  \"],[6,\"i\"],[10,\"class\",\"close icon\"],[8],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.captionModalDouble\"],null],false],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\"],[[22,[\"model\",\"type\"]],\"SuggestionTypeL\",\"name\",\"Master\",\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"logOutDouble\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonClose\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/lookup-in-modal.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/numeric-autocomplete", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "ToEX89I4", "block": "{\"symbols\":[],\"statements\":[[0,\"\\n\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.application.sitemap.components-examples.flexberry-lookup.numeric-autocomplete.caption\"],null],false],[9],[0,\"\\n\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n  \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"autocomplete\",\"showPreviewButton\",\"previewOnSeparateRoute\",\"previewFormRoute\",\"title\",\"choose\",\"remove\",\"preview\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"karma\",true,true,true,\"ember-flexberry-dummy-application-user-edit\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n  \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n  \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"dropdown\",\"showPreviewButton\",\"previewFormRoute\",\"title\",\"choose\",\"remove\",\"preview\",\"readonly\",\"componentName\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"karma\",true,true,\"ember-flexberry-dummy-application-user-edit\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/numeric-autocomplete.hbs" } });
});
define("dummy/templates/components-examples/flexberry-lookup/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "KOYxAvm2", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-lookup\",null,[[\"placeholder\",\"readonly\",\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relatedModel\",\"relationName\",\"choose\",\"remove\",\"autocomplete\",\"autocompletePersistValue\",\"usePaginationForAutocomplete\",\"maxResults\",\"displayValue\",\"dropdown\",\"dropdownIsSearch\",\"chooseText\",\"removeText\",\"dropdownClass\",\"chooseButtonClass\",\"removeButtonClass\",\"multiselect\",\"showPreviewButton\",\"previewOnSeparateRoute\",\"previewFormRoute\",\"preview\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"model\",\"type\"]],\"SettingLookupExampleView\",\"name\",[22,[\"title\"]],[22,[\"model\"]],\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"autocomplete\"]],[22,[\"autocompletePersistValue\"]],[22,[\"usePaginationForAutocomplete\"]],[22,[\"maxResults\"]],[22,[\"model\",\"lookupDisplayValue\"]],[22,[\"dropdown\"]],[22,[\"dropdownIsSearch\"]],[22,[\"chooseText\"]],[22,[\"removeText\"]],[22,[\"dropdownClass\"]],[22,[\"chooseButtonClass\"]],[22,[\"removeButtonClass\"]],true,[22,[\"showPreviewButton\"]],[22,[\"previewOnSeparateRoute\"]],\"ember-flexberry-dummy-suggestion-type-edit\",[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-lookup/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-menu/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "KTAVizhf", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-menu.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"    \"],[6,\"div\"],[11,\"class\",[20,\"menuPosition\"],null],[8],[0,\"\\n      \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"onItemClick\",\"collapseMenuOnItemClick\"],[[22,[\"itemsLeft\"]],[26,\"action\",[[21,0,[]],\"onMenuItemClick\"],null],[22,[\"collapseMenuOnItemClick\"]]]]],false],[0,\"\\n      \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"onItemClick\",\"collapseMenuOnItemClick\"],[[22,[\"itemsRight\"]],[26,\"action\",[[21,0,[]],\"onMenuItemClick\"],null],[22,[\"collapseMenuOnItemClick\"]]]]],false],[0,\"\\n      \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"onItemClick\",\"collapseMenuOnItemClick\"],[[22,[\"itemsSubmenu\"]],[26,\"action\",[[21,0,[]],\"onMenuItemClick\"],null],[22,[\"collapseMenuOnItemClick\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-menu/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-cancel", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "8LlV4pei", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.custom-filter.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"colsConfigButton\",\"componentName\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",\"beforeDeleteRecord\",\"beforeDeleteAllRecords\",\"showDeleteButtonInRow\",\"showCheckBoxInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],false,\"FOLVCustomFilterObjectListView\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",[26,\"action\",[[21,0,[]],\"beforeDeleteRecord\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-cancel.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-immediately", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "RVrptCsY", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.custom-filter.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"colsConfigButton\",\"componentName\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",\"beforeDeleteRecord\",\"beforeDeleteAllRecords\",\"showDeleteButtonInRow\",\"showCheckBoxInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],false,\"FOLVCustomFilterObjectListView\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",[26,\"action\",[[21,0,[]],\"beforeDeleteRecord\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-data-immediately.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-cancel", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "SI5s6Hr+", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.custom-filter.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"colsConfigButton\",\"componentName\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",\"beforeDeleteRecord\",\"beforeDeleteAllRecords\",\"showDeleteButtonInRow\",\"showCheckBoxInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],false,\"FOLVCustomFilterObjectListView\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",[26,\"action\",[[21,0,[]],\"beforeDeleteRecord\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-cancel.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-immediately", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "r4hgogHY", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.custom-filter.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"colsConfigButton\",\"componentName\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",\"beforeDeleteRecord\",\"beforeDeleteAllRecords\",\"showDeleteButtonInRow\",\"showCheckBoxInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],false,\"FOLVCustomFilterObjectListView\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",[26,\"action\",[[21,0,[]],\"beforeDeleteRecord\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise-data-immediately.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "/dP8VdCK", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.custom-filter.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"colsConfigButton\",\"componentName\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",\"beforeDeleteRecord\",\"beforeDeleteAllRecords\",\"showDeleteButtonInRow\",\"showCheckBoxInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],false,\"FOLVCustomFilterObjectListView\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",[26,\"action\",[[21,0,[]],\"beforeDeleteRecord\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record-with-promise.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "hvwsy+q/", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.custom-filter.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"colsConfigButton\",\"componentName\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",\"beforeDeleteRecord\",\"beforeDeleteAllRecords\",\"showDeleteButtonInRow\",\"showCheckBoxInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],false,\"FOLVCustomFilterObjectListView\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",[26,\"action\",[[21,0,[]],\"beforeDeleteRecord\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/before-delete-record/folv-for-before-delete-record.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/configurate-rows", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "bJ1dsKjz", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.configurate-rows.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"changeAttribute2\"]],[8],[0,\"Change attribute 2\"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]]]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"editFormRoute\",\"modelProjection\",\"filterByAnyMatch\",\"refreshButton\",\"filterText\",\"sorting\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"configurateRow\",\"componentName\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion\",\"ember-flexberry-dummy-suggestion-edit\",[22,[\"projection\"]],[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],true,[22,[\"filter\"]],[22,[\"computedSorting\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[26,\"action\",[[21,0,[]],\"configurateRow\"],null],\"FOLVConfigurateRowsObjectListView\"]]],false],[0,\"\\n      \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"placeholder\",\"readonly\",\"allowColumnResize\",\"createNewButton\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"rowClickable\",\"immediateDelete\",\"editOnSeperateRoute\",\"searchForContentChange\",\"orderable\",\"readonly\",\"configurateRow\"],[\"ConfigurateRowsGroupedit\",[22,[\"model\"]],[22,[\"projection\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],false,true,true,true,false,false,false,[22,[\"searchForContentChange\"]],false,[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"configurateRow\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/configurate-rows.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/custom-filter", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "gqLNdjyM", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.custom-filter.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"enableFilters\",\"filters\",\"applyFilters\",\"resetFilters\",\"componentForFilter\",\"conditionsByType\",\"filterButton\",\"filterText\",\"filterByAnyWord\",\"filterByAllWords\",\"filterByAnyMatch\",\"beforeDeleteAllRecords\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"colsConfigButton\",\"componentName\",\"customButtons\",\"toggleFilterByAnyWord\",\"toggleFilterByAllWords\",\"showCheckBoxInRow\",\"deleteButton\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,true,[22,[\"filters\"]],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[26,\"action\",[[21,0,[]],\"componentForFilter\"],null],[26,\"action\",[[21,0,[]],\"conditionsByType\"],null],true,[22,[\"filter\"]],[22,[\"filterByAnyWord\"]],[22,[\"filterByAllWords\"]],[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],false,\"FOLVCustomFilterObjectListView\",[22,[\"customButtons\"]],[26,\"action\",[[21,0,[]],\"toggleFilterByAnyWord\"],null],[26,\"action\",[[21,0,[]],\"toggleFilterByAllWords\"],null],true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/custom-filter.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/downloading-files-from-olv-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "hPSTTaW/", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.downloading-files-from-olv-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"order\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"eMail\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-file\",null,[[\"value\",\"placeholder\",\"readonly\",\"showPreview\",\"inputClass\",\"buttonClass\"],[[22,[\"model\",\"file\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],false,[22,[\"inputClass\"]],[22,[\"buttonClass\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"file\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/downloading-files-from-olv-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/downloading-files-from-olv-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "RMQTdAeq", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.downloading-files-from-olv-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"refreshButton\",\"sorting\",\"rowClickable\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-file\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],true,[22,[\"computedSorting\"]],true,true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"DownloadingFilesFromOLV\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/downloading-files-from-olv-list.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/edit-form-with-detail-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "zpyl4FhW", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"parent\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.parent-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\"],[[22,[\"model\",\"parent\"]],[22,[\"model\"]],\"parent\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.parent-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"parent\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.localized-types-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionTypeLocalizedTypesGroupEdit\",[22,[\"model\",\"localizedTypes\"]],[22,[\"modelProjection\",\"attributes\",\"localizedTypes\"]],false,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"localizedTypes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/edit-form-with-detail-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/edit-form-with-detail-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "mPhYQ4uc", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showCheckBoxInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\",\"showDeleteButtonInRow\",\"beforeDeleteAllRecords\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"suggestionTypeLocalizedTypesObjectListView\",true,true,true,true,[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/edit-form-with-detail-list.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/edit-form-with-detail-list/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "RGgudcRG", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n        Loading ...\\n        \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\" \\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/edit-form-with-detail-list/loading.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "nfH81cMA", "block": "{\"symbols\":[\"settings\",\"settings\",\"settings\",\"settings\"],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[22,[\"model\",\"errors\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"address\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"address\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.address-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"address\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"text\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"text\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"date\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.date-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"date\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"votes\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"votes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"moderated\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"moderated\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"type\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\",\"direction\",\"componentName\"],[[22,[\"model\",\"type\"]],[22,[\"model\"]],\"type\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]],\"upward\",\"SuggestionEditType\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"type\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"author\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"showPreviewButton\",\"previewOnSeparateRoute\",\"previewFormRoute\",\"title\",\"choose\",\"remove\",\"preview\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",true,true,\"ember-flexberry-dummy-application-user-edit\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"author\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"editor1\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"showPreviewButton\",\"previewFormRoute\",\"title\",\"choose\",\"remove\",\"preview\",\"readonly\",\"componentName\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",true,\"ember-flexberry-dummy-application-user-edit\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"editor1\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.files-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"filesGroupEdit\",[22,[\"model\",\"files\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"files\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"files\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"userVotes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.comments-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"suggestionCommentsGroupEdit\",[22,[\"model\",\"comments\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"comments\"]],true,\"rowClick\",true,[22,[\"commentsEditRoute\"]],true,true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"comments\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiUserList\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"editFormRoute\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[21,4,[\"modelName\"]],[21,4,[\"modelProjection\"]],[21,4,[\"editFormRoute\"]],[21,4,[\"model\"]],true,true,[21,4,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[21,4,[\"pages\"]],[21,4,[\"perPageValue\"]],[21,4,[\"perPageValues\"]],[21,4,[\"recordsTotalCount\"]],[21,4,[\"hasPreviousPage\"]],[21,4,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,4,[\"componentName\"]]]]],false],[0,\"\\n\"]],\"parameters\":[4]},null],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiUserList2\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"editFormRoute\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[21,3,[\"modelName\"]],[21,3,[\"modelProjection\"]],[21,3,[\"editFormRoute\"]],[21,3,[\"model\"]],true,true,[21,3,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[21,3,[\"pages\"]],[21,3,[\"perPageValue\"]],[21,3,[\"perPageValues\"]],[21,3,[\"recordsTotalCount\"]],[21,3,[\"hasPreviousPage\"]],[21,3,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,3,[\"componentName\"]]]]],false],[0,\"\\n\"]],\"parameters\":[3]},null],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiSuggestionList\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"enableFilters\",\"filters\",\"filterButton\",\"filterByAnyMatch\",\"filterText\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"applyFilters\",\"resetFilters\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\"],[[21,2,[\"editFormRoute\"]],true,[21,2,[\"modelName\"]],[21,2,[\"modelProjection\"]],[21,2,[\"model\"]],true,true,[21,2,[\"filters\"]],true,[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[21,2,[\"filter\"]],true,true,[21,2,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[21,2,[\"pages\"]],[21,2,[\"perPageValue\"]],[21,2,[\"perPageValues\"]],[21,2,[\"recordsTotalCount\"]],[21,2,[\"hasPreviousPage\"]],[21,2,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,2,[\"componentName\"]],true,true]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiHierarchyList\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"orderable\",\"componentName\",\"beforeDeleteAllRecords\",\"colsConfigButton\",\"disableHierarchicalMode\",\"showCheckBoxInRow\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"availableCollExpandMode\",\"inHierarchicalMode\",\"hierarchicalAttribute\",\"inExpandMode\",\"hierarchyPaging\"],[[21,1,[\"model\"]],[21,1,[\"modelName\"]],[21,1,[\"modelProjection\"]],[21,1,[\"editFormRoute\"]],false,[21,1,[\"componentName\"]],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],false,false,true,[21,1,[\"pages\"]],[21,1,[\"perPageValue\"]],[21,1,[\"perPageValues\"]],[21,1,[\"recordsTotalCount\"]],[21,1,[\"hasPreviousPage\"]],[21,1,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],true,[21,1,[\"inHierarchicalMode\"]],[21,1,[\"hierarchicalAttribute\"]],[21,1,[\"inExpandMode\"]],[21,1,[\"hierarchyPaging\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/ember-flexberry-dummy-suggestion-multi-list-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/hierarchy-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "vRjj+clf", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.hierarchy-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"orderable\",\"showShowingEntries\",\"componentName\",\"beforeDeleteAllRecords\",\"colsConfigButton\",\"disableHierarchicalMode\",\"showCheckBoxInRow\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"availableCollExpandMode\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,false,\"HiearchyExampleObjectListView\",[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],false,false,true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/hierarchy-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/hierarchy-paging-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "o+n97KOW", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.hierarchy-paging-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"orderable\",\"componentName\",\"beforeDeleteAllRecords\",\"colsConfigButton\",\"disableHierarchicalMode\",\"showCheckBoxInRow\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"availableCollExpandMode\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,\"HiearchyExampleObjectListView\",[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],false,false,true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],true]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/hierarchy-paging-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/inheritance-models", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "C9sohC74", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"ui info message\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[0,\"\\n  \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.message\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"ul\"],[10,\"class\",\"list\"],[8],[0,\"\\n    \"],[6,\"li\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.projectionBase\"],null],false],[9],[0,\"\\n    \"],[6,\"li\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.projectionSuccessorPhone\"],null],false],[9],[0,\"\\n    \"],[6,\"li\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.projectionSuccessorSoc\"],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"root\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.buttonRoot\"],null],false],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"successorPhone\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.buttonSuccessorPhone\"],null],false],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"successorSoc\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.buttonSuccessorSoc\"],null],false],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/inheritance-models.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/parent-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "AcM1T8xo", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"eMail\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"eMail\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.eMail-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"eMail\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"birthday\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.birthday-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"birthday\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"birthday\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/parent-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/parent-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "F5vodCZ/", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.buttonRoot\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[22,[\"model\"]],\"ember-flexberry-dummy-parent\",\"parentL\",[22,[\"editFormRoute\"]],true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"OLVInheritanceModels\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/parent-list.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Jw1Qp4u8", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone1\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"phone1\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.phone1-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone1\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone2\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"phone2\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.phone2-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone2\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone3\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"phone3\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.phone3-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone3\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "DSbAMs/O", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.buttonSuccessorPhone\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[22,[\"model\"]],\"ember-flexberry-dummy-successor-phone\",\"SuccessorL\",[22,[\"editFormRoute\"]],true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"OLVInheritanceModels\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/successor-phone-list.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "nf1ZykYG", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"vK\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"vK\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.vK-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"vK\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"facebook\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"facebook\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.facebook-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"facebook\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"twitter\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"twitter\"]],[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.twitter-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"twitter\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "p7+mPU/o", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.inheritance-models.buttonSuccessorSoc\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[22,[\"model\"]],\"ember-flexberry-dummy-successor-social-network\",\"SuccessorL\",[22,[\"editFormRoute\"]],true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"OLVInheritanceModels\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/inheritance-models/successor-social-network-list.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/limit-function-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "+Oi2LG5R", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.limit-function-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\",\"rowClickable\",\"filterByAnyMatch\",\"filterText\",\"filterButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],false,false,false,false,false,false,[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[22,[\"filter\"]],true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"FOLVLimitFunctionExampleObjectListView\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"br\"],[8],[9],[0,\"\\n\"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"firstLimitFunction\"],[[\"on\"],[\"click\"]]],[8],[0,\"\\n  \"],[1,[26,\"concat\",[[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.limit-function-example.captionFirstLimitFunction\"],null],\": \",[22,[\"firstLimitType\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"secondLimitFunction\"],[[\"on\"],[\"click\"]]],[8],[0,\"\\n  \"],[1,[26,\"concat\",[[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.limit-function-example.captionSecondLimitFunction\"],null],\": \",[22,[\"secondLimitType\"]]],null],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"clearLimitFunction\"],[[\"on\"],[\"click\"]]],[8],[0,\"\\n  \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.limit-function-example.captionClearLimitFunction\"],null],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/limit-function-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/limited-text-size-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "VZ6DrEWH", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.limited-text-size-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],\"\"]],{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"filters\",\"refreshButton\",\"createNewButton\",\"sorting\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"applyFilters\",\"resetFilters\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],[22,[\"filters\"]],true,true,[22,[\"computedSorting\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"LimitedSizeOlv\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/limited-text-size-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/list-on-editform", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "wJZIYJQF", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"enableFilters\",\"filters\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"applyFilters\",\"resetFilters\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\",\"componentName\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],false,true,[22,[\"filters\"]],true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionObjectListView\",true,true,\"FOLVListOnEditformObjectListView\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/list-on-editform.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/lock-services-editor-view-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Bx51mZho", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"blockedByUser\"]]],null,{\"statements\":[[0,\"  \"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.lock-services-editor-view.blocked-by\"],null],false],[0,\": \"],[1,[20,\"blockedByUser\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[22,[\"model\",\"errors\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"address\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"address\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.address-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"address\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"text\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"text\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"date\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.date-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"date\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"votes\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"votes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"moderated\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"moderated\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"type\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\",\"direction\",\"componentName\"],[[22,[\"model\",\"type\"]],[22,[\"model\"]],\"type\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]],\"upward\",\"SuggestionEditType\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"type\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"author\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"author\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"editor1\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"editor1\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.files-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"filesGroupEdit\",[22,[\"model\",\"files\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"files\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"files\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"userVotes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.comments-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"suggestionCommentsGroupEdit\",[22,[\"model\",\"comments\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"comments\"]],true,\"rowClick\",true,[22,[\"commentsEditRoute\"]],true,true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"comments\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/lock-services-editor-view-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/lock-services-editor-view-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "p/OTCibX", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],true,true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionObjectListView\",true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/lock-services-editor-view-list.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/object-list-view-resize", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "kp8Pmush", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.object-list-view-resize.caption\"],null],false],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"ui stackable grid\"],[8],[0,\"\\n\"],[4,\"flexberry-toggler\",null,[[\"expanded\"],[true]],{\"statements\":[[0,\"  \"],[6,\"div\"],[8],[0,\"\\n    \"],[6,\"button\"],[10,\"class\",\"ui button create-button\"],[3,\"action\",[[21,0,[]],\"addRecord\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.object-list-view-resize.button-сaption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"object-list-view\",null,[[\"modelName\",\"modelProjection\",\"componentName\",\"content\",\"editOnSeparateRoute\",\"rowClickable\",\"action\",\"searchForContentChange\",\"singleColumnCellComponent\"],[\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],\"ObjectListViewResize\",[22,[\"model\"]],true,true,\"objectListViewRowClick\",[22,[\"searchForContentChange\"]],[22,[\"singleColumnCellComponent\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/object-list-view-resize.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/on-edit-form", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "z+CrTUfp", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[22,[\"model\"]],\"ember-flexberry-dummy-application-user\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"FOLVOnEditFormObjectListView\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/on-edit-form.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/on-edit-form/suggestion", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "btLaqXIh", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[22,[\"model\",\"errors\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"address\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"address\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.address-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"address\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"text\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"text\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"date\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.date-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-datepicker\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"date\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"votes\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"votes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"moderated\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"moderated\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"type\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\",\"direction\",\"componentName\"],[[22,[\"model\",\"type\"]],[22,[\"model\"]],\"type\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],false,[22,[\"readonly\"]],\"upward\",\"SuggestionEditType\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"type\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"author\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"author\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"editor1\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"editor1\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.files-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"filesGroupEdit\",[22,[\"model\",\"files\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"files\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"files\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"userVotes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.comments-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"suggestionCommentsGroupEdit\",[22,[\"model\",\"comments\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"comments\"]],true,\"rowClick\",true,[22,[\"commentsEditRoute\"]],true,true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"comments\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.list-on-editform.caption\"],null],false],[0,\":\"],[9],[0,\"\\n    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"onEditForm\",\"editFormRoute\",\"modelProjection\",\"rowClickable\",\"refreshButton\",\"colsConfigButton\",\"showShowingEntries\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"customButtons\",\"disableHierarchicalMode\",\"hierarchicalIndent\",\"componentName\"],[[22,[\"customFolvContent\"]],[22,[\"folvModelName\"]],true,[22,[\"folvEditFormRoute\"]],[22,[\"folvProjection\"]],true,true,false,false,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[22,[\"customButtons\"]],false,50,\"listOnEditform\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/on-edit-form/suggestion.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/on-edit-form/user", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "/o6Mcj7s", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"name\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"name\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"name\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.name-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"eMail\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"eMail\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"eMail\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"eMail\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.eMail-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"phone1\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"phone1\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"phone1\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone1\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone1-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"phone2\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"phone2\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"phone2\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone2\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone2-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"phone3\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"phone3\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"phone3\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone3\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone3-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.activated-caption\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"activated\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"activated\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-checkbox\",null,[[\"readonly\",\"value\"],[[22,[\"readonly\"]],[22,[\"model\",\"activated\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"vK\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"vK\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"vK\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"vK\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.vK-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"facebook\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"facebook\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"facebook\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"facebook\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.facebook-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"twitter\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"twitter\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"twitter\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"twitter\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.twitter-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.birthday-caption\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"birthday\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"birthday\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"readonly\",\"value\",\"class\"],[\"date\",[22,[\"readonly\"]],[22,[\"model\",\"birthday\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"birthday\"],null],\"isInvalid\"],null],\"error\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.gender-caption\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"gender\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"gender\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\",\"readonly\"],[[26,\"flexberry-enum\",[\"ember-flexberry-dummy-gender\"],null],[22,[\"model\",\"gender\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.vip-caption\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"vip\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"vip\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-checkbox\",null,[[\"readonly\",\"value\"],[[22,[\"readonly\"]],[22,[\"model\",\"vip\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"karma\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"karma\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"karma\"]],[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"karma\"],null],\"isInvalid\"],null],\"error\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.karma-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"hr\"],[8],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.on-edit-form.caption\"],null],false],[0,\":\"],[9],[0,\"\\n    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"onEditForm\",\"editFormRoute\",\"modelProjection\",\"rowClickable\",\"refreshButton\",\"colsConfigButton\",\"filters\",\"applyFilters\",\"resetFilters\",\"componentForFilter\",\"conditionsByType\",\"filterButton\",\"filterText\",\"filterByAnyMatch\",\"filterByAllWords\",\"showShowingEntries\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"customButtons\",\"userButtonAddAction\",\"disableHierarchicalMode\",\"hierarchicalIndent\",\"componentName\"],[[22,[\"customFolvContent\"]],[22,[\"folvModelName\"]],true,[22,[\"folvEditFormRoute\"]],[22,[\"folvProjection\"]],true,true,false,[22,[\"filters\"]],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[26,\"action\",[[21,0,[]],\"componentForFilter\"],null],[26,\"action\",[[21,0,[]],\"conditionsByType\"],null],true,[22,[\"filter\"]],[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],true,false,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[22,[\"customButtons\"]],[26,\"action\",[[21,0,[]],\"userButtonAddAction\"],null],false,50,\"FOLVOnEditFormSuggestionsObjectListView\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/on-edit-form/user.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "cKlQDrVj", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[22,[\"model\",\"errors\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui segment\"],[8],[0,\"\\n    \"],[6,\"button\"],[10,\"class\",\"ui button return-to-list-form\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"onButtonClick\"]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.application.sitemap.components-examples.flexberry-objectlistview.return-from-ediform.return-button\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"address\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"address\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.address-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"address\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"text\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"text\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"date\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.date-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"date\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"votes\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"votes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"moderated\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"moderated\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"type\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\",\"direction\",\"componentName\"],[[22,[\"model\",\"type\"]],[22,[\"model\"]],\"type\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]],\"upward\",\"SuggestionEditType\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"type\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"author\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"author\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[22,[\"model\",\"errors\",\"editor1\"]],\"error\",\"\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\",\"componentName\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\"]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"editor1\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.files-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"filesGroupEdit\",[22,[\"model\",\"files\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"files\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"files\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"userVotes\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.comments-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"suggestionCommentsGroupEdit\",[22,[\"model\",\"comments\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"comments\"]],true,\"rowClick\",true,[22,[\"commentsEditRoute\"]],true,true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[22,[\"model\",\"errors\",\"comments\"]],\"pointing\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-edit.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "MXIJtBLA", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\",\"showEditButtonInRow\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],false,true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionObjectListView\",true,false,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/return-with-query-params/ember-flexberry-dummy-suggestion-return-with-query-params-list.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/selected-rows", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "p0bqFb6g", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.selected-rows.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"inline field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[0,\"Count selected row:\"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui teal label\"],[8],[1,[20,\"countSelectedRows\"],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"orderable\",\"showShowingEntries\",\"componentName\",\"colsConfigButton\",\"disableHierarchicalMode\",\"showCheckBoxInRow\",\"configurateSelectedRows\",\"beforeDeleteAllRecords\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,false,[22,[\"componentName\"]],false,true,true,[26,\"action\",[[21,0,[]],\"configurateSelectedRows\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/selected-rows.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "xKRSLDTn", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]]]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-objectlistview\",null,[[\"colsConfigButton\",\"exportExcelButton\",\"content\",\"modelName\",\"editFormRoute\",\"modelProjection\",\"placeholder\",\"readonly\",\"tableStriped\",\"allowColumnResize\",\"minAutoColumnWidth\",\"columnsWidthAutoresize\",\"createNewButton\",\"deleteButton\",\"refreshButton\",\"defaultSortingButton\",\"advLimitButton\",\"enableFilters\",\"filters\",\"applyFilters\",\"resetFilters\",\"filterButton\",\"showCheckBoxInRow\",\"showEditButtonInRow\",\"showPrototypeButtonInRow\",\"showDeleteButtonInRow\",\"showEditMenuItemInRow\",\"showPrototypeMenuItemInRow\",\"showDeleteMenuItemInRow\",\"rowClickable\",\"orderable\",\"singleColumnHeaderTitle\",\"filterByAnyMatch\",\"filterText\",\"filterByAnyWord\",\"filterByAllWords\",\"sorting\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"_availableHierarchicalMode\",\"availableCollExpandMode\",\"disableHierarchicalMode\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"fixedHeader\"],[[22,[\"colsConfigButton\"]],[22,[\"exportExcelButton\"]],[22,[\"model\"]],\"ember-flexberry-dummy-suggestion\",\"ember-flexberry-dummy-suggestion-edit\",[22,[\"projection\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"tableStriped\"]],[22,[\"allowColumnResize\"]],[22,[\"minAutoColumnWidth\"]],[22,[\"columnsWidthAutoresize\"]],[22,[\"createNewButton\"]],[22,[\"deleteButton\"]],[22,[\"refreshButton\"]],[22,[\"defaultSortingButton\"]],[22,[\"advLimitButton\"]],[22,[\"enableFilters\"]],[22,[\"filters\"]],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[22,[\"filterButton\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showEditButtonInRow\"]],[22,[\"showPrototypeButtonInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditMenuItemInRow\"]],[22,[\"showPrototypeMenuItemInRow\"]],[22,[\"showDeleteMenuItemInRow\"]],[22,[\"rowClickable\"]],[22,[\"orderable\"]],[22,[\"singleColumnHeaderTitle\"]],[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[22,[\"filter\"]],[22,[\"filterByAnyWord\"]],[22,[\"filterByAllWords\"]],[22,[\"computedSorting\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"availableHierarchicalMode\"]],[22,[\"availableCollExpandMode\"]],false,[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"FOLVSettingsExampleObjectListView\",[22,[\"fixedHeader\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-objectlistview/toolbar-custom-buttons-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "DVbNZz2j", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-objectlistview.toolbar-custom-buttons-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\",\"rowClickable\",\"refreshButton\",\"colsConfigButton\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"customButtons\",\"userButtonActionTest\",\"toggleHiButton\",\"customButtonsInRow\",\"userButtonInRowActionTest\",\"componentName\"],[\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],false,false,false,false,false,false,false,false,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[22,[\"customButtons\"]],[26,\"action\",[[21,0,[]],\"userButtonActionTest\"],null],[26,\"action\",[[21,0,[]],\"toggleHiButton\"],null],[22,[\"customButtonsInRow\"]],[26,\"action\",[[21,0,[]],\"userButtonInRowActionTest\"],null],\"FOLVToolbarCustomButtonsExample\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[1,[20,\"messageForUser\"],false],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-objectlistview/toolbar-custom-buttons-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-simpledatetime/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "J8hL4VyB", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-simpledatetime.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"removeButton\",\"value\",\"min\",\"max\",\"readonly\",\"class\"],[[22,[\"type\"]],[22,[\"removeButton\"]],[22,[\"value\"]],[22,[\"min\"]],[22,[\"max\"]],[22,[\"readonly\"]],\"example-simpledatetime\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-simpledatetime/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-text-cell/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "psYpcbey", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-text-cell.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-text-cell\",null,[[\"value\",\"maxTextLength\",\"cutBySpaces\"],[[22,[\"value\"]],[22,[\"maxTextLength\"]],[22,[\"cutBySpaces\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-text-cell/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-textarea/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "KAAfbv+C", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-textarea.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-textarea\",null,[[\"value\",\"placeholder\",\"readonly\",\"class\",\"required\",\"rows\",\"cols\",\"disabled\",\"maxlength\",\"selectionStart\",\"selectionEnd\",\"selectionDirection\",\"wrap\",\"autofocus\",\"spellcheck\"],[[22,[\"model\",\"text\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"class\"]],[22,[\"required\"]],[22,[\"rows\"]],[22,[\"cols\"]],[22,[\"disabled\"]],[22,[\"maxlength\"]],[22,[\"selectionStart\"]],[22,[\"selectionEnd\"]],[22,[\"selectionDirection\"]],[22,[\"wrap\"]],[22,[\"autofocus\"]],[22,[\"spellcheck\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-textarea/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-textbox/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "qN6B8VMY", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-textbox.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-textbox\",null,[[\"class\",\"value\",\"placeholder\",\"readonly\",\"maxlength\"],[[22,[\"class\"]],[22,[\"model\",\"text\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"maxlength\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-textbox/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-toggler/ge-into-toggler-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "GQ2zgjUa", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-toggler.ge-into-toggler-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-toggler-example-master\",[22,[\"modelProjection\"]],[22,[\"model\"]],true,true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionObjectListView\",true,true]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-toggler/ge-into-toggler-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-toggler/settings-example-inner", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "qVx+4kgE", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-toggler.settings-example-inner.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]]]],{\"statements\":[[4,\"flexberry-toggler\",null,[[\"caption\",\"expandedCaption\",\"collapsedCaption\",\"expanded\",\"iconClass\",\"componentName\"],[[22,[\"caption\"]],[22,[\"expandedCaption\"]],[22,[\"collapsedCaption\"]],[22,[\"expanded\"]],[22,[\"iconClass\"]],\"myToggler\"]],{\"statements\":[[0,\"        \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-toggler.settings-example-inner.togglerContent\"],null],false],[0,\"\\n\"],[4,\"flexberry-toggler\",null,[[\"caption\",\"expandedCaption\",\"collapsedCaption\",\"expanded\",\"iconClass\",\"componentName\"],[[22,[\"innerCaption\"]],[22,[\"expandedInnerCaption\"]],[22,[\"collapsedInnerCaption\"]],[22,[\"innerExpanded\"]],[22,[\"iconClass\"]],\"myInnerToggler\"]],{\"statements\":[[0,\"          \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-toggler.settings-example-inner.innerTogglerContent\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-toggler/settings-example-inner.hbs" } });
});
define("dummy/templates/components-examples/flexberry-toggler/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "PrKYMWfn", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-toggler.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"componentSettingsMetadata\"]],[22,[\"componentTemplateText\"]],\"visible\"]],{\"statements\":[[4,\"flexberry-toggler\",null,[[\"caption\",\"expandedCaption\",\"collapsedCaption\",\"expanded\",\"iconClass\",\"componentName\"],[[22,[\"caption\"]],[22,[\"expandedCaption\"]],[22,[\"collapsedCaption\"]],[22,[\"expanded\"]],[22,[\"iconClass\"]],\"myToggler\"]],{\"statements\":[[0,\"          \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-toggler.settings-example.togglerContent\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-toggler/settings-example.hbs" } });
});
define("dummy/templates/components-examples/flexberry-tree/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "eMM8S1DP", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-tree.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui top attached tabular menu\"],[8],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"item active\"],[10,\"data-tab\",\"jsonTree\"],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.components-examples.flexberry-tree.settings-example.json-tree-tab-caption\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui bottom attached tab segment active\"],[10,\"data-tab\",\"jsonTree\"],[8],[0,\"\\n\"],[4,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentTemplateText\",\"componentBlockOverflow\"],[[21,0,[]],[22,[\"jsonTreeComponentSettingsMetadata\"]],[22,[\"jsonTreeComponentTemplateText\"]],\"visible\"]],{\"statements\":[[0,\"        \"],[1,[26,\"flexberry-tree\",null,[[\"class\",\"exclusive\",\"collapsible\",\"animateChildren\",\"duration\",\"nodes\"],[[22,[\"jsonTreeClass\"]],[22,[\"jsonTreeExclusive\"]],[22,[\"jsonTreeCollapsible\"]],[22,[\"jsonTreeAnimateChildren\"]],[22,[\"jsonTreeDuration\"]],[26,\"get-with-dynamic-actions\",[[21,0,[]],\"jsonTreeNodes\"],[[\"hierarchyPropertyName\",\"pathKeyword\",\"dynamicActions\"],[\"nodes\",\"nodePath\",[26,\"array\",[[26,\"hash\",null,[[\"on\",\"actionName\",\"actionArguments\"],[\"headerClick\",\"onTreenodeHeaderClick\",[26,\"array\",[\"{% nodePath %}\"],null]]]]],null]]]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[6,\"br\"],[8],[9],[0,\"\\n      \"],[1,[26,\"settings-example\",null,[[\"controllerProperties\",\"componentSettingsMetadata\",\"componentSettingsCaption\",\"componentSettingsPlaceholder\"],[[21,0,[]],[22,[\"jsonTreeLatestClickedNodeComponentSettingsMetadata\"]],[26,\"t\",[\"forms.components-examples.flexberry-tree.settings-example.json-tree-latest-clicked-node-caption\"],null],[26,\"t\",[\"forms.components-examples.flexberry-tree.settings-example.json-tree-latest-clicked-node-placeholder\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/flexberry-tree/settings-example.hbs" } });
});
define("dummy/templates/components-examples/modal-dialog/index", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "GsTfN+YV", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.caption\"],[[\"component\"],[\"{{modal-dialog}}\"]]],false],[9],[0,\"\\n\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"h4\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.in-current-context\"],null],false],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"lightboxIsOpen\",true]],[8],[0,\"\\n    \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-lightbox\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"sidepageIsOpen\",true]],[8],[0,\"\\n    \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-sidepage\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[6,\"h4\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.application-context\"],null],false],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"openLightbox\"]],[8],[0,\"\\n    \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-lightbox\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"openSidepage\"]],[8],[0,\"\\n    \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-sidepage\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[22,[\"lightboxIsOpen\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useOkButton\",\"useCloseButton\",\"close\",\"settings\"],[[26,\"t\",[\"forms.components-examples.modal-dialog.lightbox-title\"],null],false,false,[26,\"action\",[[21,0,[]],[22,[\"set\"]],\"lightboxIsOpen\",false],null],[26,\"hash\",null,[[\"context\"],[\".stackable.grid.container\"]]]]],{\"statements\":[[0,\"    \"],[6,\"p\"],[8],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.lightbox-title\"],null],false],[0,\" \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.in-current-context\"],null],false],[0,\". \\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-sidepage\"],null],false],[0,\", \\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-lightbox\"],null],false],[0,\".\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[8],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button primary\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"sidepageIsOpen\",true]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-sidepage\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"secondLightboxIsOpen\",true]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-lightbox\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[22,[\"sidepageIsOpen\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useSidePageMode\",\"useOkButton\",\"useCloseButton\",\"close\",\"settings\"],[[26,\"t\",[\"forms.components-examples.modal-dialog.sidepage-title\"],null],true,false,false,[26,\"action\",[[21,0,[]],[22,[\"set\"]],\"sidepageIsOpen\",false],null],[26,\"hash\",null,[[\"context\"],[\".stackable.grid.container\"]]]]],{\"statements\":[[0,\"    \"],[6,\"button\"],[10,\"class\",\"ui button primary\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"secondSidepageIsOpen\",true]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-sidepage\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"secondLightboxIsOpen\",true]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-lightbox\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[22,[\"secondSidepageIsOpen\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useSidePageMode\",\"useOkButton\",\"useCloseButton\",\"close\",\"settings\"],[[26,\"t\",[\"forms.components-examples.modal-dialog.second-sidepage-title\"],null],true,false,false,[26,\"action\",[[21,0,[]],[22,[\"set\"]],\"secondSidepageIsOpen\",false],null],[26,\"hash\",null,[[\"context\"],[\".stackable.grid.container\"]]]]],{\"statements\":[[0,\"    \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"secondLightboxIsOpen\",true]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-lightbox\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[22,[\"secondLightboxIsOpen\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"sizeClass\",\"useCloseButton\",\"close\",\"settings\"],[[26,\"t\",[\"forms.components-examples.modal-dialog.second-lightbox-title\"],null],\"tiny\",false,[26,\"action\",[[21,0,[]],[22,[\"set\"]],\"secondLightboxIsOpen\",false],null],[26,\"hash\",null,[[\"context\"],[\".stackable.grid.container\"]]]]],{\"statements\":[[0,\"    \"],[6,\"p\"],[8],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.second-lightbox-title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/modal-dialog/index.hbs" } });
});
define("dummy/templates/components-examples/ui-message/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "7P52M/yP", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.ui-message.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"content ui form success error warning flexberry-container\"],[8],[0,\"\\n\"],[4,\"ui-message\",null,[[\"caption\",\"type\",\"message\",\"closeable\"],[[26,\"t\",[\"forms.components-examples.ui-message.settings-example.captionMessage\"],null],\"success\",[26,\"t\",[\"forms.components-examples.ui-message.settings-example.messageSuccess\"],null],true]],{\"statements\":[],\"parameters\":[]},null],[4,\"ui-message\",null,[[\"caption\",\"type\",\"message\",\"icon\"],[[26,\"t\",[\"forms.components-examples.ui-message.settings-example.captionMessage\"],null],\"positive\",[26,\"t\",[\"forms.components-examples.ui-message.settings-example.messageSuccess\"],null],\"paw icon\"]],{\"statements\":[],\"parameters\":[]},null],[4,\"ui-message\",null,[[\"caption\",\"type\",\"message\",\"closeable\"],[[26,\"t\",[\"forms.components-examples.ui-message.settings-example.captionMessage\"],null],\"error\",[26,\"t\",[\"forms.components-examples.ui-message.settings-example.messageError\"],null],true]],{\"statements\":[],\"parameters\":[]},null],[4,\"ui-message\",null,[[\"caption\",\"type\",\"message\",\"attached\"],[[26,\"t\",[\"forms.components-examples.ui-message.settings-example.captionMessage\"],null],\"negative\",[26,\"t\",[\"forms.components-examples.ui-message.settings-example.messageError\"],null],true]],{\"statements\":[],\"parameters\":[]},null],[4,\"ui-message\",null,[[\"caption\",\"type\",\"message\",\"closeable\",\"attached\"],[[26,\"t\",[\"forms.components-examples.ui-message.settings-example.captionMessage\"],null],\"warning\",[26,\"t\",[\"forms.components-examples.ui-message.settings-example.messageWarning\"],null],true,true]],{\"statements\":[],\"parameters\":[]},null],[4,\"ui-message\",null,[[\"caption\",\"type\",\"size\",\"icon\",\"message\",\"closeable\"],[[26,\"t\",[\"forms.components-examples.ui-message.settings-example.captionMessage\"],null],\"info\",\"small\",\"alarm icon\",[26,\"t\",[\"forms.components-examples.ui-message.settings-example.messageInfo\"],null],true]],{\"statements\":[],\"parameters\":[]},null],[4,\"ui-message\",null,[[\"caption\",\"type\",\"color\",\"message\",\"compact\"],[[26,\"t\",[\"forms.components-examples.ui-message.settings-example.captionMessage\"],null],\"info\",\"violet\",[26,\"t\",[\"forms.components-examples.ui-message.settings-example.messageError\"],null],true]],{\"statements\":[],\"parameters\":[]},null],[4,\"ui-message\",null,[[\"caption\",\"message\",\"floating\",\"color\"],[[26,\"t\",[\"forms.components-examples.ui-message.settings-example.captionMessage\"],null],[26,\"t\",[\"forms.components-examples.ui-message.settings-example.messageInfo\"],null],true,\"orange\"]],{\"statements\":[],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components-examples/ui-message/settings-example.hbs" } });
});
define("dummy/templates/components/advlimit-dialog-content", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "QYKG8qPL", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[11,\"class\",[27,[\"ui form \",[22,[\"appState\",\"state\"]]]]],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"flexberry-colsconfig content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui action input flexberry-advlimit-input\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-textarea\",null,[[\"value\",\"class\",\"rows\"],[[22,[\"model\",\"advLimit\"]],[22,[\"class\"]],\"10\"]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui action input flexberry-advlimit-input\"],[8],[0,\"\\n      \"],[1,[26,\"input\",null,[[\"type\",\"class\",\"value\",\"placeholder\"],[\"input\",\"setting-name-input fluid\",[22,[\"model\",\"advLimitName\"]],[26,\"t\",[\"components.advlimit-dialog-content.enter-limit-name\"],null]]]],false],[0,\"\\n\"],[4,\"if\",[[22,[\"advLimit\",\"isAdvLimitServiceEnabled\"]]],null,{\"statements\":[[0,\"        \"],[6,\"div\"],[11,\"class\",[27,[\"ui small button cols-config-save\",[26,\"unless\",[[22,[\"model\",\"advLimitName\"]],\" disabled\"],null]]]],[3,\"action\",[[21,0,[]],\"saveAdvLimit\"]],[8],[0,\"\\n          \"],[1,[26,\"t\",[\"components.advlimit-dialog-content.save\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[6,\"div\"],[10,\"class\",\"ui right floated button cols-config-apply\"],[3,\"action\",[[21,0,[]],\"apply\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.advlimit-dialog-content.use\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"ui button cols-config-check\"],[3,\"action\",[[21,0,[]],\"check\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.advlimit-dialog-content.check\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[1,[26,\"ui-message\",null,[[\"type\",\"visible\",\"caption\",\"message\",\"closeable\"],[[22,[\"message\",\"type\"]],[22,[\"message\",\"visible\"]],[22,[\"message\",\"caption\"]],[22,[\"message\",\"message\"]],[22,[\"message\",\"closeable\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/advlimit-dialog-content.hbs" } });
});
define("dummy/templates/components/colsconfig-dialog-content", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "ZX5Codfp", "block": "{\"symbols\":[\"colDesc\",\"n\"],\"statements\":[[6,\"div\"],[11,\"class\",[27,[\"ui form \",[22,[\"appState\",\"state\"]]]]],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"flexberry-colsconfig content\"],[8],[0,\"\\n      \"],[6,\"table\"],[10,\"class\",\"ui unstackable fixed selectable celled table\"],[8],[6,\"thead\"],[8],[6,\"tr\"],[8],[6,\"th\"],[10,\"class\",\"show-columns\"],[11,\"title\",[27,[[26,\"t\",[\"components.colsconfig-dialog-content.dont-show-columns\"],null]]]],[10,\"style\",\"cursor:default\"],[8],[6,\"i\"],[10,\"class\",\"large hide icon\"],[8],[9],[9],[6,\"th\"],[10,\"class\",\"columns-order\"],[10,\"style\",\"cursor:default\"],[8],[6,\"i\"],[10,\"class\",\"large sort icon\"],[11,\"title\",[27,[[26,\"t\",[\"components.colsconfig-dialog-content.columns-order\"],null]]]],[8],[9],[9],[6,\"th\"],[11,\"title\",[27,[[26,\"t\",[\"components.colsconfig-dialog-content.column-name\"],null]]]],[10,\"style\",\"cursor:default\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.column-name\"],null],false],[9],[6,\"th\"],[10,\"class\",\"sort-direction\"],[11,\"title\",[27,[[26,\"t\",[\"components.colsconfig-dialog-content.sort-direction\"],null]]]],[10,\"style\",\"cursor:default\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.sort-direction-caption\"],null],false],[9],[6,\"th\"],[10,\"class\",\"sort-priority\"],[11,\"title\",[27,[[26,\"t\",[\"components.colsconfig-dialog-content.sort-priority\"],null]]]],[10,\"style\",\"cursor:default\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.sort-priority-caption\"],null],false],[9],[6,\"th\"],[10,\"class\",\"column-width\"],[11,\"title\",[27,[[26,\"t\",[\"components.colsconfig-dialog-content.column-width\"],null]]]],[10,\"style\",\"cursor:default\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.column-width-caption\"],null],false],[9],[9],[9],[6,\"tbody\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"model\",\"colDescs\"]]],null,{\"statements\":[[0,\"          \"],[6,\"tr\"],[11,\"propName\",[27,[[21,1,[\"propName\"]]]]],[8],[0,\"\\n\\n            \"],[6,\"td\"],[8],[0,\"\\n              \"],[6,\"i\"],[11,\"class\",[27,[\"large \",[26,\"if\",[[21,1,[\"hide\"]],\"hide\",\"unhide\"],null],\" icon\"]]],[10,\"colsConfigHidden\",\"false\"],[10,\"style\",\"cursor:pointer\"],[3,\"action\",[[21,0,[]],\"invertVisibility\",[21,2,[]]]],[8],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[6,\"td\"],[8],[0,\"\\n              \"],[6,\"button\"],[11,\"class\",[27,[\"ui icon tiny button\",[26,\"if\",[[26,\"eq\",[[21,2,[]],0],null],\" disabled\"],null]]]],[3,\"action\",[[21,0,[]],\"rowUp\",[21,2,[]]]],[8],[6,\"i\"],[10,\"class\",\"chevron up icon\"],[8],[9],[9],[6,\"button\"],[11,\"class\",[27,[\"ui icon tiny button row-down-button no-margin\",[26,\"if\",[[26,\"eq\",[[21,1,[]],[22,[\"model\",\"colDescs\",\"lastObject\"]]],null],\" disabled\"],null]]]],[3,\"action\",[[21,0,[]],\"rowDown\",[21,2,[]]]],[8],[0,\"\\n                \"],[6,\"i\"],[10,\"class\",\"chevron down icon\"],[8],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[6,\"td\"],[11,\"class\",[27,[[26,\"if\",[[21,1,[\"hide\"]],\"disabled\"],null]]]],[8],[0,\"\\n              \"],[4,\"if\",[[22,[\"model\",\"exportParams\",\"isExportExcel\"]]],null,{\"statements\":[[1,[26,\"input\",null,[[\"class\",\"value\"],[[26,\"if\",[[21,1,[\"hide\"]],\"disabled\"],null],[21,1,[\"name\"]]]]],false]],\"parameters\":[]},{\"statements\":[[1,[21,1,[\"name\"]],false]],\"parameters\":[]}],[0,\"\\n            \"],[9],[0,\"\\n            \"],[6,\"td\"],[10,\"class\",\"sort-direction-cell\"],[8],[0,\"\\n              \"],[6,\"div\"],[11,\"class\",[27,[[26,\"concat\",[\"ui compact selection dropdown sort-direction-dropdown\",[26,\"if\",[[21,1,[\"hide\"]],\" disabled\",\"\"],null],[26,\"if\",[[21,1,[\"isHasMany\"]],\" hidden\",\"\"],null]],null]]]],[8],[0,\"\\n                \"],[6,\"i\"],[10,\"class\",\"dropdown icon\"],[8],[9],[0,\"\\n                \"],[6,\"div\"],[10,\"class\",\"default text\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.sort-direction-none\"],null],false],[9],[0,\"\\n                \"],[6,\"div\"],[10,\"class\",\"menu\"],[8],[0,\"\\n                  \"],[6,\"div\"],[10,\"class\",\"item\"],[10,\"data-value\",\"0\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.sort-direction-none\"],null],false],[9],[0,\"\\n                  \"],[6,\"div\"],[10,\"class\",\"item\"],[10,\"data-value\",\"1\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.sort-direction-asc\"],null],false],[9],[0,\"\\n                  \"],[6,\"div\"],[10,\"class\",\"item\"],[10,\"data-value\",\"-1\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.sort-direction-desc\"],null],false],[9],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[6,\"td\"],[11,\"class\",[27,[[26,\"if\",[[21,1,[\"hide\"]],\"disabled\",\"\"],null]]]],[8],[0,\"\\n              \"],[6,\"div\"],[11,\"class\",[27,[\"ui input \",[26,\"if\",[[21,1,[\"hide\"]],\"disabled\",\"\"],null]]]],[8],[0,\"\\n                \"],[1,[26,\"input\",null,[[\"size\",\"class\",\"value\"],[\"2\",[26,\"concat\",[\"sort-priority-input\",[26,\"if\",[[21,1,[\"sortOrder\"]],\"\",\" hidden\"],null]],null],[21,1,[\"sortPriority\"]]]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[6,\"td\"],[11,\"class\",[27,[[26,\"if\",[[21,1,[\"hide\"]],\"disabled\",\"\"],null]]]],[8],[0,\"\\n              \"],[6,\"div\"],[11,\"class\",[27,[\"ui input \",[26,\"if\",[[26,\"or\",[[21,1,[\"hide\"]],[26,\"or\",[[22,[\"model\",\"exportParams\",\"isExportExcel\"]],[26,\"or\",[[21,1,[\"fixed\"]],[26,\"not\",[[22,[\"model\",\"saveColWidthState\"]]],null]],null]],null]],null],\"disabled\",\"\"],null]]]],[8],[0,\"\\n                \"],[1,[26,\"input\",null,[[\"size\",\"class\",\"value\"],[\"2\",\"column-width-input\",[21,1,[\"columnWidth\"]]]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[9],[0,\"\\n\"]],\"parameters\":[1,2]},null],[0,\"        \"],[9],[6,\"tfoot\"],[10,\"class\",\"full-width\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"exportParams\",\"isExportExcel\"]]],null,{\"statements\":[[0,\"          \"],[6,\"tr\"],[8],[6,\"th\"],[10,\"colspan\",\"6\"],[8],[0,\"\\n              \"],[1,[26,\"flexberry-checkbox\",null,[[\"label\",\"value\"],[[26,\"t\",[\"components.colsconfig-dialog-content.det-separate-cols\"],null],[22,[\"model\",\"exportParams\",\"detSeparateCols\"]]]]],false],[0,\"\\n              \"],[1,[26,\"flexberry-checkbox\",null,[[\"label\",\"value\"],[[26,\"t\",[\"components.colsconfig-dialog-content.det-separate-rows\"],null],[22,[\"model\",\"exportParams\",\"detSeparateRows\"]]]]],false],[0,\"\\n            \"],[9],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[6,\"tr\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"model\",\"exportParams\",\"isExportExcel\"]],\"hidden\",\"\"],null]]]],[8],[6,\"th\"],[10,\"colspan\",\"5\"],[10,\"style\",\"text-align:right\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.col-width-on\"],null],false],[9],[6,\"th\"],[8],[0,\"\\n              \"],[1,[26,\"flexberry-checkbox\",null,[[\"class\",\"value\"],[\"toggle\",[22,[\"model\",\"saveColWidthState\"]]]]],false],[0,\"\\n            \"],[9],[9],[6,\"tr\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"model\",\"exportParams\",\"isExportExcel\"]],\"hidden\",\"\"],null]]]],[8],[6,\"th\"],[10,\"colspan\",\"5\"],[10,\"style\",\"text-align:right\"],[8],[1,[26,\"t\",[\"components.colsconfig-dialog-content.per-page\"],null],false],[9],[6,\"th\"],[8],[0,\"\\n              \"],[6,\"div\"],[10,\"class\",\"ui input\"],[8],[0,\"\\n                \"],[1,[26,\"input\",null,[[\"size\",\"class\",\"value\"],[\"2\",\"per-page-input\",[22,[\"model\",\"perPageValue\"]]]]],false],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[9],[6,\"tr\"],[8],[6,\"th\"],[10,\"colspan\",\"4\"],[8],[0,\"\\n              \"],[6,\"div\"],[10,\"class\",\"ui action input\"],[8],[0,\"\\n                \"],[1,[26,\"input\",null,[[\"type\",\"class\",\"value\",\"placeholder\"],[\"input\",\"setting-name-input\",[22,[\"model\",\"settingName\"]],[26,\"t\",[\"components.colsconfig-dialog-content.enter-setting-name\"],null]]]],false],[0,\"\\n                \"],[6,\"div\"],[11,\"class\",[27,[\"ui small button cols-config-save\",[26,\"unless\",[[22,[\"model\",\"settingName\"]],\" disabled\"],null]]]],[3,\"action\",[[21,0,[]],\"saveColsSetting\"]],[8],[0,\"\\n                  \"],[1,[26,\"t\",[\"components.colsconfig-dialog-content.save\"],null],false],[0,\"\\n                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n            \"],[6,\"th\"],[10,\"colspan\",\"2\"],[8],[0,\"\\n              \"],[6,\"div\"],[10,\"class\",\"ui right floated button cols-config-apply\"],[3,\"action\",[[21,0,[]],\"apply\"]],[8],[1,[26,\"if\",[[22,[\"model\",\"exportParams\",\"isExportExcel\"]],[26,\"t\",[\"components.colsconfig-dialog-content.export\"],null],[26,\"t\",[\"components.colsconfig-dialog-content.use\"],null]],null],false],[9],[0,\"\\n            \"],[9],[9],[9],[9],[0,\"\\n      \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\"],[[22,[\"type\"]],[22,[\"closeable\"]],[22,[\"visible\"]],[22,[\"caption\"]],[22,[\"message\"]]]]],false],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"hidden download-anchor\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs" } });
});
define("dummy/templates/components/css-picker", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "QLKmrv7R", "block": "{\"symbols\":[\"item\"],\"statements\":[[4,\"each\",[[22,[\"_items\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[8],[0,\"\\n    \"],[1,[26,\"input\",null,[[\"type\",\"name\",\"checked\",\"change\"],[\"checkbox\",[21,1,[\"name\"]],[21,1,[\"checked\"]],[26,\"action\",[[21,0,[]],\"onChange\"],[[\"preventDefault\"],[false]]]]]],false],[0,\"\\n    \"],[6,\"label\"],[8],[1,[21,1,[\"name\"]],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/css-picker.hbs" } });
});
define("dummy/templates/components/filters-dialog-content", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "NMky3yCI", "block": "{\"symbols\":[\"column\"],\"statements\":[[6,\"div\"],[10,\"class\",\"ui form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"flexberry-colsconfig content\"],[8],[0,\"\\n      \"],[6,\"table\"],[10,\"class\",\"ui unstackable fixed selectable celled table\"],[8],[0,\"\\n\\n        \"],[6,\"thead\"],[10,\"class\",\"full-width\"],[8],[0,\"\\n          \"],[6,\"tr\"],[8],[0,\"\\n            \"],[6,\"th\"],[8],[1,[26,\"t\",[\"components.filters-dialog-content.column-name\"],null],false],[9],[0,\"\\n            \"],[6,\"th\"],[10,\"class\",\"filter-dropdown\"],[8],[1,[26,\"t\",[\"components.filters-dialog-content.column-condition\"],null],false],[9],[0,\"\\n            \"],[6,\"th\"],[10,\"class\",\"filter-input\"],[8],[1,[26,\"t\",[\"components.filters-dialog-content.column-value\"],null],false],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[6,\"tbody\"],[10,\"class\",\"full-width\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"_filterColumnsWithoutEnter\"]]],null,{\"statements\":[[0,\"            \"],[6,\"tr\"],[10,\"class\",\"object-list-view-filters\"],[8],[0,\"\\n              \"],[6,\"th\"],[10,\"class\",\"full-width\"],[8],[0,\"\\n                  \"],[1,[21,1,[\"header\"]],false],[0,\"\\n              \"],[9],[0,\"\\n              \"],[6,\"th\"],[8],[0,\"\\n                \"],[6,\"td\"],[10,\"class\",\"overflowed-cell\"],[8],[0,\"\\n\"],[4,\"if\",[[21,1,[\"filter\",\"conditions\"]]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"component\",[\"flexberry-dropdown\"],[[\"value\",\"items\",\"placeholder\",\"needChecksOnValue\"],[[21,1,[\"filter\",\"condition\"]],[21,1,[\"filter\",\"conditions\"]],\"\",false]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n              \"],[6,\"th\"],[8],[0,\"\\n                \"],[6,\"td\"],[10,\"class\",\"overflowed-cell\"],[8],[0,\"\\n\"],[4,\"if\",[[21,1,[\"filter\",\"component\",\"name\"]]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"component\",[[21,1,[\"filter\",\"component\",\"name\"]]],[[\"value\",\"dynamicProperties\"],[[21,1,[\"filter\",\"pattern\"]],[21,1,[\"filter\",\"component\",\"properties\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"                \"],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"        \"],[9],[0,\"\\n        \\n        \"],[6,\"tfoot\"],[10,\"class\",\"full-width\"],[8],[0,\"\\n          \"],[6,\"tr\"],[8],[0,\"\\n            \"],[6,\"th\"],[10,\"colspan\",\"2\"],[8],[0,\"\\n              \"],[6,\"div\"],[10,\"class\",\"ui right floated button cols-config-apply\"],[3,\"action\",[[21,0,[]],\"applyFilters\"]],[8],[1,[26,\"t\",[\"components.filters-dialog-content.apply\"],null],false],[9],[0,\"\\n              \"],[6,\"div\"],[10,\"class\",\"ui right floated button cols-config-apply\"],[3,\"action\",[[21,0,[]],\"clearFiltersFields\"]],[8],[1,[26,\"t\",[\"components.filters-dialog-content.clear\"],null],false],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/filters-dialog-content.hbs" } });
});
define("dummy/templates/components/flexberry-button", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "TZSxY56b", "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[22,[\"_hasIcon\"]]],null,{\"statements\":[[0,\"  \"],[6,\"i\"],[11,\"class\",[27,[[20,\"iconClass\"]]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"_hasCaption\"]]],null,{\"statements\":[[0,\"  \"],[1,[20,\"caption\"],false],[0,\"\\n\"]],\"parameters\":[]},null],[13,1],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-button.hbs" } });
});
define("dummy/templates/components/flexberry-checkbox", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "5O7v3u7b", "block": "{\"symbols\":[],\"statements\":[[6,\"input\"],[10,\"class\",\"flexberry-checkbox-input\"],[10,\"type\",\"checkbox\"],[8],[9],[0,\"\\n\"],[6,\"label\"],[10,\"class\",\"flexberry-checkbox-label\"],[8],[1,[20,\"label\"],false],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-checkbox.hbs" } });
});
define("dummy/templates/components/flexberry-colorpicker", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "z7028GOd", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"input\",null,[[\"class\",\"type\",\"value\"],[[22,[\"flexberryClassNames\",\"input\"]],\"hidden\",[26,\"get\",[[21,0,[]],\"value\"],null]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-colorpicker.hbs" } });
});
define("dummy/templates/components/flexberry-ddau-checkbox", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "yHvWV+V0", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"input\",null,[[\"class\",\"type\",\"checked\"],[[22,[\"flexberryClassNames\",\"checkboxInput\"]],\"checkbox\",[26,\"get\",[[21,0,[]],\"value\"],null]]]],false],[0,\"\\n\"],[6,\"label\"],[11,\"class\",[22,[\"flexberryClassNames\",\"checkboxCaption\"]],null],[8],[0,\"\\n  \"],[1,[20,\"caption\"],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-ddau-checkbox.hbs" } });
});
define("dummy/templates/components/flexberry-ddau-slider", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "lj7jJio5", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"ui-slider\",null,[[\"value\",\"defaultValue\",\"min\",\"max\",\"step\",\"disabled\",\"immediateResponse\",\"tooltip\"],[[26,\"get\",[[21,0,[]],\"value\"],null],[22,[\"defaultValue\"]],[22,[\"min\"]],[22,[\"max\"]],[22,[\"step\"]],[22,[\"readonly\"]],false,\"hide\"]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-ddau-slider.hbs" } });
});
define("dummy/templates/components/flexberry-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "3MghKnxq", "block": "{\"symbols\":[\"&default\"],\"statements\":[[6,\"i\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"closeButton\"]],\" close icon\"]]],[8],[9],[0,\"\\n\"],[6,\"div\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"header\"]],\" header\"]]],[8],[0,\"\\n  \"],[1,[20,\"caption\"],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"content\"]],\" content \",[20,\"contentClass\"]]]],[8],[0,\"\\n  \"],[1,[20,\"content\"],false],[0,\"\\n  \"],[13,1],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"toolbar\"]],\" actions\"]]],[8],[0,\"\\n  \"],[1,[26,\"flexberry-button\",null,[[\"class\",\"caption\"],[[26,\"concat\",[[22,[\"flexberryClassNames\",\"approveButton\"]],\" approve positive\"],null],[22,[\"approveButtonCaption\"]]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-button\",null,[[\"class\",\"caption\"],[[26,\"concat\",[[22,[\"flexberryClassNames\",\"cancelButton\"]],\" deny negative\"],null],[22,[\"denyButtonCaption\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-dialog.hbs" } });
});
define("dummy/templates/components/flexberry-dropdown", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "PAWOUZJc", "block": "{\"symbols\":[\"key\",\"itemValue\",\"&default\"],\"statements\":[[4,\"if\",[[22,[\"isSearch\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"isSearchReadOnly\"]]],null,{\"statements\":[[0,\"    \"],[6,\"input\"],[10,\"class\",\"search\"],[10,\"autocomplete\",\"off\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[6,\"input\"],[10,\"class\",\"search\"],[10,\"autocomplete\",\"off\"],[10,\"readonly\",\"\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"\\n\"],[6,\"i\"],[10,\"class\",\"dropdown icon\"],[8],[9],[0,\"\\n\"],[6,\"div\"],[11,\"class\",[27,[[26,\"unless\",[[22,[\"value\"]],\"default\"],null],\" text\"]]],[8],[1,[20,\"text\"],false],[9],[0,\"\\n\"],[6,\"div\"],[11,\"class\",[27,[\"menu \",[26,\"if\",[[22,[\"canFixElement\"]],[22,[\"fixedElementClass\"]]],null]]]],[8],[0,\"\\n  \"],[13,3],[0,\"\\n\"],[4,\"each\",[[26,\"-each-in\",[[22,[\"items\"]]],null]],null,{\"statements\":[[0,\"    \"],[6,\"div\"],[11,\"class\",[27,[\"item \",[26,\"if\",[[26,\"eq\",[[22,[\"value\"]],[26,\"if\",[[22,[\"displayCaptions\"]],[21,1,[]],[21,2,[]]],null]],null],\"active selected\"],null]]]],[11,\"data-value\",[27,[[21,1,[]]]]],[8],[1,[21,2,[]],false],[9],[0,\"\\n\"]],\"parameters\":[1,2]},null],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-dropdown.hbs" } });
});
define("dummy/templates/components/flexberry-error", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "2VO/nQHa", "block": "{\"symbols\":[\"e\",\"e\",\"err\"],\"statements\":[[4,\"if\",[[22,[\"error\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"modal\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useOkButton\",\"settings\"],[[26,\"t\",[\"components.flexberry-error.caption\"],null],false,[26,\"hash\",null,[[\"context\",\"onHidden\"],[[22,[\"modalContext\"]],[26,\"action\",[[21,0,[]],\"close\"],null]]]]]],{\"statements\":[[0,\"      \"],[6,\"h2\"],[10,\"class\",\"ui header\"],[8],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[22,[\"_errorIsArray\"]],[22,[\"_messageIsNotSpecified\"]]],null]],null,{\"statements\":[[0,\"          \"],[6,\"div\"],[10,\"class\",\"ui bulleted list\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"error\"]]],null,{\"statements\":[[4,\"if\",[[26,\"eq\",[[21,3,[\"state\"]],\"rejected\"],null]],null,{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"item\"],[8],[1,[21,3,[\"reason\",\"message\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[3]},null],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"error\",\"messageLocaleKey\"]]],null,{\"statements\":[[0,\"          \"],[1,[26,\"t\",[[22,[\"error\",\"messageLocaleKey\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"error\",\"message\"]]],null,{\"statements\":[[0,\"          \"],[1,[22,[\"error\",\"message\"]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[26,\"t\",[\"components.flexberry-error.unknown-error\"],null],false],[0,\"\\n        \"]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"error\",\"errors\"]]],null,{\"statements\":[[4,\"flexberry-toggler\",null,[[\"caption\"],[[26,\"t\",[\"components.flexberry-error.show-more\"],null]]],{\"statements\":[[4,\"each\",[[22,[\"error\",\"errors\"]]],null,{\"statements\":[[0,\"            \"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[0,\"\\n\"],[4,\"if\",[[21,2,[\"messageLocaleKey\"]]],null,{\"statements\":[[0,\"                \"],[1,[26,\"t\",[[21,2,[\"messageLocaleKey\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[21,2,[\"message\"]]],null,{\"statements\":[[0,\"                \"],[1,[21,2,[\"message\"]],false],[0,\"\\n              \"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n            \"],[6,\"pre\"],[8],[1,[21,2,[\"stack\"]],false],[9],[0,\"\\n\"]],\"parameters\":[2]},null]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"ui-message\",null,[[\"type\",\"onHide\",\"closeable\"],[\"negative\",[26,\"action\",[[21,0,[]],\"close\"],null],true]],{\"statements\":[[0,\"      \"],[6,\"h2\"],[10,\"class\",\"ui header\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"error\",\"messageLocaleKey\"]]],null,{\"statements\":[[0,\"          \"],[1,[26,\"t\",[[22,[\"error\",\"messageLocaleKey\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"error\",\"message\"]]],null,{\"statements\":[[0,\"          \"],[1,[22,[\"error\",\"message\"]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[26,\"t\",[\"components.flexberry-error.unknown-error\"],null],false],[0,\"\\n        \"]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"error\",\"errors\"]]],null,{\"statements\":[[4,\"flexberry-toggler\",null,[[\"caption\"],[[26,\"t\",[\"components.flexberry-error.show-more\"],null]]],{\"statements\":[[4,\"each\",[[22,[\"error\",\"errors\"]]],null,{\"statements\":[[0,\"            \"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[0,\"\\n\"],[4,\"if\",[[21,1,[\"messageLocaleKey\"]]],null,{\"statements\":[[0,\"                \"],[1,[26,\"t\",[[21,1,[\"messageLocaleKey\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[21,1,[\"message\"]]],null,{\"statements\":[[0,\"                \"],[1,[21,1,[\"message\"]],false],[0,\"\\n              \"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n            \"],[6,\"pre\"],[8],[1,[21,1,[\"stack\"]],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-error.hbs" } });
});
define("dummy/templates/components/flexberry-field", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "D7nWP/2M", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"label\"]]],null,{\"statements\":[[6,\"label\"],[8],[1,[20,\"label\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[1,[26,\"flexberry-textbox\",null,[[\"class\",\"type\",\"value\",\"readonly\",\"required\",\"placeholder\",\"maxlength\"],[[22,[\"class\"]],[22,[\"type\"]],[22,[\"value\"]],[26,\"if\",[[22,[\"readonly\"]],\"readonly\"],null],[22,[\"required\"]],[22,[\"placeholder\"]],[22,[\"maxlength\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-field.hbs" } });
});
define("dummy/templates/components/flexberry-file", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "vkH9fdma", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[11,\"class\",[27,[\"ui \",[20,\"inputClass\"],\" action input\"]]],[8],[0,\"\\n  \"],[6,\"input\"],[10,\"name\",\"files[]\"],[11,\"id\",[20,\"_fileInputId\"],null],[10,\"class\",\"flexberry-file-file-input\"],[10,\"style\",\"display:none\"],[10,\"type\",\"file\"],[8],[9],[0,\"\\n\"],[0,\"  \"],[1,[26,\"input\",null,[[\"type\",\"class\",\"readonly\",\"placeholder\",\"value\"],[\"text\",\"flexberry-file-filename-input\",\"readonly\",[22,[\"placeholder\"]],[26,\"get\",[[21,0,[]],\"_fileName\"],null]]]],false],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"_addButtonIsVisible\"]]],null,{\"statements\":[[0,\"      \"],[6,\"label\"],[11,\"class\",[27,[\"flexberry-file-add-button ui icon \",[20,\"buttonClass\"],\" \",[26,\"unless\",[[22,[\"_addButtonIsEnabled\"]],\"disabled\"],null],\" \",[26,\"if\",[[22,[\"_hasFile\"]],\"hidden\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-file.add-button-title\"],null],null],[11,\"for\",[20,\"_fileInputId\"],null],[3,\"action\",[[21,0,[]],\"addButtonClick\"],[[\"on\",\"preventDefault\"],[\"click\",false]]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"add outline square icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"_removeButtonIsVisible\"]]],null,{\"statements\":[[0,\"      \"],[6,\"label\"],[11,\"class\",[27,[\"flexberry-file-remove-button ui icon \",[20,\"buttonClass\"],\" \",[26,\"unless\",[[22,[\"_removeButtonIsEnabled\"]],\"disabled\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-file.remove-button-title\"],null],null],[3,\"action\",[[21,0,[]],\"removeButtonClick\"],[[\"on\",\"preventDefault\"],[\"click\",false]]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"trash outline icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"_uploadButtonIsVisible\"]]],null,{\"statements\":[[0,\"      \"],[6,\"label\"],[11,\"class\",[27,[\"flexberry-file-upload-button ui icon \",[20,\"buttonClass\"],\" \",[26,\"unless\",[[22,[\"_uploadButtonIsEnabled\"]],\"disabled\"],null],\" \",[26,\"if\",[[22,[\"_uploadIsInProgress\"]],\"loading\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-file.upload-button-title\"],null],null],[3,\"action\",[[21,0,[]],\"uploadButtonClick\"],[[\"on\",\"preventDefault\"],[\"click\",false]]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"upload outline icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[4,\"if\",[[22,[\"_downloadButtonIsVisible\"]]],null,{\"statements\":[[0,\"    \"],[6,\"label\"],[11,\"class\",[27,[\"flexberry-file-download-button ui icon \",[20,\"buttonClass\"],\" \",[26,\"unless\",[[22,[\"_downloadButtonIsEnabled\"]],\"disabled\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-file.download-button-title\"],null],null],[3,\"action\",[[21,0,[]],\"downloadButtonClick\"],[[\"on\",\"preventDefault\"],[\"click\",false]]],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"download outline icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[22,[\"showPreview\"]],[22,[\"_hasFile\"]]],null]],null,{\"statements\":[[4,\"if\",[[22,[\"_canLoadPreview\"]]],null,{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"flexberry-file-image-preview-wrapper ui segment\"],[3,\"action\",[[21,0,[]],\"viewLoadedImage\"]],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"_previewDownloadIsInProgress\"]]],null,{\"statements\":[[0,\"        \"],[6,\"img\"],[10,\"class\",\"flexberry-file-image-preview ui small centered image\"],[11,\"src\",[20,\"_previewImageAsBase64String\"],null],[11,\"alt\",[26,\"t\",[\"components.flexberry-file.preview-image-alternative-text\"],null],null],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[6,\"div\"],[11,\"class\",[27,[\"ui \",[26,\"if\",[[22,[\"_previewDownloadIsInProgress\"]],\"active\",\"disabled\"],null],\" loader\"]]],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[6,\"span\"],[8],[1,[20,\"_fileName\"],false],[9],[0,\" \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[20,\"_errorPreviewCaption\"],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[6,\"div\"],[10,\"class\",\"flexberry-file-download-iframes-container\"],[10,\"style\",\"display: none;\"],[8],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"flexberry-file-error-modal-dialog ui tiny modal\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui header\"],[8],[0,\"\\n    \"],[1,[20,\"_errorModalDialogCaption\"],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-file-error-modal-dialog-content\"],[8],[0,\"\\n      \"],[1,[20,\"_errorModalDialogContent\"],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"flexberry-file-error-modal-dialog-button actions\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui button primary flexberry-file-error-modal-dialog-ok-button approve\"],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"checkmark icon\"],[8],[9],[0,\"\\n      \"],[1,[26,\"t\",[\"components.flexberry-file.error-dialog-ok-button-caption\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-file.hbs" } });
});
define("dummy/templates/components/flexberry-groupedit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "CBF7mRxm", "block": "{\"symbols\":[\"@configurateSelectedRows\",\"@configurateRow\",\"@addColumnToSorting\",\"@sortByColumn\"],\"statements\":[[1,[26,\"groupedit-toolbar\",null,[[\"componentName\",\"readonly\",\"buttonClass\",\"createNewButton\",\"deleteButton\",\"defaultSettingsButton\",\"confirmDeleteRows\",\"sorting\",\"customButtonAction\",\"customButtons\",\"orderedProperty\"],[[22,[\"componentName\"]],[22,[\"readonly\"]],[22,[\"buttonClass\"]],[22,[\"createNewButton\"]],[22,[\"deleteButton\"]],[22,[\"defaultSettingsButton\"]],[22,[\"confirmDeleteRows\"]],[22,[\"sorting\"]],[26,\"action\",[[21,0,[]],\"customButtonAction\"],null],[22,[\"customButtons\"]],[22,[\"orderedProperty\"]]]]],false],[0,\"\\n\"],[1,[26,\"object-list-view\",null,[[\"class\",\"orderedProperty\",\"placeholder\",\"readonly\",\"buttonClass\",\"tableStriped\",\"columnsWidthAutoresize\",\"minAutoColumnWidth\",\"customTableClass\",\"cellComponent\",\"singleColumnCellComponent\",\"singleColumnHeaderTitle\",\"showValidationMessagesInRow\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\",\"sendMenuItemAction\",\"menuInRowAdditionalItems\",\"rowClickable\",\"orderable\",\"editOnSeparateRoute\",\"saveBeforeRouteLeave\",\"sorting\",\"modelName\",\"mainModelProjection\",\"modelProjection\",\"content\",\"sortByColumn\",\"addColumnToSorting\",\"action\",\"componentName\",\"allowColumnResize\",\"configurateRow\",\"confirmDeleteRow\",\"configurateSelectedRows\",\"beforeDeleteRecord\",\"searchForContentChange\",\"immediateDelete\",\"notUseUserSettings\",\"defaultSortingButton\",\"overflowedComponents\",\"fixedHeader\"],[\"groupedit-container\",[22,[\"orderedProperty\"]],[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"buttonClass\"]],[22,[\"tableStriped\"]],[22,[\"columnsWidthAutoresize\"]],[22,[\"minAutoColumnWidth\"]],[22,[\"customTableClass\"]],[22,[\"cellComponent\"]],[22,[\"singleColumnCellComponent\"]],[22,[\"singleColumnHeaderTitle\"]],[22,[\"showValidationMessagesInRow\"]],[22,[\"showAsteriskInRow\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditMenuItemInRow\"]],[22,[\"showDeleteMenuItemInRow\"]],[26,\"action\",[[21,0,[]],\"sendMenuItemAction\"],null],[22,[\"menuInRowAdditionalItems\"]],[22,[\"rowClickable\"]],[22,[\"orderable\"]],[22,[\"editOnSeparateRoute\"]],[22,[\"saveBeforeRouteLeave\"]],[22,[\"sorting\"]],[22,[\"modelName\"]],[22,[\"mainModelProjection\"]],[22,[\"modelProjection\"]],[22,[\"content\"]],[26,\"action\",[[21,0,[]],[26,\"if\",[[21,4,[]],[21,4,[]],\"sortByColumn\"],null]],null],[26,\"action\",[[21,0,[]],[26,\"if\",[[21,3,[]],[21,3,[]],\"addColumnToSorting\"],null]],null],[26,\"action\",[[21,0,[]],\"groupEditRowClick\"],null],[22,[\"componentName\"]],[22,[\"allowColumnResize\"]],[21,2,[]],[22,[\"confirmDeleteRow\"]],[21,1,[]],[22,[\"beforeDeleteRecord\"]],[22,[\"searchForContentChange\"]],false,[22,[\"notUseUserSettings\"]],[22,[\"defaultSortingButton\"]],[22,[\"overflowedComponents\"]],[22,[\"fixedHeader\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-groupedit.hbs" } });
});
define("dummy/templates/components/flexberry-icon", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "6q4ggPQg", "block": "{\"symbols\":[\"&default\"],\"statements\":[[13,1],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-icon.hbs" } });
});
define("dummy/templates/components/flexberry-jsonarea", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "pMhTtEa2", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"_showErrorMessage\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sexteen wide column\"],[8],[0,\"\\n      \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"_showErrorMessage\"]],[22,[\"_errorMessageCaption\"]],[22,[\"_errorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[26,\"not\",[[22,[\"readonly\"]]],null]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sexteen wide column\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-button\",null,[[\"class\",\"iconClass\",\"click\"],[[26,\"concat\",[[22,[\"flexberryClassNames\",\"editButton\"]],\" fluid\",[26,\"if\",[[22,[\"_isEditing\"]],\" positive\"],null]],null],[26,\"if\",[[22,[\"_isEditing\"]],\"checkmark icon\",\"edit icon\"],null],[26,\"action\",[[21,0,[]],\"onEditButtonClick\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"sexteen wide column\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-textarea\",null,[[\"class\",\"placeholder\",\"value\",\"readonly\"],[[26,\"concat\",[[22,[\"flexberryClassNames\",\"textarea\"]],\" fluid\"],null],[22,[\"placeholder\"]],[22,[\"_jsonText\"]],[26,\"not\",[[22,[\"_isEditing\"]]],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-jsonarea.hbs" } });
});
define("dummy/templates/components/flexberry-lookup", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "IVnIr9R/", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"dropdown\"]]],null,{\"statements\":[[0,\"  \"],[1,[26,\"flexberry-dropdown\",null,[[\"placeholder\",\"class\",\"value\",\"readonly\",\"needChecksOnValue\",\"isSearch\",\"isSearchReadOnly\",\"settings\"],[[22,[\"placeholder\"]],[26,\"concat\",[\"search \",[22,[\"dropdownClass\"]]],null],[22,[\"displayValue\"]],[26,\"if\",[[22,[\"readonly\"]],\"readonly\"],null],false,true,[22,[\"dropdownIsSearch\"]],[22,[\"_dropdownSettings\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[6,\"div\"],[11,\"class\",[27,[\"ui fluid action input \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"input\",null,[[\"type\",\"class\",\"placeholder\",\"value\",\"focusOut\",\"readonly\"],[\"text\",[26,\"concat\",[[26,\"concat\",[\"lookup-field \",[26,\"if\",[[22,[\"autocomplete\"]],\"prompt\"],null]],null],[26,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[22,[\"isBlocked\"]]],null],\" disabled\"],null]],null],[22,[\"placeholder\"]],[22,[\"displayValue\"]],[26,\"action\",[[21,0,[]],\"onInputFocusOut\"],null],[26,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"autocomplete\"]]],null]],null],\"readonly\"],null]]]],false],[0,\"\\n\"],[4,\"if\",[[22,[\"showPreviewButton\"]]],null,{\"statements\":[[4,\"if\",[[26,\"and\",[[22,[\"previewFormRoute\"]],[22,[\"value\"]]],null]],null,{\"statements\":[[0,\"        \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-preview \",[26,\"if\",[[22,[\"isBlocked\"]],\" disabled\"],null],\" \",[20,\"previewButtonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-lookup.preview-button-text\"],null],null],[11,\"type\",[26,\"if\",[[22,[\"autocomplete\"]],\"button\",\"\"],null],null],[3,\"action\",[[21,0,[]],\"preview\"]],[8],[0,\"\\n          \"],[1,[20,\"previewText\"],true],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"    \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-clear \",[26,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[22,[\"isBlocked\"]]],null],\" disabled\"],null],\" \",[20,\"removeButtonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-lookup.remove-button-text\"],null],null],[11,\"type\",[26,\"if\",[[22,[\"autocomplete\"]],\"button\",\"\"],null],null],[3,\"action\",[[21,0,[]],\"remove\",[22,[\"removeData\"]]]],[8],[0,\"\\n      \"],[1,[20,\"removeText\"],true],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-change \",[26,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[22,[\"isBlocked\"]]],null],\" disabled\"],null],\" \",[20,\"chooseButtonClass\"],\" \",[26,\"if\",[[26,\"or\",[[22,[\"modalIsBeforeToShow\"]],[22,[\"modalIsStartToShow\"]]],null],\" loading\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-lookup.choose-button-text\"],null],null],[11,\"type\",[26,\"if\",[[22,[\"autocomplete\"]],\"button\",\"\"],null],null],[3,\"action\",[[21,0,[]],\"choose\",[22,[\"chooseData\"]]]],[8],[0,\"\\n      \"],[1,[20,\"chooseText\"],true],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[22,[\"autocomplete\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[11,\"class\",[27,[\"results \",[26,\"if\",[[22,[\"canFixElement\"]],[22,[\"fixedElementClass\"]]],null]]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-lookup.hbs" } });
});
define("dummy/templates/components/flexberry-menu", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Szd72q4H", "block": "{\"symbols\":[\"item\"],\"statements\":[[4,\"each\",[[22,[\"items\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-menuitem\",null,[[\"tagName\",\"item\"],[\"\",[21,1,[]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-menu.hbs" } });
});
define("dummy/templates/components/flexberry-menuitem", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Hv5PPiUR", "block": "{\"symbols\":[\"item\",\"&default\"],\"statements\":[[4,\"if\",[[22,[\"titleIsBeforeIcon\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"item\",\"localeKey\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[8],[1,[26,\"t\",[[22,[\"item\",\"localeKey\"]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[6,\"span\"],[8],[1,[22,[\"item\",\"title\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[22,[\"item\",\"icon\"]]],null,{\"statements\":[[0,\"  \"],[6,\"i\"],[11,\"class\",[27,[[22,[\"item\",\"icon\"]]]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[26,\"not\",[[22,[\"titleIsBeforeIcon\"]]],null]],null,{\"statements\":[[4,\"if\",[[22,[\"item\",\"localeKey\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[8],[1,[26,\"t\",[[22,[\"item\",\"localeKey\"]]],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[6,\"span\"],[8],[1,[22,[\"item\",\"title\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[22,[\"hasSubitems\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"item\",\"itemsAlignment\"]],[22,[\"item\",\"itemsAlignment\"]]],null],\" menu\"]]],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"item\",\"items\"]]],null,{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-menuitem\",null,[[\"item\"],[[21,1,[]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[13,2],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-menuitem.hbs" } });
});
define("dummy/templates/components/flexberry-objectlistview", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "m3MtrIwF", "block": "{\"symbols\":[\"page\",\"@gotoPage\",\"@previousPage\",\"@nextPage\",\"@resetFilters\",\"@configurateSelectedRows\",\"@configurateRow\",\"@filterByAnyMatch\",\"@addColumnToSorting\",\"@sortByColumn\"],\"statements\":[[1,[26,\"olv-toolbar\",null,[[\"class\",\"createNewButton\",\"enableCreateNewButton\",\"refreshButton\",\"deleteButton\",\"colsConfigButton\",\"advLimitButton\",\"enableFilters\",\"exportExcelButton\",\"showFilters\",\"showFiltersInModal\",\"filters\",\"toggleStateFilters\",\"resetFilters\",\"filterButton\",\"filterText\",\"buttonClass\",\"enableDeleteButton\",\"inLookup\",\"componentName\",\"lookupComponentName\",\"modelController\",\"customButtonAction\",\"customButtons\",\"editFormRoute\",\"showConfigDialog\",\"showAdvLimitDialog\",\"confirmDeleteRows\",\"inHierarchicalMode\",\"inExpandMode\",\"availableHierarchicalMode\",\"availableCollExpandMode\",\"switchHierarchicalMode\",\"switchExpandMode\",\"readonly\",\"useSidePageMode\"],[\"ui secondary menu no-margin flexberry-olv-toolbar\",[22,[\"createNewButton\"]],[26,\"not\",[[22,[\"readonly\"]]],null],[22,[\"refreshButton\"]],[22,[\"deleteButton\"]],[22,[\"colsConfigButton\"]],[22,[\"advLimitButton\"]],[22,[\"enableFilters\"]],[22,[\"exportExcelButton\"]],[22,[\"_showFilters\"]],[22,[\"showFiltersInModal\"]],[22,[\"filters\"]],[26,\"action\",[[21,0,[]],\"toggleStateFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\",[21,5,[]]],null],[22,[\"filterButton\"]],[22,[\"filterText\"]],[22,[\"buttonClass\"]],[26,\"not\",[[22,[\"readonly\"]]],null],[26,\"eq\",[[22,[\"componentMode\"]],\"lookupform\"],null],[22,[\"componentName\"]],[22,[\"lookupComponentName\"]],[22,[\"currentController\"]],[26,\"action\",[[21,0,[]],\"customButtonAction\"],null],[22,[\"customButtons\"]],[22,[\"editFormRoute\"]],\"showConfigDialog\",\"showConfigDialog\",[22,[\"confirmDeleteRows\"]],[22,[\"inHierarchicalMode\"]],[22,[\"inExpandMode\"]],[22,[\"_availableHierarchicalMode\"]],[22,[\"availableCollExpandMode\"]],[26,\"action\",[[21,0,[]],\"switchHierarchicalMode\"],null],[26,\"action\",[[21,0,[]],\"switchExpandMode\"],null],[22,[\"readonly\"]],[22,[\"useSidePageMode\"]]]]],false],[0,\"\\n\"],[1,[26,\"object-list-view\",null,[[\"placeholder\",\"readonly\",\"columnsWidthAutoresize\",\"columnsResizeMode\",\"minAutoColumnWidth\",\"buttonClass\",\"tableStriped\",\"customTableClass\",\"cellComponent\",\"singleColumnCellComponent\",\"singleColumnHeaderTitle\",\"createNewByPrototype\",\"showValidationMessagesInRow\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showEditButtonInRow\",\"showPrototypeButtonInRow\",\"showDeleteButtonInRow\",\"showEditMenuItemInRow\",\"showPrototypeMenuItemInRow\",\"showDeleteMenuItemInRow\",\"sendMenuItemAction\",\"menuInRowAdditionalItems\",\"rowClickable\",\"orderable\",\"sorting\",\"immediateDelete\",\"modelName\",\"modelProjection\",\"content\",\"sortByColumn\",\"addColumnToSorting\",\"enableFilters\",\"showFilters\",\"showFiltersInModal\",\"filters\",\"applyFilters\",\"componentForFilter\",\"componentForFilterByCondition\",\"conditionsByType\",\"filterByAnyMatch\",\"filterByAnyWord\",\"filterByAllWords\",\"configurateRow\",\"configurateSelectedRows\",\"confirmDeleteRow\",\"beforeDeleteRecord\",\"action\",\"beforeDeleteAllRecords\",\"componentName\",\"allowColumnResize\",\"selectedRecord\",\"notUseUserSettings\",\"hierarchicalIndent\",\"inHierarchicalMode\",\"inExpandMode\",\"disableHierarchicalMode\",\"loadRecords\",\"availableHierarchicalMode\",\"useRowByRowLoading\",\"useRowByRowLoadingProgress\",\"eventsBus\",\"onEditForm\",\"customButtonInRowAction\",\"customButtonsInRow\",\"defaultSortingButton\",\"defaultLeftPadding\",\"overflowedComponents\",\"customParameters\",\"fixedHeader\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],[22,[\"columnsWidthAutoresize\"]],[22,[\"columnsResizeMode\"]],[22,[\"minAutoColumnWidth\"]],[22,[\"buttonClass\"]],[22,[\"tableStriped\"]],[22,[\"customTableClass\"]],[22,[\"cellComponent\"]],[22,[\"singleColumnCellComponent\"]],[22,[\"singleColumnHeaderTitle\"]],[26,\"action\",[[21,0,[]],\"createNewByPrototype\"],null],[26,\"and\",[[26,\"not\",[[22,[\"readonly\"]]],null],[22,[\"showValidationMessagesInRow\"]]],null],[22,[\"showAsteriskInRow\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showEditButtonInRow\"]],[22,[\"showPrototypeButtonInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditMenuItemInRow\"]],[22,[\"showPrototypeMenuItemInRow\"]],[22,[\"showDeleteMenuItemInRow\"]],[26,\"action\",[[21,0,[]],\"sendMenuItemAction\"],null],[22,[\"menuInRowAdditionalItems\"]],[26,\"and\",[[26,\"not\",[[22,[\"readonly\"]]],null],[22,[\"rowClickable\"]]],null],[22,[\"orderable\"]],[22,[\"sorting\"]],true,[22,[\"modelName\"]],[22,[\"modelProjection\"]],[22,[\"content\"]],[26,\"action\",[[21,0,[]],[26,\"if\",[[21,10,[]],[21,10,[]],\"sortByColumn\"],null]],null],[26,\"action\",[[21,0,[]],[26,\"if\",[[21,9,[]],[21,9,[]],\"addColumnToSorting\"],null]],null],[22,[\"enableFilters\"]],[22,[\"_showFilters\"]],[22,[\"showFiltersInModal\"]],[22,[\"filters\"]],[26,\"action\",[[21,0,[]],[26,\"if\",[[22,[\"applyFilters\"]],[22,[\"applyFilters\"]],\"applyFilters\"],null]],null],[22,[\"componentForFilter\"]],[22,[\"componentForFilterByCondition\"]],[22,[\"conditionsByType\"]],[26,\"action\",[[21,0,[]],[26,\"if\",[[21,8,[]],[21,8,[]],\"filterByAnyMatch\"],null]],null],[22,[\"filterByAnyWord\"]],[22,[\"filterByAllWords\"]],[21,7,[]],[21,6,[]],[22,[\"confirmDeleteRow\"]],[22,[\"beforeDeleteRecord\"]],[26,\"action\",[[21,0,[]],\"objectListViewRowClick\"],null],[22,[\"beforeDeleteAllRecords\"]],[22,[\"componentName\"]],[22,[\"allowColumnResize\"]],[22,[\"selectedRecord\"]],[22,[\"notUseUserSettings\"]],[22,[\"hierarchicalIndent\"]],[22,[\"inHierarchicalMode\"]],[22,[\"inExpandMode\"]],[26,\"if\",[[22,[\"hierarchyByAttribute\"]],true,[22,[\"disableHierarchicalMode\"]]],null],[26,\"action\",[[21,0,[]],\"loadRecords\"],null],[26,\"action\",[[21,0,[]],\"availableHierarchicalMode\"],null],[22,[\"useRowByRowLoading\"]],[22,[\"useRowByRowLoadingProgress\"]],[22,[\"eventsBus\"]],[22,[\"onEditForm\"]],\"customButtonInRowAction\",[22,[\"customButtonsInRow\"]],[22,[\"defaultSortingButton\"]],[22,[\"defaultLeftPadding\"]],[22,[\"overflowedComponents\"]],[22,[\"customParameters\"]],[22,[\"fixedHeader\"]]]]],false],[0,\"\\n\"],[4,\"if\",[[26,\"or\",[[26,\"not\",[[22,[\"inHierarchicalMode\"]]],null],[22,[\"hierarchyPaging\"]]],null]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui secondary menu no-margin nav-bar\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui basic buttons\"],[8],[0,\"\\n      \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[26,\"unless\",[[22,[\"hasPreviousPage\"]],\"disabled\"],null],\" button prev-page-button\"]]],[11,\"disabled\",[26,\"not\",[[22,[\"hasPreviousPage\"]]],null],null],[10,\"type\",\"button\"],[3,\"action\",[[21,0,[]],\"previousPage\",[21,3,[]]]],[8],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"each\",[[22,[\"pages\"]]],null,{\"statements\":[[4,\"if\",[[21,1,[\"isEllipsis\"]]],null,{\"statements\":[[0,\"          \"],[6,\"div\"],[10,\"class\",\"ui button\"],[8],[0,\"...\"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[21,1,[\"isCurrent\"]]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui disabled active button\"],[10,\"disabled\",\"\"],[10,\"type\",\"button\"],[8],[1,[21,1,[\"number\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button\"],[10,\"type\",\"button\"],[3,\"action\",[[21,0,[]],\"gotoPage\",[21,2,[]],[21,1,[\"number\"]]]],[8],[1,[21,1,[\"number\"]],false],[9],[0,\"\\n        \"]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[1]},null],[0,\"      \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[26,\"unless\",[[22,[\"hasNextPage\"]],\"disabled\"],null],\" button next-page-button\"]]],[11,\"disabled\",[26,\"not\",[[22,[\"hasNextPage\"]]],null],null],[10,\"type\",\"button\"],[3,\"action\",[[21,0,[]],\"nextPage\",[21,4,[]]]],[8],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[11,\"class\",[27,[\"ui action input search-field \",[26,\"if\",[[26,\"and\",[[22,[\"searchPageValue\"]],[22,[\"searchPageButtonReadonly\"]]],null],\"error\"],null]]]],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"block-action-input\"],[8],[0,\"\\n        \"],[1,[26,\"input\",null,[[\"type\",\"placeholder\",\"value\"],[\"number\",[26,\"t\",[\"components.flexberry-objectlistview.search-page-placeholder\"],null],[22,[\"searchPageValue\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"searchPageValue\"]]],null,{\"statements\":[[0,\"        \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[20,\"buttonClass\"],\" icon button \",[26,\"if\",[[22,[\"searchPageButtonReadonly\"]],\"disabled red\",\"primary\"],null],\" next-page-button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-objectlistview.search-button-text\"],null],null],[11,\"disabled\",[20,\"searchPageButtonReadonly\"],null],[3,\"action\",[[21,0,[]],\"searchPageButtonAction\",[21,2,[]],[22,[\"componentName\"]]]],[8],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"right menu\"],[8],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[22,[\"showShowingEntries\"]],[22,[\"recordsTotalCount\"]]],null]],null,{\"statements\":[[0,\"        \"],[6,\"div\"],[10,\"class\",\"showing-entries\"],[8],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[22,[\"currentIntervalRecords\"]],[22,[\"recordsTotalCount\"]]],null]],null,{\"statements\":[[0,\"            \"],[1,[26,\"concat\",[[26,\"t\",[\"components.flexberry-objectlistview.showing-entries.showing\"],null],[22,[\"currentIntervalRecords\"]],[26,\"t\",[\"components.flexberry-objectlistview.showing-entries.of\"],null],[22,[\"recordsTotalCount\"]],[26,\"t\",[\"components.flexberry-objectlistview.showing-entries.entries\"],null]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[1,[26,\"flexberry-dropdown\",null,[[\"needChecksOnValue\",\"items\",\"value\",\"class\",\"onChange\",\"settings\"],[false,[22,[\"perPageValues\"]],[22,[\"perPageValue\"]],\"compact selection\",[26,\"action\",[[21,0,[]],\"perPageClick\"],null],[26,\"hash\",null,[[\"direction\"],[\"upward\"]]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs" } });
});
define("dummy/templates/components/flexberry-sidebar", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "nr80nRvF", "block": "{\"symbols\":[\"&default\"],\"statements\":[[13,1]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-sidebar.hbs" } });
});
define("dummy/templates/components/flexberry-simpledatetime", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "E4VcFQ/m", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[26,\"and\",[[22,[\"currentTypeSupported\"]],[22,[\"useBrowserInput\"]]],null]],null,{\"statements\":[[0,\"  \"],[1,[26,\"input\",[[26,\"-input-type\",[[22,[\"type\"]]],null]],[[\"type\",\"readonly\",\"value\",\"min\",\"max\",\"placeholder\"],[[22,[\"type\"]],[22,[\"readonlyAttr\"]],[22,[\"_valueAsString\"]],[22,[\"_minAsString\"]],[22,[\"_maxAsString\"]],[22,[\"placeholder\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui fluid action input flatpickr\"],[8],[0,\"\\n    \"],[6,\"input\"],[11,\"placeholder\",[20,\"placeholder\"],null],[10,\"type\",\"text\"],[8],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"openButton\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"readonlyAttr\"]]],null,{\"statements\":[[0,\"        \"],[6,\"button\"],[10,\"class\",\"ui ui-open disabled button\"],[11,\"title\",[26,\"t\",[\"components.flexberry-datepicker.apply-button-text\"],null],null],[10,\"disabled\",\"disabled\"],[3,\"action\",[[21,0,[]],\"open\"],[[\"bubbles\"],[false]]],[8],[0,\"\\n          \"],[6,\"i\"],[11,\"class\",[27,[[20,\"type\"],\" icon\"]]],[8],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[6,\"button\"],[10,\"class\",\"ui ui-open button\"],[11,\"title\",[26,\"t\",[\"components.flexberry-datepicker.apply-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"open\"],[[\"bubbles\"],[false]]],[8],[0,\"\\n          \"],[6,\"i\"],[11,\"class\",[27,[[20,\"type\"],\" icon\"]]],[8],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[22,[\"removeButton\"]]],null,{\"statements\":[[0,\"      \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-clear \",[26,\"if\",[[22,[\"readonlyAttr\"]],\"disabled\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-lookup.remove-button-text\"],null],null],[11,\"disabled\",[20,\"readonlyAttr\"],null],[10,\"type\",\"button\"],[3,\"action\",[[21,0,[]],\"remove\"],[[\"bubbles\"],[false]]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"remove icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs" } });
});
define("dummy/templates/components/flexberry-sitemap-guideline", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "ZiC5RnWt", "block": "{\"symbols\":[\"node\",\"child\"],\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"link\"]]],null,{\"statements\":[[4,\"link-to\",[[22,[\"sitemap\",\"link\"]]],[[\"title\"],[[22,[\"sitemap\",\"title\"]]]],{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"title-item-menu\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"sitemap\",\"icon\"]]],null,{\"statements\":[[0,\"        \"],[6,\"i\"],[11,\"class\",[27,[\"icon \",[22,[\"sitemap\",\"icon\"]]]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[1,[22,[\"sitemap\",\"caption\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"caption\"]]],null,{\"statements\":[[0,\"    \"],[6,\"i\"],[10,\"class\",\"dropdown icon\"],[8],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"title-item-menu\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"sitemap\",\"icon\"]]],null,{\"statements\":[[0,\"        \"],[6,\"i\"],[11,\"class\",[27,[\"icon \",[22,[\"sitemap\",\"icon\"]]]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[1,[22,[\"sitemap\",\"caption\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"sitemap\",\"children\",\"length\"]]],null,{\"statements\":[[0,\"      \"],[6,\"div\"],[10,\"class\",\"menu\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"sitemap\",\"children\"]]],null,{\"statements\":[[0,\"          \"],[1,[26,\"flexberry-sitemap-guideline\",null,[[\"sitemap\",\"isDropDown\",\"classNames\"],[[21,2,[]],false,\"item\"]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"nodes\"]]],null,{\"statements\":[[4,\"each\",[[22,[\"sitemap\",\"nodes\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-sitemap-guideline\",null,[[\"sitemap\",\"isDropDown\"],[[21,1,[]],true]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-sitemap-guideline.hbs" } });
});
define("dummy/templates/components/flexberry-sitemap", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "uOP5hUfS", "block": "{\"symbols\":[\"node\",\"child\"],\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"link\"]]],null,{\"statements\":[[4,\"link-to\",[[22,[\"sitemap\",\"link\"]]],[[\"class\",\"title\"],[\"item\",[22,[\"sitemap\",\"title\"]]]],{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"title-item-menu\"],[3,\"action\",[[21,0,[]],\"menuToggle\"]],[8],[1,[22,[\"sitemap\",\"caption\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"caption\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"item item-menu\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"title-item-menu\"],[3,\"action\",[[21,0,[]],\"menuToggle\"]],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"sitemap\",\"children\",\"length\"]]],null,{\"statements\":[[0,\"        \"],[6,\"i\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"nodeIsOpen\"]],\"minus\",\"plus\"],null],\" square outline icon\"]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[1,[22,[\"sitemap\",\"caption\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"sitemap\",\"children\",\"length\"]]],null,{\"statements\":[[0,\"      \"],[6,\"div\"],[10,\"class\",\"menu subMenu hidden\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"sitemap\",\"children\"]]],null,{\"statements\":[[0,\"          \"],[1,[26,\"flexberry-sitemap\",null,[[\"sitemap\"],[[21,2,[]]]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"nodes\"]]],null,{\"statements\":[[4,\"each\",[[22,[\"sitemap\",\"nodes\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-sitemap\",null,[[\"sitemap\"],[[21,1,[]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-sitemap.hbs" } });
});
define("dummy/templates/components/flexberry-tab-bar", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "W0K8l4VK", "block": "{\"symbols\":[\"item\"],\"statements\":[[4,\"each\",[[22,[\"items\"]]],null,{\"statements\":[[0,\"  \"],[6,\"a\"],[11,\"class\",[27,[[26,\"concat\",[[22,[\"flexberryClassNames\",\"tab\"]],\" tab item \",[21,1,[\"class\"]],[26,\"if\",[[21,1,[\"active\"]],\" active\"],null]],null]]]],[11,\"title\",[27,[[21,1,[\"caption\"]]]]],[11,\"data-tab\",[27,[[21,1,[\"selector\"]]]]],[3,\"action\",[[21,0,[]],\"change\",[21,1,[]]],[[\"on\"],[\"click\"]]],[8],[0,\"\\n\"],[4,\"if\",[[21,1,[\"iconClass\"]]],null,{\"statements\":[[0,\"      \"],[6,\"i\"],[11,\"class\",[27,[[26,\"concat\",[[22,[\"flexberryClassNames\",\"tabIcon\"]],\" \",[21,1,[\"iconClass\"]]],null]]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[21,1,[\"caption\"]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs" } });
});
define("dummy/templates/components/flexberry-text-cell", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "lVXdvqnr", "block": "{\"symbols\":[\"&default\"],\"statements\":[[6,\"div\"],[10,\"class\",\"flexberry-text-cell oveflow-text\"],[11,\"title\",[20,\"titleValue\"],null],[8],[13,1],[1,[20,\"displayValue\"],false],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-text-cell.hbs" } });
});
define("dummy/templates/components/flexberry-textarea", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "o9/2el50", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"textarea\",null,[[\"value\",\"readonly\",\"required\",\"placeholder\",\"rows\",\"cols\",\"disabled\",\"maxlength\",\"selectionEnd\",\"selectionStart\",\"selectionDirection\",\"wrap\",\"autofocus\",\"spellcheck\"],[[22,[\"value\"]],[22,[\"readonly\"]],[22,[\"required\"]],[22,[\"placeholder\"]],[22,[\"rows\"]],[22,[\"cols\"]],[22,[\"disabled\"]],[22,[\"maxlength\"]],[22,[\"selectionEnd\"]],[22,[\"selectionStart\"]],[22,[\"selectionDirection\"]],[22,[\"wrap\"]],[22,[\"autofocus\"]],[22,[\"spellcheck\"]]]]],false]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-textarea.hbs" } });
});
define("dummy/templates/components/flexberry-textbox", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "qgavyCV9", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"  \"],[1,[26,\"input\",[[26,\"-input-type\",[[22,[\"type\"]]],null]],[[\"type\",\"value\",\"readonly\",\"required\",\"placeholder\",\"maxlength\"],[[22,[\"type\"]],[26,\"readonly\",[[22,[\"value\"]]],null],\"readonly\",[22,[\"required\"]],[22,[\"placeholder\"]],[22,[\"maxlength\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[1,[26,\"input\",[[26,\"-input-type\",[[22,[\"type\"]]],null]],[[\"type\",\"value\",\"required\",\"placeholder\",\"maxlength\"],[[22,[\"type\"]],[22,[\"value\"]],[22,[\"required\"]],[22,[\"placeholder\"]],[22,[\"maxlength\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-textbox.hbs" } });
});
define("dummy/templates/components/flexberry-toggler", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "03oht0Cp", "block": "{\"symbols\":[\"&default\"],\"statements\":[[6,\"div\"],[11,\"class\",[27,[\"title \",[26,\"if\",[[22,[\"expanded\"]],\"active\"],null]]]],[8],[0,\"\\n  \"],[6,\"i\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"iconClass\"]],[22,[\"iconClass\"]],\"dropdown icon\"],null]]]],[8],[9],[6,\"span\"],[10,\"class\",\"flexberry-toggler-caption\"],[8],[1,[20,\"currentCaption\"],false],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[11,\"class\",[27,[\"content flexberry-toggler-content \",[26,\"if\",[[22,[\"expanded\"]],\"active\"],null]]]],[8],[13,1],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-toggler.hbs" } });
});
define("dummy/templates/components/flexberry-tree", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "EWCIj5zk", "block": "{\"symbols\":[\"node\",\"&default\"],\"statements\":[[13,2],[0,\"\\n\\n\"],[4,\"yield-slot\",[\"header\"],null,{\"statements\":[[4,\"if\",[[22,[\"_hasHeader\"]]],null,{\"statements\":[[0,\"    \"],[6,\"div\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"header\"]]]]],[8],[0,\"\\n      \"],[13,2],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[4,\"if\",[[22,[\"_hasContent\"]]],null,{\"statements\":[[4,\"each\",[[22,[\"nodes\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-treenode\",null,[[\"caption\",\"nodes\",\"dynamicProperties\",\"dynamicActions\"],[[21,1,[\"caption\"]],[21,1,[\"nodes\"]],[21,1,[\"dynamicProperties\"]],[21,1,[\"dynamicActions\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[4,\"yield-slot\",[\"content\"],null,{\"statements\":[[0,\"    \"],[13,2],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"_isRoot\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"placeholder\"]],\" title\"]]],[8],[0,\"\\n    \"],[1,[20,\"placeholder\"],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[4,\"yield-slot\",[\"footer\"],null,{\"statements\":[[4,\"if\",[[22,[\"_hasFooter\"]]],null,{\"statements\":[[0,\"    \"],[6,\"div\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"footer\"]]]]],[8],[0,\"\\n      \"],[13,2],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-tree.hbs" } });
});
define("dummy/templates/components/flexberry-treenode", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "7IZbLBzC", "block": "{\"symbols\":[\"&default\"],\"statements\":[[13,1],[0,\"\\n\\n\"],[6,\"div\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"header\"]],\" title\"]]],[11,\"onclick\",[26,\"action\",[[21,0,[]],\"onHeaderClick\"],[[\"preventDefault\"],[false]]],null],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"_hasContent\"]]],null,{\"statements\":[[0,\"      \"],[6,\"i\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"expandCollapseIcon\"]],\" dropdown icon\"]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[6,\"i\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"expandCollapseIcon\"]],\" dropdown icon\"]]],[10,\"style\",\"visibility: hidden;\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"    \"],[1,[20,\"caption\"],false],[0,\"\\n\"],[4,\"yield-slot\",[\"header\"],null,{\"statements\":[[0,\"      \"],[13,1],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[6,\"div\"],[11,\"class\",[27,[[22,[\"flexberryClassNames\",\"content\"]],\" content\"]]],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"_hasNodes\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-tree\",null,[[\"nodes\"],[[22,[\"nodes\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"yield-slot\",[\"content\"],null,{\"statements\":[[0,\"    \"],[13,1],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-treenode.hbs" } });
});
define("dummy/templates/components/flexberry-validationmessage", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "UuRx0qIe", "block": "{\"symbols\":[],\"statements\":[[1,[20,\"error\"],false]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-validationmessage.hbs" } });
});
define("dummy/templates/components/flexberry-validationsummary", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "2B/Aqs8P", "block": "{\"symbols\":[\"error\"],\"statements\":[[4,\"if\",[[22,[\"header\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[20,\"header\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[6,\"ul\"],[10,\"class\",\"list\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"errors\"]]],null,{\"statements\":[[0,\"    \"],[6,\"li\"],[8],[1,[21,1,[]],false],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/flexberry-validationsummary.hbs" } });
});
define("dummy/templates/components/form-load-time-tracker", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "R7HK4o8O", "block": "{\"symbols\":[\"&default\"],\"statements\":[[1,[26,\"t\",[\"components.form-load-time-tracker.load-time\"],null],false],[0,\": \"],[1,[20,\"loadTime\"],false],[6,\"br\"],[8],[9],[0,\"\\n\"],[1,[26,\"t\",[\"components.form-load-time-tracker.render-time\"],null],false],[0,\": \"],[1,[20,\"renderTime\"],false],[6,\"br\"],[8],[9],[0,\"\\n\"],[13,1],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/form-load-time-tracker.hbs" } });
});
define("dummy/templates/components/groupedit-toolbar", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "sH+bElIs", "block": "{\"symbols\":[\"customButton\"],\"statements\":[[4,\"if\",[[22,[\"createNewButton\"]]],null,{\"statements\":[[0,\"  \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-add \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.groupedit-toolbar.add-button-text\"],null],null],[11,\"disabled\",[26,\"if\",[[22,[\"readonly\"]],true,null],null],null],[3,\"action\",[[21,0,[]],\"addRow\"]],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"plus icon\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"deleteButton\"]]],null,{\"statements\":[[0,\"  \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-delete \",[26,\"unless\",[[22,[\"_hasSelectedRows\"]],\"disabled\"],null],\" \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.groupedit-toolbar.delete-button-text\"],null],null],[11,\"disabled\",[26,\"or\",[[26,\"not\",[[22,[\"_hasSelectedRows\"]]],null],[22,[\"readonly\"]]],null],null],[3,\"action\",[[21,0,[]],\"deleteRows\"]],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"minus icon\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[26,\"and\",[[22,[\"defaultSettingsButton\"]],[26,\"not\",[[22,[\"orderedProperty\"]]],null]],null]],null,{\"statements\":[[0,\"  \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-clear-settings \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.groupedit-toolbar.clear-settings-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"setDefaultSettings\"]],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"configure icon\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[22,[\"arrowsButtons\"]]],null,{\"statements\":[[0,\"  \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-move-up \",[20,\"buttonClass\"],\" \",[26,\"if\",[[26,\"or\",[[26,\"not\",[[22,[\"_hasSelectedRows\"]]],null],[22,[\"_disableMoveUpButton\"]],[22,[\"readonly\"]]],null],\"disabled\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.groupedit-toolbar.move-up-button-text\"],null],null],[11,\"disabled\",[26,\"or\",[[26,\"not\",[[22,[\"_hasSelectedRows\"]]],null],[22,[\"_disableMoveUpButton\"]],[22,[\"readonly\"]]],null],null],[3,\"action\",[[21,0,[]],\"moveRow\",-1]],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"arrow up icon\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-move-down \",[20,\"buttonClass\"],\" \",[26,\"if\",[[26,\"or\",[[26,\"not\",[[22,[\"_hasSelectedRows\"]]],null],[22,[\"_disableMoveDownButton\"]],[22,[\"readonly\"]]],null],\"disabled\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.groupedit-toolbar.move-down-button-text\"],null],null],[11,\"disabled\",[26,\"or\",[[26,\"not\",[[22,[\"_hasSelectedRows\"]]],null],[22,[\"_disableMoveDownButton\"]],[22,[\"readonly\"]]],null],null],[3,\"action\",[[21,0,[]],\"moveRow\",1]],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"arrow down icon\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"each\",[[22,[\"customButtons\"]]],null,{\"statements\":[[0,\"  \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[26,\"if\",[[21,1,[\"buttonClasses\"]],[21,1,[\"buttonClasses\"]]],null],\" \",[26,\"if\",[[21,1,[\"iconClasses\"]],\"icon\"],null],\" custom button\"]]],[11,\"title\",[26,\"if\",[[21,1,[\"buttonTitle\"]],[21,1,[\"buttonTitle\"]]],null],null],[11,\"disabled\",[21,1,[\"disabled\"]],null],[3,\"action\",[[21,0,[]],\"customButtonAction\",[21,1,[\"buttonAction\"]]]],[8],[0,\"\\n\"],[4,\"if\",[[21,1,[\"iconClasses\"]]],null,{\"statements\":[[0,\"\\t\\t\\t\"],[6,\"i\"],[11,\"class\",[27,[[21,1,[\"iconClasses\"]],\" icon\"]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"\\t\\t\\t\"],[1,[26,\"if\",[[21,1,[\"buttonName\"]],[21,1,[\"buttonName\"]],[26,\"t\",[\"components.groupedit-toolbar.custom-button-text\"],null]],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/groupedit-toolbar.hbs" } });
});
define("dummy/templates/components/modal-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "pDg0xuQp", "block": "{\"symbols\":[\"&default\"],\"statements\":[[6,\"i\"],[10,\"class\",\"close icon\"],[8],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[20,\"title\"],false],[9],[0,\"\\n\"],[6,\"div\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"viewImageContent\"]],\"image\"],null],\" content\"]]],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"viewImageContent\"]]],null,{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"ui centered image\"],[8],[13,1],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"description\"],[8],[13,1],[9],[0,\"\\n\"]],\"parameters\":[]}],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"_toolbarVisible\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"actions\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"useCloseButton\"]]],null,{\"statements\":[[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui cancel button\"],[10,\"data-dismiss\",\"modal\"],[11,\"title\",[26,\"t\",[\"components.modal-dialog.close-button-text\"],null],null],[10,\"type\",\"button\"],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.modal-dialog.close-button-text\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"useOkButton\"]]],null,{\"statements\":[[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui positive button\"],[11,\"title\",[26,\"t\",[\"components.modal-dialog.ok-button-text\"],null],null],[10,\"type\",\"button\"],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.modal-dialog.ok-button-text\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/modal-dialog.hbs" } });
});
define("dummy/templates/components/number-input", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Dc5iFUyn", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"input\",null,[[\"type\",\"value\"],[\"number\",[22,[\"inputValue\"]]]]],false]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/number-input.hbs" } });
});
define("dummy/templates/components/object-list-view-cell", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "3IT3kxM0", "block": "{\"symbols\":[\"&default\"],\"statements\":[[6,\"div\"],[10,\"class\",\"oveflow-text\"],[11,\"title\",[20,\"titleValue\"],null],[8],[13,1],[1,[20,\"displayValue\"],false],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/object-list-view-cell.hbs" } });
});
define("dummy/templates/components/object-list-view-row", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "j9l73myA", "block": "{\"symbols\":[\"record\",\"menuItem\",\"column\",\"index\",\"customButtonInRow\"],\"statements\":[[4,\"if\",[[22,[\"doRenderData\"]]],null,{\"statements\":[[0,\"  \"],[6,\"tr\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"record\",\"selected\"]],\"active\"],null],\" \",[22,[\"record\",\"rowConfig\",\"customClass\"]],\" \",[26,\"if\",[[26,\"and\",[[22,[\"showAsteriskInRow\"]],[22,[\"record\",\"data\",\"hasDirtyAttributes\"]]],null],\"flexberry-new-row\"],null]]]],[8],[0,\"\\n    \"],[6,\"td\"],[11,\"class\",[27,[\"object-list-view-helper-column \",[26,\"unless\",[[22,[\"showHelperColumn\"]],\"hidden\"],null]]]],[11,\"style\",[20,\"defaultPaddingStyle\"],null],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"hidden\"],[8],[1,[22,[\"record\",\"key\"]],false],[9],[0,\"\\n\"],[4,\"each\",[[22,[\"customButtonsInRow\"]]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[21,5,[\"buttonClasses\"]],\" button\"]]],[11,\"title\",[26,\"if\",[[21,5,[\"buttonTitle\"]],[21,5,[\"buttonTitle\"]]],null],null],[3,\"action\",[[21,0,[]],\"customButtonInRowAction\",[21,5,[\"buttonAction\"]],[22,[\"record\",\"data\"]]]],[8],[0,\"\\n            \"],[6,\"i\"],[11,\"class\",[21,5,[\"buttonIcon\"]],null],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[5]},null],[4,\"if\",[[22,[\"showHelperColumn\"]]],null,{\"statements\":[[0,\"        \"],[6,\"div\"],[10,\"class\",\"object-list-view-helper-column-cell\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showAsteriskInRow\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"cell asterisk-cell\"],[8],[0,\"\\n              \"],[6,\"i\"],[11,\"class\",[27,[\"asterisk small red icon \",[26,\"unless\",[[22,[\"record\",\"data\",\"hasDirtyAttributes\"]],\"hidden\"],null]]]],[8],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showCheckBoxInRow\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"cell\"],[8],[0,\"\\n              \"],[1,[26,\"flexberry-checkbox\",null,[[\"readonly\",\"onChange\",\"value\"],[[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"record\",\"rowConfig\",\"canBeSelected\"]]],null]],null],[26,\"action\",[[21,0,[]],[22,[\"selectRow\"]],[22,[\"record\"]]],null],[22,[\"record\",\"selected\"]]]]],false],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showEditButtonInRow\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"cell\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"                \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-edit object-list-view-row-edit-button \",[20,\"buttonClass\"],\" disabled button\"]]],[11,\"title\",[26,\"t\",[\"components.object-list-view.menu-in-row.edit-menu-item-title\"],null],null],[10,\"disabled\",\"disabled\"],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"edit icon\"],[8],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-edit object-list-view-row-edit-button \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.object-list-view.menu-in-row.edit-menu-item-title\"],null],null],[3,\"action\",[[21,0,[]],\"onRowClick\",[22,[\"record\"]],[26,\"hash\",null,[[\"column\",\"columnIndex\",\"rowEdit\"],[null,null,true]]]]],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"edit icon\"],[8],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showPrototypeButtonInRow\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"cell\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"                \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-edit object-list-view-row-prototype-button \",[20,\"buttonClass\"],\" disabled button\"]]],[11,\"title\",[26,\"t\",[\"components.object-list-view.menu-in-row.prototype-menu-item-title\"],null],null],[10,\"disabled\",\"disabled\"],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"copy icon\"],[8],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-edit object-list-view-row-prototype-button \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.object-list-view.menu-in-row.prototype-menu-item-title\"],null],null],[3,\"action\",[[21,0,[]],[22,[\"createNewByPrototype\"]],[26,\"get\",[[22,[\"record\"]],\"data.id\"],null]]],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"copy icon\"],[8],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showDeleteButtonInRow\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"cell\"],[8],[0,\"\\n\"],[4,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"record\",\"rowConfig\",\"canBeDeleted\"]]],null]],null]],null,{\"statements\":[[0,\"                \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-delete object-list-view-row-delete-button \",[20,\"buttonClass\"],\" disabled button\"]]],[11,\"title\",[26,\"t\",[\"components.object-list-view.menu-in-row.delete-menu-item-title\"],null],null],[10,\"disabled\",\"disabled\"],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"minus icon\"],[8],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-delete object-list-view-row-delete-button \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.object-list-view.menu-in-row.delete-menu-item-title\"],null],null],[3,\"action\",[[21,0,[]],[22,[\"deleteRow\"]],[22,[\"record\"]]]],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"minus icon\"],[8],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"],[4,\"each\",[[22,[\"columns\"]]],null,{\"statements\":[[0,\"      \"],[6,\"td\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"and\",[[22,[\"showValidationMessages\"]],[26,\"get\",[[26,\"get\",[[22,[\"record\",\"data\",\"validations\",\"attrs\"]],[21,3,[\"propName\"]]],null],\"isInvalid\"],null]],null],\"error\"],null],\" \",[26,\"if\",[[26,\"array-contains\",[[22,[\"overflowedComponents\"]],[21,3,[\"cellComponent\",\"componentName\"]]],null],\" overflowed-cell\"],null]]]],[11,\"style\",[26,\"if\",[[26,\"and\",[[26,\"not\",[[21,4,[]]],null],[22,[\"inHierarchicalMode\"]]],null],[22,[\"hierarchicalIndentStyle\"]],[22,[\"defaultPaddingStyle\"]]],null],null],[3,\"action\",[[21,0,[]],\"onRowClick\",[22,[\"record\"]],[26,\"hash\",null,[[\"column\",\"columnIndex\"],[[21,3,[]],[21,4,[]]]]]],[[\"preventDefault\"],[false]]],[8],[0,\"\\n\"],[4,\"if\",[[21,3,[\"cellComponent\",\"componentName\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"inHierarchicalMode\"]]],null,{\"statements\":[[4,\"component\",[[21,3,[\"cellComponent\",\"componentName\"]]],[[\"dynamicProperties\",\"relatedModel\",\"value\",\"readonly\",\"required\",\"componentName\"],[[21,3,[\"cellComponent\",\"componentProperties\"]],[22,[\"record\",\"data\"]],[26,\"mut\",[[26,\"get\",[[22,[\"record\",\"data\"]],[21,3,[\"propName\"]]],null]],null],[26,\"readonly-cell\",[[22,[\"record\",\"rowConfig\",\"readonlyColumns\"]],[21,3,[\"propName\"]],[22,[\"readonly\"]],[21,3,[\"cellComponent\",\"componentProperties\",\"readonly\"]]],null],[22,[\"required\"]],[26,\"concat\",[\"(\",[22,[\"folvComponentName\"]],\"_\",[21,3,[\"cellComponent\",\"componentName\"]],\"_\",[21,3,[\"propName\"]],\")\"],null]]],{\"statements\":[[4,\"if\",[[26,\"and\",[[26,\"not\",[[21,4,[]]],null],[22,[\"inHierarchicalMode\"]],[22,[\"hasRecords\"]]],null]],null,{\"statements\":[[0,\"                \"],[6,\"button\"],[11,\"class\",[27,[\"ui button hierarchy-expand icon mini compact \",[20,\"buttonClass\"]]]],[3,\"action\",[[21,0,[]],\"expand\"],[[\"bubbles\"],[false]]],[8],[0,\"\\n                  \"],[6,\"i\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"_expanded\"]],\"minus\",\"plus\"],null],\" hierarchy-expand icon\"]]],[8],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[26,\"component\",[[21,3,[\"cellComponent\",\"componentName\"]]],[[\"dynamicProperties\",\"relatedModel\",\"value\",\"readonly\",\"required\",\"componentName\",\"canFixElement\"],[[21,3,[\"cellComponent\",\"componentProperties\"]],[22,[\"record\",\"data\"]],[26,\"mut\",[[26,\"get\",[[22,[\"record\",\"data\"]],[21,3,[\"propName\"]]],null]],null],[26,\"readonly-cell\",[[22,[\"record\",\"rowConfig\",\"readonlyColumns\"]],[21,3,[\"propName\"]],[22,[\"readonly\"]],[21,3,[\"cellComponent\",\"componentProperties\",\"readonly\"]]],null],[22,[\"required\"]],[26,\"concat\",[\"(\",[22,[\"folvComponentName\"]],\"_\",[21,3,[\"cellComponent\",\"componentName\"]],\"_\",[21,3,[\"propName\"]],\")\"],null],[26,\"or\",[[26,\"eq\",[[21,3,[\"cellComponent\",\"componentName\"]],\"flexberry-dropdown\"],null],[26,\"eq\",[[21,3,[\"cellComponent\",\"componentName\"]],\"flexberry-lookup\"],null]],null]]]],false],[0,\"\\n\"],[4,\"if\",[[22,[\"showValidationMessages\"]]],null,{\"statements\":[[0,\"              \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"record\",\"data\",\"validations\",\"attrs\"]],[21,3,[\"propName\"]]],null],\"messages\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[6,\"div\"],[10,\"class\",\"oveflow-text\"],[8],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[26,\"not\",[[21,4,[]]],null],[22,[\"inHierarchicalMode\"]],[22,[\"hasRecords\"]]],null]],null,{\"statements\":[[0,\"              \"],[6,\"button\"],[11,\"class\",[27,[\"ui button hierarchy-expand icon mini compact \",[20,\"buttonClass\"]]]],[11,\"title\",[26,\"if\",[[22,[\"_expanded\"]],[26,\"t\",[\"components.object-list-view.hierarchy-buttons.minus-button-title\"],null],[26,\"t\",[\"components.object-list-view.hierarchy-buttons.plus-button-title\"],null]],null],null],[3,\"action\",[[21,0,[]],\"expand\"],[[\"bubbles\"],[false]]],[8],[0,\"\\n                  \"],[6,\"i\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"_expanded\"]],\"minus\",\"plus\"],null],\" hierarchy-expand icon\"]]],[8],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[1,[26,\"get-formatted\",[[22,[\"record\",\"data\"]],[21,3,[\"propName\"]]],[[\"dateFormat\",\"moment\"],[[22,[\"dateFormat\"]],[22,[\"moment\"]]]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[3,4]},null],[4,\"if\",[[22,[\"showMenuColumn\"]]],null,{\"statements\":[[0,\"      \"],[6,\"td\"],[10,\"class\",\"object-list-view-menu\"],[11,\"style\",[20,\"defaultPaddingStyle\"],null],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"right pointing ui icon dropdown button\"],[8],[0,\"\\n          \"],[6,\"i\"],[10,\"class\",\"list layout icon\"],[8],[9],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"right menu\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showEditMenuItemInRow\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"item disabled edit-menu\"],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"edit icon\"],[8],[9],[0,\"\\n                  \"],[6,\"span\"],[8],[1,[26,\"t\",[\"components.object-list-view.menu-in-row.edit-menu-item-title\"],null],false],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"item edit-menu\"],[3,\"action\",[[21,0,[]],\"onRowClick\",[22,[\"record\"]],[26,\"hash\",null,[[\"column\",\"columnIndex\",\"rowEdit\"],[null,null,true]]]]],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"edit icon\"],[8],[9],[0,\"\\n                  \"],[6,\"span\"],[8],[1,[26,\"t\",[\"components.object-list-view.menu-in-row.edit-menu-item-title\"],null],false],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showPrototypeMenuItemInRow\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"item disabled prototype-menu\"],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"copy icon\"],[8],[9],[0,\"\\n                  \"],[6,\"span\"],[8],[1,[26,\"t\",[\"components.object-list-view.menu-in-row.prototype-menu-item-title\"],null],false],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"item prototype-menu\"],[3,\"action\",[[21,0,[]],[22,[\"createNewByPrototype\"]],[26,\"get\",[[22,[\"record\"]],\"data.id\"],null]]],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"copy icon\"],[8],[9],[0,\"\\n                  \"],[6,\"span\"],[8],[1,[26,\"t\",[\"components.object-list-view.menu-in-row.prototype-menu-item-title\"],null],false],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showDeleteMenuItemInRow\"]]],null,{\"statements\":[[4,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"record\",\"rowConfig\",\"canBeDeleted\"]]],null]],null]],null,{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"item disabled delete-menu\"],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"trash icon\"],[8],[9],[0,\"\\n                  \"],[6,\"span\"],[8],[1,[26,\"t\",[\"components.object-list-view.menu-in-row.delete-menu-item-title\"],null],false],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"item delete-menu\"],[3,\"action\",[[21,0,[]],[22,[\"deleteRow\"]],[22,[\"record\"]]]],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"trash icon\"],[8],[9],[0,\"\\n                  \"],[6,\"span\"],[8],[1,[26,\"t\",[\"components.object-list-view.menu-in-row.delete-menu-item-title\"],null],false],[9],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"each\",[[22,[\"menuInRowAdditionalItems\"]]],null,{\"statements\":[[0,\"              \"],[6,\"div\"],[10,\"class\",\"item\"],[3,\"action\",[[21,0,[]],[22,[\"sendMenuItemAction\"]],[21,2,[\"actionName\"]],[22,[\"record\",\"data\"]]]],[8],[0,\"\\n                \"],[6,\"i\"],[11,\"class\",[27,[[21,2,[\"icon\"]]]]],[8],[9],[0,\"\\n                \"],[6,\"span\"],[8],[1,[21,2,[\"title\"]],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[22,[\"_expanded\"]],[22,[\"inHierarchicalMode\"]]],null]],null,{\"statements\":[[4,\"each\",[[22,[\"records\"]]],[[\"key\"],[\"key\"]],{\"statements\":[[0,\"      \"],[1,[26,\"object-list-view-row\",null,[[\"record\",\"columns\",\"readonly\",\"required\",\"showMenuColumn\",\"sendMenuItemAction\",\"menuInRowAdditionalItems\",\"showHelperColumn\",\"defaultRowConfig\",\"showValidationMessages\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showEditButtonInRow\",\"showPrototypeButtonInRow\",\"showDeleteButtonInRow\",\"inHierarchicalMode\",\"inExpandMode\",\"loadRecords\",\"doRenderData\",\"rowClick\",\"selectRow\",\"createNewByPrototype\",\"deleteRow\",\"_currentLevel\",\"hierarchicalIndent\",\"defaultLeftPadding\",\"overflowedComponents\",\"folvComponentName\",\"hierarchyLoadedLevel\",\"configurateRow\"],[[21,1,[]],[22,[\"columns\"]],[22,[\"readonly\"]],[22,[\"required\"]],[22,[\"showMenuColumn\"]],[22,[\"sendMenuItemAction\"]],[22,[\"menuInRowAdditionalItems\"]],[22,[\"showHelperColumn\"]],[22,[\"defaultRowConfig\"]],[22,[\"showValidationMessages\"]],[22,[\"showAsteriskInRow\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showEditButtonInRow\"]],[22,[\"showPrototypeButtonInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"inHierarchicalMode\"]],[22,[\"inExpandMode\"]],[22,[\"loadRecords\"]],[21,1,[\"doRenderData\"]],[22,[\"rowClick\"]],[22,[\"selectRow\"]],[22,[\"createNewByPrototype\"]],[22,[\"deleteRow\"]],[22,[\"_currentLevel\"]],[22,[\"_hierarchicalIndent\"]],[22,[\"defaultLeftPadding\"]],[22,[\"overflowedComponents\"]],[22,[\"folvComponentName\"]],[22,[\"hierarchyLoadedLevel\"]],[22,[\"configurateRow\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/object-list-view-row.hbs" } });
});
define("dummy/templates/components/object-list-view-single-column-cell", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "VnN3mchB", "block": "{\"symbols\":[\"column\"],\"statements\":[[4,\"each\",[[22,[\"columns\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"and\",[[22,[\"showValidationMessages\"]],[26,\"get\",[[26,\"get\",[[22,[\"model\",\"validations\",\"attrs\"]],[21,1,[\"propName\"]]],null],\"isInvalid\"],null]],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"if\",[[21,1,[\"keyLocale\"]],[26,\"t\",[[21,1,[\"keyLocale\"]]],null],[21,1,[\"header\"]]],null],false],[9],[0,\"\\n    \"],[6,\"div\"],[11,\"class\",[27,[\"inline fields \",[26,\"if\",[[26,\"not\",[[22,[\"hasEditableValues\"]]],null],\"readonly\"],null]]]],[8],[0,\"\\n\"],[4,\"if\",[[21,1,[\"cellComponent\",\"componentName\"]]],null,{\"statements\":[[0,\"        \"],[1,[26,\"component\",[[21,1,[\"cellComponent\",\"componentName\"]]],[[\"dynamicProperties\",\"relatedModel\",\"value\",\"readonly\",\"required\"],[[21,1,[\"cellComponent\",\"componentProperties\"]],[22,[\"model\"]],[26,\"mut\",[[26,\"get\",[[22,[\"model\"]],[21,1,[\"propName\"]]],null]],null],[22,[\"readonly\"]],[22,[\"required\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[6,\"div\"],[10,\"class\",\"oveflow-text\"],[8],[0,\"\\n          \"],[1,[26,\"get-formatted\",[[22,[\"model\"]],[21,1,[\"propName\"]]],[[\"dateFormat\",\"moment\"],[[22,[\"dateFormat\"]],[22,[\"moment\"]]]]],false],[0,\" \\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[22,[\"showValidationMessages\"]]],null,{\"statements\":[[0,\"        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[26,\"get\",[[26,\"get\",[[22,[\"model\",\"validations\",\"attrs\"]],[21,1,[\"propName\"]]],null],\"messages\"],null],\"left pointing\"]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs" } });
});
define("dummy/templates/components/object-list-view", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "UbcYA/Fy", "block": "{\"symbols\":[\"record\",\"column\",\"column\",\"column\"],\"statements\":[[6,\"table\"],[11,\"class\",[27,[\"object-list-view ui unstackable celled \",[26,\"if\",[[22,[\"readonly\"]],\"readonly\"],null],\" \",[20,\"tableClass\"],\" table\"]]],[8],[0,\"\\n  \"],[6,\"thead\"],[8],[0,\"\\n    \"],[6,\"tr\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showHelperColumn\"]]],null,{\"statements\":[[0,\"        \"],[6,\"th\"],[10,\"class\",\"object-list-view-operations collapsing\"],[10,\"data-olv-header-property-name\",\"OlvRowToolbar\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showCheckBoxInRow\"]]],null,{\"statements\":[[4,\"if\",[[26,\"not-eq\",[[22,[\"class\"]],\"groupedit-container\"],null]],null,{\"statements\":[[0,\"              \"],[6,\"div\"],[11,\"class\",[27,[\"ui check-rows-button \",[20,\"buttonClass\"],\" button \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\"],null]]]],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"checkRowsSettingsItems\"]]],null,{\"statements\":[[0,\"                  \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"onItemClick\"],[[22,[\"checkRowsSettingsItems\"]],[26,\"action\",[[21,0,[]],\"onCheckRowMenuItemClick\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"              \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[6,\"button\"],[11,\"class\",[27,[\"ui check-all-at-page-button \",[20,\"buttonClass\"],\" \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.check-all-at-page-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"checkAllAtPage\"]],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"check-square-o icon\"],[8],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[4,\"if\",[[26,\"and\",[[22,[\"defaultSortingButton\"]],[26,\"not\",[[22,[\"orderedProperty\"]]],null]],null]],null,{\"statements\":[[0,\"              \"],[6,\"button\"],[11,\"class\",[27,[\"ui clear-sorting-button \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.clear-sorting-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"clearSorting\"]],[8],[0,\"\\n                  \"],[6,\"i\"],[10,\"class\",\"sort icon\"],[8],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[22,[\"columns\"]]],null,{\"statements\":[[0,\"        \"],[6,\"th\"],[10,\"class\",\"dt-head-left me class\"],[11,\"onclick\",[26,\"action\",[[21,0,[]],\"headerCellClick\",[21,4,[]]],null],null],[11,\"width\",[21,4,[\"width\"]],null],[8],[0,\"\\n          \"],[6,\"div\"],[11,\"data-olv-header-property-name\",[21,4,[\"propName\"]],null],[11,\"title\",[20,\"sortTitleCompute\"],null],[8],[0,\"\\n            \"],[6,\"span\"],[8],[0,\"\\n\"],[4,\"if\",[[21,4,[\"keyLocale\"]]],null,{\"statements\":[[0,\"              \"],[1,[26,\"t\",[[21,4,[\"keyLocale\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"              \"],[1,[21,4,[\"header\"]],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n\"],[4,\"if\",[[21,4,[\"sorted\"]]],null,{\"statements\":[[0,\"              \"],[6,\"div\"],[10,\"class\",\"object-list-view-order-icon\"],[8],[0,\"\\n\"],[4,\"if\",[[21,4,[\"sortAscending\"]]],null,{\"statements\":[[0,\"                  \"],[6,\"div\"],[11,\"title\",[27,[[26,\"t\",[\"components.object-list-view.sort-ascending\"],null]]]],[8],[0,\"\\n                    \"],[1,[21,4,[\"sortNumber\"]],false],[6,\"i\"],[10,\"class\",\"ascending icon\"],[8],[9],[0,\"\\n                  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                  \"],[6,\"div\"],[11,\"title\",[27,[[26,\"t\",[\"components.object-list-view.sort-descending\"],null]]]],[8],[0,\"\\n                    \"],[1,[21,4,[\"sortNumber\"]],false],[6,\"i\"],[10,\"class\",\"descending icon\"],[8],[9],[0,\"\\n                  \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[4]},null],[4,\"if\",[[22,[\"showMenuColumn\"]]],null,{\"statements\":[[0,\"        \"],[6,\"th\"],[10,\"class\",\"object-list-view-menu collapsing\"],[10,\"data-olv-header-property-name\",\"OlvRowMenu\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"tbody\"],[8],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[26,\"not\",[[22,[\"showFiltersInModal\"]]],null],[22,[\"showFilters\"]]],null]],null,{\"statements\":[[0,\"      \"],[6,\"tr\"],[10,\"class\",\"object-list-view-filters\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showHelperColumn\"]]],null,{\"statements\":[[0,\"          \"],[6,\"td\"],[10,\"rowspan\",\"1\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[22,[\"columns\"]]],null,{\"statements\":[[0,\"          \"],[6,\"td\"],[11,\"style\",[20,\"defaultPaddingStyle\"],null],[10,\"class\",\"overflowed-cell\"],[8],[0,\"\\n\"],[4,\"if\",[[21,3,[\"filter\",\"conditions\"]]],null,{\"statements\":[[0,\"              \"],[1,[26,\"flexberry-dropdown\",null,[[\"value\",\"items\",\"displayCaptions\",\"class\",\"placeholder\",\"needChecksOnValue\",\"onChange\"],[[21,3,[\"filter\",\"condition\"]],[21,3,[\"filter\",\"conditions\"]],[26,\"not\",[[26,\"is-array\",[[21,3,[\"filter\",\"conditions\"]]],null]],null],\"compact fluid\",[26,\"t\",[\"components.object-list-view.filter-condition\"],null],false,[26,\"action\",[[21,0,[]],\"filterConditionChanged\",[21,3,[\"filter\"]]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[3]},null],[4,\"if\",[[22,[\"showMenuColumn\"]]],null,{\"statements\":[[0,\"          \"],[6,\"td\"],[10,\"rowspan\",\"1\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"class\",\"object-list-view-filters\"],[11,\"onkeydown\",[26,\"action\",[[21,0,[]],\"applyFiltersByEnter\"],null],null],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showHelperColumn\"]]],null,{\"statements\":[[0,\"          \"],[6,\"td\"],[10,\"rowspan\",\"1\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[22,[\"columns\"]]],null,{\"statements\":[[0,\"          \"],[6,\"td\"],[11,\"style\",[20,\"defaultPaddingStyle\"],null],[11,\"class\",[27,[[26,\"if\",[[26,\"array-contains\",[[22,[\"overflowedComponents\"]],[21,2,[\"filter\",\"component\",\"name\"]]],null],\"overflowed-cell\"],null]]]],[8],[0,\"\\n\"],[4,\"if\",[[21,2,[\"filter\",\"component\",\"name\"]]],null,{\"statements\":[[0,\"              \"],[1,[26,\"component\",[[21,2,[\"filter\",\"component\",\"name\"]]],[[\"value\",\"readonly\",\"dynamicProperties\"],[[21,2,[\"filter\",\"pattern\"]],[26,\"or\",[[26,\"eq\",[[21,2,[\"filter\",\"condition\"]],\"empty\"],null],[26,\"eq\",[[21,2,[\"filter\",\"condition\"]],\"nempty\"],null]],null],[21,2,[\"filter\",\"component\",\"properties\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[4,\"if\",[[22,[\"showMenuColumn\"]]],null,{\"statements\":[[0,\"          \"],[6,\"td\"],[10,\"rowspan\",\"1\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[22,[\"content\"]]],null,{\"statements\":[[0,\"      \"],[6,\"tr\"],[8],[0,\"\\n        \"],[6,\"td\"],[11,\"colspan\",[27,[[20,\"colspan\"]]]],[10,\"style\",\"text-align:center;\"],[8],[0,\"\\n            \"],[1,[20,\"placeholder\"],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"each\",[[22,[\"contentWithKeys\"]]],[[\"key\"],[\"key\"]],{\"statements\":[[0,\"        \"],[1,[26,\"object-list-view-row\",null,[[\"record\",\"columns\",\"readonly\",\"required\",\"showMenuColumn\",\"sendMenuItemAction\",\"menuInRowAdditionalItems\",\"showHelperColumn\",\"defaultRowConfig\",\"showValidationMessages\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showEditButtonInRow\",\"showPrototypeButtonInRow\",\"showDeleteButtonInRow\",\"showEditMenuItemInRow\",\"showPrototypeMenuItemInRow\",\"showDeleteMenuItemInRow\",\"hierarchicalIndent\",\"inHierarchicalMode\",\"inExpandMode\",\"loadRecords\",\"doRenderData\",\"rowClick\",\"selectRow\",\"createNewByPrototype\",\"deleteRow\",\"customButtonsInRow\",\"customButtonInRowAction\",\"defaultLeftPadding\",\"overflowedComponents\",\"folvComponentName\",\"hierarchyPaging\",\"configurateRow\"],[[21,1,[]],[22,[\"columns\"]],[22,[\"readonly\"]],[22,[\"required\"]],[22,[\"showMenuColumn\"]],[22,[\"sendMenuItemAction\"]],[22,[\"menuInRowAdditionalItems\"]],[22,[\"showHelperColumn\"]],[22,[\"defaultRowConfig\"]],[22,[\"showValidationMessagesInRow\"]],[22,[\"showAsteriskInRow\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showEditButtonInRow\"]],[22,[\"showPrototypeButtonInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditMenuItemInRow\"]],[22,[\"showPrototypeMenuItemInRow\"]],[22,[\"showDeleteMenuItemInRow\"]],[22,[\"hierarchicalIndent\"]],[22,[\"inHierarchicalMode\"]],[22,[\"inExpandMode\"]],[22,[\"loadRecords\"]],[21,1,[\"doRenderData\"]],[26,\"action\",[[21,0,[]],\"rowClick\"],null],[26,\"action\",[[21,0,[]],\"selectRow\"],null],[22,[\"createNewByPrototype\"]],[26,\"action\",[[21,0,[]],\"deleteRow\"],null],[22,[\"customButtonsInRow\"]],\"customButtonInRowAction\",[22,[\"defaultLeftPadding\"]],[22,[\"overflowedComponents\"]],[22,[\"componentName\"]],[22,[\"hierarchyPaging\"]],[22,[\"configurateRow\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[4,\"if\",[[22,[\"rowByRowLoadingProgress\"]]],null,{\"statements\":[[0,\"        \"],[6,\"tr\"],[8],[0,\"\\n          \"],[6,\"td\"],[11,\"colspan\",[27,[[20,\"colspan\"]]]],[10,\"style\",\"text-align:center;\"],[8],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"ui active centered inline loader\"],[8],[9],[0,\"\\n            \"],[1,[26,\"t\",[\"components.object-list-view.loading-text\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/object-list-view.hbs" } });
});
define("dummy/templates/components/olv-filter-interval", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "x7oMjX69", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"style\",\"float: left; width: 45%;\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-textbox\",null,[[\"value\",\"placeholder\",\"dynamicProperties\"],[[22,[\"from\"]],[22,[\"fromPlaceholder\"]],[22,[\"dynProps\"]]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"style\",\"float: right; width: 45%;\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-textbox\",null,[[\"value\",\"placeholder\",\"dynamicProperties\"],[[22,[\"to\"]],[22,[\"toPlaceholder\"]],[22,[\"dynProps\"]]]]],false],[0,\"\\n\"],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/olv-filter-interval.hbs" } });
});
define("dummy/templates/components/olv-setconfigdialogbutton", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "a0RBwyld", "block": "{\"symbols\":[],\"statements\":[[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"choose\",[22,[\"chooseData\"]]]],[8],[6,\"i\"],[10,\"class\",\"large setting icon\"],[10,\"title\",\"customize column views\"],[8],[9],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/olv-setconfigdialogbutton.hbs" } });
});
define("dummy/templates/components/olv-toolbar", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "xYC2tJMu", "block": "{\"symbols\":[\"customButton\"],\"statements\":[[4,\"if\",[[22,[\"refreshButton\"]]],null,{\"statements\":[[0,\"  \"],[6,\"button\"],[11,\"class\",[27,[\"ui refresh-button \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.refresh-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"refresh\"]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"components.olv-toolbar.refresh-button-text\"],null],false],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"refresh icon\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"createNewButton\"]]],null,{\"statements\":[[4,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"enableCreateNewButton\"]]],null]],null]],null,{\"statements\":[[0,\"    \"],[6,\"button\"],[11,\"class\",[27,[\"ui create-button \",[20,\"buttonClass\"],\" disabled button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.add-button-text\"],null],null],[10,\"disabled\",\"disabled\"],[3,\"action\",[[21,0,[]],\"createNew\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.olv-toolbar.add-button-text\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[6,\"button\"],[11,\"class\",[27,[\"ui create-button \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.add-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"createNew\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.olv-toolbar.add-button-text\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[22,[\"deleteButton\"]]],null,{\"statements\":[[4,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"isDeleteButtonEnabled\"]]],null]],null]],null,{\"statements\":[[0,\"    \"],[6,\"button\"],[11,\"class\",[27,[\"ui delete-button \",[20,\"buttonClass\"],\" disabled button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.delete-button-text\"],null],null],[10,\"disabled\",\"disabled\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.olv-toolbar.delete-button-text\"],null],false],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"delete icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"    \"],[6,\"button\"],[11,\"class\",[27,[\"ui delete-button \",[20,\"buttonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.delete-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.olv-toolbar.delete-button-text\"],null],false],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"delete icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[4,\"if\",[[22,[\"availableHierarchicalMode\"]]],null,{\"statements\":[[0,\"  \"],[6,\"button\"],[11,\"class\",[27,[\"ui button icon hierarchical-button \",[20,\"buttonClass\"],\" \",[26,\"if\",[[22,[\"inHierarchicalMode\"]],\"active\"],null]]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.hierarchy-button-text\"],null],null],[3,\"action\",[[21,0,[]],[22,[\"switchHierarchicalMode\"]]]],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"sitemap icon\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"availableCollExpandMode\"]]],null,{\"statements\":[[0,\"    \"],[6,\"button\"],[11,\"class\",[27,[\"ui button icon hierarchical-button \",[20,\"buttonClass\"],\" active\"]]],[11,\"title\",[26,\"if\",[[22,[\"inExpandMode\"]],[26,\"t\",[\"components.olv-toolbar.coll-comspres-button-text\"],null],[26,\"t\",[\"components.olv-toolbar.coll-expand-button-text\"],null]],null],null],[3,\"action\",[[21,0,[]],[22,[\"switchExpandMode\"]]]],[8],[0,\"\\n        \"],[6,\"i\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"inExpandMode\"]],\"compress\",\"expand\"],null],\" icon\"]]],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[4,\"if\",[[22,[\"enableFilters\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[11,\"class\",[27,[\"ui icon buttons filter-active \",[26,\"if\",[[22,[\"filters\"]],\"show-filter\"],null]]]],[8],[0,\"\\n    \"],[6,\"button\"],[11,\"class\",[27,[\"ui button \",[20,\"buttonClass\"],\" \",[26,\"if\",[[22,[\"showFilters\"]],\"active\"],null]]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.filter-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"showFiltersTool\"]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"filter icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"filters\"]]],null,{\"statements\":[[0,\"      \"],[6,\"div\"],[10,\"class\",\"or\"],[10,\"data-text\",\"•\"],[8],[9],[0,\"\\n      \"],[6,\"button\"],[11,\"class\",[27,[\"ui button removeFilter-button \",[20,\"buttonClass\"]]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.remove-filter-button-text\"],null],null],[3,\"action\",[[21,0,[]],[22,[\"resetFilters\"]]]],[8],[0,\"\\n          \"],[6,\"i\"],[10,\"class\",\"remove icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"filterButton\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui action input search-field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"block-action-input\"],[8],[1,[26,\"input\",null,[[\"type\",\"placeholder\",\"value\",\"key-down\"],[\"text\",[26,\"t\",[\"components.olv-toolbar.filter-by-any-match-placeholder\"],null],[22,[\"filterByAnyMatchText\"]],\"keyDownFilterAction\"]]],false],[9],[0,\"\\n    \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[20,\"buttonClass\"],\" icon button search-button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.search-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"filterByAnyMatch\"]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"search icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[20,\"buttonClass\"],\" icon button clear-search-button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.clear-search-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"removeFilter\"]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"remove icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"exportExcelButton\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui buttons export-config\"],[8],[0,\"\\n    \"],[6,\"button\"],[11,\"class\",[27,[\"ui button icon export-button \",[20,\"buttonClass\"]]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.export-excel-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"showExportDialog\"]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"large file excel outline icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"onItemClick\"],[[22,[\"exportExcelItems\"]],[26,\"action\",[[21,0,[]],\"onExportMenuItemClick\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"colsConfigButton\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui buttons cols-config\"],[8],[0,\"\\n    \"],[6,\"button\"],[11,\"class\",[27,[\"ui icon button config-button\",[26,\"if\",[[22,[\"colsSettingsItems\"]],\" settings-enabled\",\"\"],null]]]],[11,\"title\",[26,\"t\",[\"components.colsconfig-dialog-content.title\"],null],null],[3,\"action\",[[21,0,[]],\"showConfigDialog\"]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"large table icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"colsSettingsItems\"]]],null,{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"onItemClick\"],[[22,[\"colsSettingsItems\"]],[26,\"action\",[[21,0,[]],\"onMenuItemClick\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"advLimitButton\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui buttons adv-limit-config\"],[8],[0,\"\\n    \"],[6,\"button\"],[10,\"class\",\"ui icon button adv-limit-button\"],[11,\"title\",[26,\"t\",[\"components.advlimit-dialog-content.title\"],null],null],[3,\"action\",[[21,0,[]],\"showAdvLimitDialog\"]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"large flask icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"advLimitItems\"]]],null,{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"onItemClick\"],[[22,[\"advLimitItems\"]],[26,\"action\",[[21,0,[]],\"onLimitMenuItemClick\"],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"each\",[[22,[\"customButtons\"]]],null,{\"statements\":[[0,\"  \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[26,\"if\",[[21,1,[\"buttonClasses\"]],[21,1,[\"buttonClasses\"]]],null],\" button\"]]],[11,\"title\",[26,\"if\",[[21,1,[\"buttonTitle\"]],[21,1,[\"buttonTitle\"]]],null],null],[11,\"disabled\",[21,1,[\"disabled\"]],null],[3,\"action\",[[21,0,[]],\"customButtonAction\",[21,1,[\"buttonAction\"]]]],[8],[0,\"\\n\"],[4,\"if\",[[21,1,[\"iconClasses\"]]],null,{\"statements\":[[0,\"        \"],[6,\"i\"],[11,\"class\",[21,1,[\"iconClasses\"]],null],[8],[9],[0,\"\\n        \"],[1,[21,1,[\"buttonName\"]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[21,1,[\"buttonName\"]]],null,{\"statements\":[[0,\"        \"],[1,[21,1,[\"buttonName\"]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"        \"],[1,[26,\"t\",[\"components.olv-toolbar.custom-button-text\"],null],false],[0,\"\\n      \"]],\"parameters\":[]}]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[6,\"div\"],[10,\"class\",\"olv-toolbar-info-modal-dialog ui small basic modal\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui icon header\"],[8],[0,\"\\n    \"],[6,\"i\"],[10,\"class\",\"olvt icon\"],[8],[9],[0,\"\\n    \"],[1,[20,\"_infoModalDialogCaption\"],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"center aligned ui grid\"],[8],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button icon olv-toolbar-info-modal-dialog-copy-button\"],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.copy\"],null],null],[3,\"action\",[[21,0,[]],\"copyJSONContent\"]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"components.olv-toolbar.copy\"],null],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"actions\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui button approve olv-toolbar-info-modal-dialog-ok-button\"],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"components.olv-toolbar.close\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui form\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui field olv-toolbar-info-modal-dialog-content center aligned \"],[8],[0,\"\\n      \"],[6,\"textarea\"],[10,\"cols\",\"80\"],[10,\"rows\",\"20\"],[8],[1,[20,\"_infoModalDialogContent\"],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/olv-toolbar.hbs" } });
});
define("dummy/templates/components/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "knR8tOhm", "block": "{\"symbols\":[\"settingMetadata\",\"item\",\"&default\"],\"statements\":[[6,\"div\"],[10,\"class\",\"ui segments\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"componentTemplateText\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui segment\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui segment\"],[8],[0,\"\\n      \"],[6,\"h4\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"components.settings-example.component-template-caption\"],null],false],[9],[0,\"\\n      \"],[6,\"pre\"],[8],[6,\"code\"],[8],[1,[20,\"componentTemplateText\"],false],[9],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui segment\"],[8],[0,\"\\n    \"],[6,\"table\"],[10,\"class\",\"ui celled table flexberry-word-break\"],[8],[0,\"\\n      \"],[6,\"thead\"],[8],[0,\"\\n        \"],[6,\"tr\"],[8],[6,\"th\"],[8],[1,[26,\"t\",[\"components.settings-example.controller-properties-caption\"],null],false],[9],[0,\"\\n        \"],[6,\"th\"],[8],[1,[26,\"t\",[\"components.settings-example.component-current-settings-caption\"],null],false],[9],[0,\"\\n        \"],[6,\"th\"],[8],[1,[26,\"t\",[\"components.settings-example.component-default-settings-caption\"],null],false],[9],[0,\"\\n      \"],[9],[9],[0,\"\\n      \"],[6,\"tbody\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"componentSettingsMetadata\"]]],null,{\"statements\":[[0,\"        \"],[6,\"tr\"],[8],[0,\"\\n          \"],[6,\"td\"],[8],[0,\"\\n\"],[4,\"if\",[[21,1,[\"bindedControllerPropertieName\"]]],null,{\"statements\":[[4,\"if\",[[21,1,[\"bindedControllerPropertieDisplayName\"]]],null,{\"statements\":[[0,\"                  \"],[1,[21,1,[\"bindedControllerPropertieDisplayName\"]],false],[0,\"=\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                  \"],[1,[21,1,[\"bindedControllerPropertieName\"]],false],[0,\"=\\n\"]],\"parameters\":[]}],[0,\"\\n\"],[4,\"if\",[[21,1,[\"settingIsWithoutUI\"]]],null,{\"statements\":[[0,\"                  \"],[1,[26,\"to-string\",[[21,1,[\"settingValue\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[26,\"eq\",[[21,1,[\"settingType\"]],\"boolean\"],null]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[26,\"mut\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[26,\"eq\",[[21,1,[\"settingType\"]],\"string\"],null]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"input\",null,[[\"type\",\"value\"],[\"text\",[26,\"mut\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[26,\"eq\",[[21,1,[\"settingType\"]],\"number\"],null]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"number-input\",null,[[\"value\"],[[26,\"mut\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[26,\"or\",[[26,\"eq\",[[21,1,[\"settingType\"]],\"date\"],null],[26,\"eq\",[[21,1,[\"settingType\"]],\"datetime\"],null]],null]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\"],[\"datetime-local\",[26,\"mut\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[26,\"eq\",[[21,1,[\"settingType\"]],\"enumeration\"],null]],null,{\"statements\":[[0,\"                    \"],[6,\"select\"],[11,\"onchange\",[26,\"action\",[[21,0,[]],[26,\"mut\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null]],[[\"value\"],[\"target.value\"]]],null],[8],[0,\"\\n                      \"],[6,\"option\"],[8],[9],[0,\"\\n\"],[4,\"each\",[[21,1,[\"settingAvailableItems\"]]],null,{\"statements\":[[0,\"                        \"],[6,\"option\"],[11,\"value\",[21,2,[]],null],[11,\"selected\",[26,\"eq\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null],[21,2,[]]],null],null],[8],[0,\"\\n                          \"],[1,[26,\"to-string\",[[21,2,[]]],null],false],[0,\"\\n                        \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"                    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[26,\"eq\",[[21,1,[\"settingType\"]],\"css\"],null]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"css-picker\",null,[[\"value\",\"items\"],[[26,\"mut\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null],[21,1,[\"settingAvailableItems\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[26,\"eq\",[[21,1,[\"settingType\"]],\"hasManyArray\"],null]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"to-string\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[26,\"eq\",[[21,1,[\"settingType\"]],\"model\"],null]],null,{\"statements\":[[0,\"                    \"],[1,[26,\"to-string\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n            \"],[6,\"td\"],[8],[0,\"\\n\"],[4,\"if\",[[26,\"or\",[[21,1,[\"settingIsWithoutUI\"]],[26,\"not\",[[21,1,[\"bindedControllerPropertieName\"]]],null]],null]],null,{\"statements\":[[0,\"                \"],[1,[21,1,[\"settingName\"]],false],[0,\"=\"],[1,[26,\"to-string\",[[21,1,[\"settingValue\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"                \"],[1,[26,\"to-string\",[[21,1,[\"settingName\"]]],null],false],[0,\"=\"],[1,[26,\"to-string\",[[26,\"get\",[[22,[\"controllerProperties\"]],[21,1,[\"bindedControllerPropertieName\"]]],null]],null],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"            \"],[9],[0,\"\\n            \"],[6,\"td\"],[8],[0,\"\\n              \"],[1,[26,\"to-string\",[[21,1,[\"settingName\"]]],null],false],[0,\"=\"],[1,[26,\"to-string\",[[21,1,[\"settingDefaultValue\"]]],null],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui segment\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui segment\"],[11,\"style\",[27,[\"overflow: \",[20,\"componentBlockOverflow\"]]]],[8],[0,\"\\n      \"],[6,\"h4\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"components.settings-example.component-with-applied-settings-caption\"],null],false],[9],[0,\"\\n      \"],[13,3],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/settings-example.hbs" } });
});
define("dummy/templates/components/ui-message-content", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "c4ojF7/O", "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[22,[\"caption\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[20,\"caption\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"message\"]]],null,{\"statements\":[[0,\"  \"],[6,\"p\"],[8],[1,[20,\"message\"],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[13,1],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/components/ui-message-content.hbs" } });
});
define("dummy/templates/components/ui-message", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "kI3yyP5K", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"icon\"]]],null,{\"statements\":[[0,\"  \"],[6,\"i\"],[11,\"class\",[27,[[20,\"icon\"]]]],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"closeable\"]]],null,{\"statements\":[[0,\"  \"],[6,\"i\"],[10,\"class\",\"close icon\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"icon\"]]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[14,\"components/ui-message-content\",[]],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[14,\"components/ui-message-content\",[]],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":true}", "meta": { "moduleName": "dummy/templates/components/ui-message.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-application-user-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "2S1+p9aX", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[0,\"-->\"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field flexberry-validationsummary-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui two column grid stackable\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"h4\"],[8],[0,\"Профиль\"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"birthday\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.birthday-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"birthday\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"birthday\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"gender\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.gender-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\",\"readonly\"],[[26,\"flexberry-enum\",[\"ember-flexberry-dummy-gender\"],null],[22,[\"model\",\"gender\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"gender\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"karma\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"karma\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.karma-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"karma\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"activated\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.activated-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"activated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"activated\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"vip\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.vip-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"vip\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"vip\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"h4\"],[8],[0,\"Контактная информация\"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone1\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"phone1\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone1-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone1\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone2\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"phone2\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone2-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone2\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone3\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"phone3\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone3-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"phone3\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"eMail\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"eMail\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.eMail-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"eMail\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"vK\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"vK\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.vK-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"vK\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"facebook\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"facebook\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.facebook-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"facebook\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"twitter\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"twitter\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.twitter-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"twitter\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-application-user-edit.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-application-user-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "nQ3qDvYN", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"deleteButton\",\"showCheckBoxInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-application-user\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"applicationUserObjectListView\",true,true]]],false],[0,\"  \\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-application-user-list.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-application-user-list/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "DciPB9eB", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n        Loading ...\\n        \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\" \\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-application-user-list/loading.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-comment-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "E5mCQXL9", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-comment-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field flexberry-validationsummary-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-comment-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-comment-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-comment-edit.moderated-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-comment-edit.author-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-comment-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-comment-edit.userVotes-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"mainModelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"commentUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],[22,[\"modelProjection\"]],true,\"rowClick\",true,[22,[\"commentsVoteEditRoute\"]],true,false,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"userVotes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-comment-edit.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-comment-list/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "rzcLomgp", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n        Loading ...\\n        \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\" \\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-comment-list/loading.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-comment-vote-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "kCIjFrDV", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-comment-vote-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"        \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[0,\"\\n          \"],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"],[4,\"unless\",[[22,[\"model\",\"isNew\"]]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[0,\"\\n            \"],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field flexberry-validationsummary-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-comment-vote-edit.voteType-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\",\"readonly\"],[[26,\"flexberry-enum\",[\"ember-flexberry-dummy-vote-type\"],null],[22,[\"model\",\"voteType\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"voteType\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-comment-vote-edit.applicationUser-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-lookup\",null,[[\"choose\",\"remove\",\"value\",\"displayAttributeName\",\"relationName\",\"projection\",\"title\",\"readonly\"],[\"showLookupDialog\",\"removeLookupValue\",[22,[\"model\",\"applicationUser\"]],\"name\",\"applicationUser\",\"ApplicationUserL\",[26,\"t\",[\"forms.ember-flexberry-dummy-comment-vote-edit.applicationUser-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"applicationUser\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-comment-vote-edit.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-localization-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "VFIZFHZX", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-localization-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field flexberry-validationsummary-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui one column grid stackable\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-localization-edit.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-localization-edit.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-localization-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Y/u3fCDT", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-localization-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"row\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[22,[\"model\"]],\"ember-flexberry-dummy-localization\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"localizationObjectListView\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-localization-list.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-localization-list/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Q+tz5BhU", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n        Loading ...\\n        \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\" \\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-localization-list/loading.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-multi-list-user-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "cHCjoim2", "block": "{\"symbols\":[\"settings\",\"settings\",\"settings\",\"settings\"],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"name\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"name\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"name\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"name\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.name-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"eMail\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"eMail\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"eMail\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"eMail\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.eMail-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"phone1\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"phone1\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"phone1\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"phone1\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone1-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"phone2\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"phone2\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"phone2\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"phone2\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone2-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"phone3\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"phone3\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"phone3\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"phone3\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.phone3-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.activated-caption\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"activated\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"activated\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-checkbox\",null,[[\"readonly\",\"value\"],[[22,[\"readonly\"]],[22,[\"model\",\"activated\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"vK\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"vK\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"vK\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"vK\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.vK-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"facebook\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"facebook\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"facebook\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"facebook\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.facebook-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"twitter\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"twitter\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"twitter\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"twitter\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.twitter-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.birthday-caption\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"birthday\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"birthday\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"readonly\",\"value\",\"class\"],[\"date\",[22,[\"readonly\"]],[22,[\"model\",\"birthday\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"birthday\"]],\"error\",\"\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.gender-caption\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"gender\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"gender\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\",\"readonly\"],[[26,\"flexberry-enum\",[\"ember-flexberry-dummy-gender\"],null],[22,[\"model\",\"gender\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.vip-caption\"],null],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"vip\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"vip\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-checkbox\",null,[[\"readonly\",\"value\"],[[22,[\"readonly\"]],[22,[\"model\",\"vip\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"karma\"]]],null,{\"statements\":[[0,\"      \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"karma\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"karma\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"karma\"]],\"error\",\"\"],null],[26,\"t\",[\"forms.ember-flexberry-dummy-application-user-edit.karma-caption\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"hr\"],[8],[9],[0,\"\\n    \"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-multi-list.caption\"],null],false],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiUserListOnEdit\"]]],null,{\"statements\":[[0,\"        \"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"editFormRoute\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[21,4,[\"modelName\"]],[21,4,[\"modelProjection\"]],[21,4,[\"editFormRoute\"]],[21,4,[\"model\"]],true,true,[21,4,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[21,4,[\"pages\"]],[21,4,[\"perPageValue\"]],[21,4,[\"perPageValues\"]],[21,4,[\"recordsTotalCount\"]],[21,4,[\"hasPreviousPage\"]],[21,4,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,4,[\"componentName\"]]]]],false],[0,\"\\n\"]],\"parameters\":[4]},null],[0,\"    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiUserList2OnEdit\"]]],null,{\"statements\":[[0,\"        \"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"editFormRoute\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[21,3,[\"modelName\"]],[21,3,[\"modelProjection\"]],[21,3,[\"editFormRoute\"]],[21,3,[\"model\"]],true,true,[21,3,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[21,3,[\"pages\"]],[21,3,[\"perPageValue\"]],[21,3,[\"perPageValues\"]],[21,3,[\"recordsTotalCount\"]],[21,3,[\"hasPreviousPage\"]],[21,3,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,3,[\"componentName\"]]]]],false],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiSuggestionListOnEdit\"]]],null,{\"statements\":[[0,\"        \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"enableFilters\",\"filters\",\"filterButton\",\"filterByAnyMatch\",\"filterText\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"applyFilters\",\"resetFilters\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\"],[[21,2,[\"editFormRoute\"]],true,[21,2,[\"modelName\"]],[21,2,[\"modelProjection\"]],[21,2,[\"model\"]],true,true,[21,2,[\"filters\"]],true,[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[21,2,[\"filter\"]],true,true,[21,2,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[21,2,[\"pages\"]],[21,2,[\"perPageValue\"]],[21,2,[\"perPageValues\"]],[21,2,[\"recordsTotalCount\"]],[21,2,[\"hasPreviousPage\"]],[21,2,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,2,[\"componentName\"]],true,true]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiHierarchyListOnEdit\"]]],null,{\"statements\":[[0,\"        \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"orderable\",\"componentName\",\"beforeDeleteAllRecords\",\"colsConfigButton\",\"disableHierarchicalMode\",\"showCheckBoxInRow\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"availableCollExpandMode\",\"inHierarchicalMode\",\"hierarchicalAttribute\",\"inExpandMode\"],[[21,1,[\"model\"]],[21,1,[\"modelName\"]],[21,1,[\"modelProjection\"]],[21,1,[\"editFormRoute\"]],false,[21,1,[\"componentName\"]],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],false,false,true,[21,1,[\"pages\"]],[21,1,[\"perPageValue\"]],[21,1,[\"perPageValues\"]],[21,1,[\"recordsTotalCount\"]],[21,1,[\"hasPreviousPage\"]],[21,1,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],true,[21,1,[\"inHierarchicalMode\"]],[21,1,[\"hierarchicalAttribute\"]],[21,1,[\"inExpandMode\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[0,\"    \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-multi-list-user-edit.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-multi-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "eZtOH+bx", "block": "{\"symbols\":[\"settings\",\"settings\",\"settings\",\"settings\"],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-multi-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiUserList\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"editFormRoute\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"advLimitButton\"],[[21,4,[\"modelName\"]],[21,4,[\"modelProjection\"]],[21,4,[\"editFormRoute\"]],[21,4,[\"model\"]],true,true,[21,4,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[21,4,[\"pages\"]],[21,4,[\"perPageValue\"]],[21,4,[\"perPageValues\"]],[21,4,[\"recordsTotalCount\"]],[21,4,[\"hasPreviousPage\"]],[21,4,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,4,[\"componentName\"]],[21,4,[\"advLimitButton\"]]]]],false],[0,\"\\n\"]],\"parameters\":[4]},null],[0,\"  \"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-multi-list.multi-edit-form\"],null],false],[9],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiUserList2\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"editFormRoute\",\"content\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"advLimitButton\"],[[21,3,[\"modelName\"]],[21,3,[\"modelProjection\"]],[21,3,[\"editFormRoute\"]],[21,3,[\"model\"]],true,true,[21,3,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[21,3,[\"pages\"]],[21,3,[\"perPageValue\"]],[21,3,[\"perPageValues\"]],[21,3,[\"recordsTotalCount\"]],[21,3,[\"hasPreviousPage\"]],[21,3,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,3,[\"componentName\"]],[21,3,[\"advLimitButton\"]]]]],false],[0,\"\\n\"]],\"parameters\":[3]},null],[0,\"\\n  \"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-multi-list.multi-edit-form\"],null],false],[9],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiSuggestionList\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"enableFilters\",\"filters\",\"filterButton\",\"filterByAnyMatch\",\"filterText\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"applyFilters\",\"resetFilters\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\"],[[21,2,[\"editFormRoute\"]],true,[21,2,[\"modelName\"]],[21,2,[\"modelProjection\"]],[21,2,[\"model\"]],true,true,[21,2,[\"filters\"]],true,[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[21,2,[\"filter\"]],true,true,[21,2,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[21,2,[\"pages\"]],[21,2,[\"perPageValue\"]],[21,2,[\"perPageValues\"]],[21,2,[\"recordsTotalCount\"]],[21,2,[\"hasPreviousPage\"]],[21,2,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[21,2,[\"componentName\"]],true,true]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"  \"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-multi-list.multi-edit-form\"],null],false],[9],[0,\"\\n\"],[4,\"with\",[[22,[\"multiListSettings\",\"MultiHierarchyList\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"orderable\",\"componentName\",\"beforeDeleteAllRecords\",\"colsConfigButton\",\"disableHierarchicalMode\",\"showCheckBoxInRow\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"availableCollExpandMode\",\"inHierarchicalMode\",\"hierarchicalAttribute\",\"inExpandMode\",\"hierarchyPaging\"],[[21,1,[\"model\"]],[21,1,[\"modelName\"]],[21,1,[\"modelProjection\"]],[21,1,[\"editFormRoute\"]],false,[21,1,[\"componentName\"]],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],false,false,true,[21,1,[\"pages\"]],[21,1,[\"perPageValue\"]],[21,1,[\"perPageValues\"]],[21,1,[\"recordsTotalCount\"]],[21,1,[\"hasPreviousPage\"]],[21,1,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],true,[21,1,[\"inHierarchicalMode\"]],[21,1,[\"hierarchicalAttribute\"]],[21,1,[\"inExpandMode\"]],[21,1,[\"hierarchyPaging\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-multi-list.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-multi-user-suggestion-list/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "XGxrq4AP", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n    Loading ...\\n    \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-multi-user-suggestion-list/loading.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "/64RQLZB", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field flexberry-validationsummary-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui one column grid stackable\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"address\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"address\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.address-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"address\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"text\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.text-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"type\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\",\"direction\",\"componentName\"],[[22,[\"model\",\"type\"]],[22,[\"model\"]],\"type\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.type-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]],\"upward\",\"SuggestionEditType\"]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"type\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.date-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"votes\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.votes-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"votes\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[0,\" \"],[9],[0,\"\\n          \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\",\"label\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.moderated-caption\"],null]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"showPreviewButton\",\"previewOnSeparateRoute\",\"previewFormRoute\",\"title\",\"choose\",\"remove\",\"preview\",\"lookupWindowCustomProperties\",\"readonly\",\"componentName\"],[[22,[\"model\",\"author\"]],[22,[\"model\"]],\"author\",\"ApplicationUserL\",\"name\",true,true,\"ember-flexberry-dummy-application-user-edit\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.author-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[26,\"action\",[[21,0,[]],\"getLookupFolvProperties\"],null],[22,[\"readonly\"]],\"SuggestionEditAuthor\"]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"author\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"showPreviewButton\",\"previewFormRoute\",\"title\",\"choose\",\"remove\",\"preview\",\"readonly\",\"componentName\",\"lookupWindowCustomProperties\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",true,\"ember-flexberry-dummy-application-user-edit\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[22,[\"readonly\"]],\"SuggestionEditEditor1\",[26,\"action\",[[21,0,[]],\"getLookupFolvProperties\"],null]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[4,\"flexberry-toggler\",null,[[\"caption\",\"expanded\"],[[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.files-caption\"],null],true]],{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"filesGroupEdit\",[22,[\"model\",\"files\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"files\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"flexberry-toggler\",null,[[\"caption\",\"expanded\"],[[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption\"],null],true]],{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionUserVotesGroupEdit\",[22,[\"model\",\"userVotes\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"userVotes\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"flexberry-toggler\",null,[[\"caption\",\"expanded\"],[[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.comments-caption\"],null],true]],{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"rowClickable\",\"rowClick\",\"editOnSeparateRoute\",\"editFormRoute\",\"saveBeforeRouteLeave\",\"orderable\",\"readonly\"],[\"suggestionCommentsGroupEdit\",[22,[\"model\",\"comments\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"comments\"]],true,\"rowClick\",true,[22,[\"commentsEditRoute\"]],true,true,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-edit.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-file-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "xybuRoa1", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-file-edit.header\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field flexberry-validationsummary-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[22,[\"model\",\"errors\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui one column grid stackable\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"order\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-file-edit.order\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-file-edit.file\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-file\",null,[[\"value\",\"showPreview\",\"showUploadButton\",\"showDownloadButton\"],[[22,[\"model\",\"file\"]],true,true,true]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-file-edit.suggestion\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"preview\",\"readonly\",\"componentName\"],[[22,[\"model\",\"suggestion\"]],[22,[\"model\"]],\"suggestion\",\"SuggestionL\",\"address\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-file-edit.suggestion\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[26,\"action\",[[21,0,[]],\"previewLookupValue\"],null],[22,[\"readonly\"]],\"Suggestion\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-file-edit.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-file-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "aN18gHyU", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-file-edit.header\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"row\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"deleteButton\",\"showCheckBoxInRow\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-file\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],true,true,true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"fileObjectListView\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-file-list.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-file-list/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "GTq/4R/x", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n        Loading ...\\n        \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\" \\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-file-list/loading.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "kS15CE5+", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"row\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"success\",true,[22,[\"showFormSuccessMessage\"]],[22,[\"formSuccessMessageCaption\"]],[22,[\"formSuccessMessage\"]],[26,\"action\",[[21,0,[]],\"onSuccessMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onSuccessMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"visible\",\"caption\",\"message\",\"onShow\",\"onHide\"],[\"error\",true,[22,[\"showFormErrorMessage\"]],[22,[\"formErrorMessageCaption\"]],[22,[\"formErrorMessage\"]],[26,\"action\",[[21,0,[]],\"onErrorMessageShow\"],null],[26,\"action\",[[21,0,[]],\"onErrorMessageHide\"],null]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"editFormRoute\",\"showCheckBoxInRow\",\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"enableFilters\",\"filters\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"applyFilters\",\"resetFilters\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showDeleteMenuItemInRow\",\"deleteButton\",\"advLimitButton\",\"beforeDeleteRecord\"],[[22,[\"editFormRoute\"]],true,\"ember-flexberry-dummy-suggestion\",[22,[\"modelProjection\"]],[22,[\"model\"]],true,true,[22,[\"filters\"]],true,true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SuggestionObjectListView\",true,true,false,[26,\"action\",[[21,0,[]],\"beforeDeleteRecord\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-list.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-list/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "+93eVuo5", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n        Loading ...\\n        \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\" \\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-list/loading.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-type-edit", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "5eB/k0YP", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field flexberry-validationsummary-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui one column grid stackable\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[1,[26,\"flexberry-field\",null,[[\"value\",\"label\",\"readonly\"],[[22,[\"model\",\"name\"]],[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.name-caption\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"name\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"parent\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.parent-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\"],[[22,[\"model\",\"parent\"]],[22,[\"model\"]],\"parent\",\"SuggestionTypeL\",\"name\",[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.parent-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"parent\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.moderated-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"moderated\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"moderated\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-edit.localized-types-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"mainModelProjection\",\"content\",\"modelProjection\",\"orderable\",\"readonly\"],[\"suggestionTypeLocalizedTypesGroupEdit\",[22,[\"modelProjection\"]],[22,[\"model\",\"localizedTypes\"]],[22,[\"modelProjection\",\"attributes\",\"localizedTypes\"]],false,[22,[\"readonly\"]]]]],false],[0,\"\\n    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"localizedTypes\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-type-edit.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-type-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "f4L/G+rm", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-type-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"deleteButton\",\"refreshButton\",\"exportExcelButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"showCheckBoxInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\",\"showDeleteButtonInRow\"],[[22,[\"model\"]],\"ember-flexberry-dummy-suggestion-type\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],true,true,true,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"SOLVSuggestionTypeObjectListView\",true,true,true,true]]],false],[0,\"\\n\"],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-type-list.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-suggestion-type-list/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "f0RZ9C4F", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n        Loading ...\\n        \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\" \\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-suggestion-type-list/loading.hbs" } });
});
define("dummy/templates/ember-flexberry-dummy-toggler-example-master-e", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "sE8ozYxp", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-toggler-example-master-e.caption\"],null],false],[9],[0,\"\\n\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"        \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[0,\"\\n          \"],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[0,\"\\n        \"],[9],[0,\"\\n\"],[4,\"unless\",[[22,[\"model\",\"isNew\"]]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[0,\"\\n            \"],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field flexberry-validationsummary-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n      \"],[1,[26,\"flexberry-validationsummary\",null,[[\"errors\"],[[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-toggler-example-master-e.toggler-example-master-property-caption\"],null],false],[9],[0,\"\\n  \"],[1,[26,\"flexberry-field\",null,[[\"placeholder\",\"readonly\",\"required\",\"value\"],[[26,\"t\",[\"components.flexberry-field.placeholder\"],null],[22,[\"readonly\"]],true,[22,[\"model\",\"togglerExampleMasterProperty\"]]]]],false],[0,\"\\n  \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"togglerExampleMasterProperty\"],null],\"messages\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"],[4,\"flexberry-toggler\",null,null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-toggler-example-master-e.toggler-example-deteil-property-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"readonly\"],[\"togglerExampleDetailGroupEdit\",[22,[\"model\",\"togglerExampleDetail\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"togglerExampleDetail\"]],true,[22,[\"readonly\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/ember-flexberry-dummy-toggler-example-master-e.hbs" } });
});
define("dummy/templates/error", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "kznCwW/q", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.error-form.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[8],[0,\"\\n  \"],[6,\"h2\"],[10,\"class\",\"ui header\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"nameLocaleKey\"]]],null,{\"statements\":[[0,\"      \"],[1,[26,\"t\",[[22,[\"model\",\"nameLocaleKey\"]]],null],false],[0,\":\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"model\",\"name\"]]],null,{\"statements\":[[0,\"      \"],[1,[22,[\"model\",\"name\"]],false],[0,\":\\n    \"]],\"parameters\":[]},null]],\"parameters\":[]}],[4,\"if\",[[22,[\"model\",\"messageLocaleKey\"]]],null,{\"statements\":[[0,\"      \"],[1,[26,\"t\",[[22,[\"model\",\"messageLocaleKey\"]]],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"model\",\"message\"]]],null,{\"statements\":[[0,\"      \"],[1,[22,[\"model\",\"message\"]],false],[0,\"\\n    \"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"stack\"]]],null,{\"statements\":[[4,\"flexberry-toggler\",null,[[\"caption\"],[[26,\"t\",[\"forms.error-form.show-more\"],null]]],{\"statements\":[[0,\"      \"],[6,\"pre\"],[8],[1,[22,[\"model\",\"stack\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[4,\"if\",[[22,[\"model\",\"retryRoute\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"model\",\"id\"]]],null,{\"statements\":[[0,\"      \"],[4,\"link-to\",[[22,[\"model\",\"retryRoute\"]],[22,[\"model\",\"id\"]]],[[\"tagName\",\"activeClass\",\"class\"],[\"button\",\"\",\"ui button\"]],{\"statements\":[[1,[26,\"t\",[\"forms.error-form.retry\"],null],false]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[4,\"link-to\",[[22,[\"model\",\"retryRoute\"]]],[[\"tagName\",\"activeClass\",\"class\"],[\"button\",\"\",\"ui button\"]],{\"statements\":[[1,[26,\"t\",[\"forms.error-form.retry\"],null],false]],\"parameters\":[]},null],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/error.hbs" } });
});
define("dummy/templates/filters-dialog-content", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "C+KYMwRF", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"filters-dialog-content\",null,[[\"componentName\",\"filterColumns\",\"close\",\"message\"],[[22,[\"model\",\"componentName\"]],[22,[\"model\",\"filterColumns\"]],[26,\"action\",[[21,0,[]],\"closeModalDialog\"],null],[22,[\"message\"]]]]],false],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/filters-dialog-content.hbs" } });
});
define("dummy/templates/filters-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Rrq9aeuQ", "block": "{\"symbols\":[],\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"sizeClass\",\"close\",\"created\",\"useOkButton\",\"useCloseButton\"],[[22,[\"title\"]],\"small\",\"removeModalDialog\",\"createdModalDialog\",false,false]],{\"statements\":[[0,\"  \"],[1,[26,\"outlet\",[\"modal-content\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/filters-dialog.hbs" } });
});
define("dummy/templates/flexberry-file-view-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "We/IJkVN", "block": "{\"symbols\":[],\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useOkButton\",\"close\",\"created\",\"viewImageContent\",\"sizeClass\",\"settings\"],[[22,[\"title\"]],false,\"removeModalDialog\",\"createdModalDialog\",true,[22,[\"sizeClass\"]],[22,[\"settings\"]]]],{\"statements\":[[0,\"  \"],[6,\"img\"],[10,\"class\",\"flexberry-file-view-dialog\"],[11,\"src\",[27,[[20,\"imageSrc\"]]]],[11,\"alt\",[26,\"t\",[\"components.flexberry-file.preview-image-alternative-text\"],null],null],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/flexberry-file-view-dialog.hbs" } });
});
define("dummy/templates/i-i-s-caseberry-logging-objects-application-log-e", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "MJCNk+gB", "block": "{\"symbols\":[\"currentError\"],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"errorMessages\"]]],null,{\"statements\":[[4,\"each\",[[22,[\"errorMessages\"]]],null,{\"statements\":[[0,\"    \"],[1,[26,\"ui-message\",null,[[\"type\",\"closeable\",\"title\",\"message\"],[\"error\",true,\"Error occurred\",[21,1,[]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-edit-panel\"],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"save\"]],[8],[1,[26,\"t\",[\"forms.edit-form.save-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"hasParentRoute\"]],[26,\"not\",[[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"saveAndClose\"]],[8],[1,[26,\"t\",[\"forms.edit-form.saveAndClose-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[26,\"and\",[[22,[\"model\",\"isNew\"]],[26,\"or\",[[26,\"not\",[[22,[\"hasParentRoute\"]]],null],[26,\"and\",[[22,[\"hasParentRoute\"]],[22,[\"saveBeforeRouteLeave\"]]],null]],null]],null]],null,{\"statements\":[[0,\"          \"],[6,\"button\"],[10,\"class\",\"ui button save-del-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"delete\"]],[8],[1,[26,\"t\",[\"forms.edit-form.delete-button-text\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"      \"],[6,\"button\"],[10,\"class\",\"ui button close-button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"close\"]],[8],[1,[26,\"t\",[\"forms.edit-form.close-button-text\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"category\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"category\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"category\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"category\"]],\"error\",\"\"],null],\"Category\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"eventId\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"eventId\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"eventId\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"eventId\"]],\"error\",\"\"],null],\"Event id\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"priority\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"priority\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"priority\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"priority\"]],\"error\",\"\"],null],\"Priority\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"severity\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"severity\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"severity\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"severity\"]],\"error\",\"\"],null],\"Severity\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"title\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"title\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"title\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"title\"]],\"error\",\"\"],null],\"Title\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n  \"],[6,\"label\"],[8],[0,\"Timestamp\"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"timestamp\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[22,[\"model\",\"errors\",\"timestamp\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"readonly\",\"value\",\"class\"],[\"datetime-local\",[22,[\"readonly\"]],[22,[\"model\",\"timestamp\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"timestamp\"]],\"error\",\"\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"machineName\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"machineName\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"machineName\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"machineName\"]],\"error\",\"\"],null],\"Machine name\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"appDomainName\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"appDomainName\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"appDomainName\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"appDomainName\"]],\"error\",\"\"],null],\"App domain name\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"processId\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"processId\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"processId\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"processId\"]],\"error\",\"\"],null],\"Process id\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"processName\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"processName\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"processName\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"processName\"]],\"error\",\"\"],null],\"Process name\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"threadName\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"threadName\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"threadName\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"threadName\"]],\"error\",\"\"],null],\"Thread name\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"win32ThreadId\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"win32ThreadId\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"win32ThreadId\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"win32ThreadId\"]],\"error\",\"\"],null],\"Win32 thread id\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"message\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"message\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"message\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"message\"]],\"error\",\"\"],null],\"Message\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"model\",\"errors\",\"formattedMessage\"]]],null,{\"statements\":[[0,\"    \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[0,\"\\n      \"],[1,[22,[\"model\",\"errors\",\"formattedMessage\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[1,[26,\"flexberry-field\",null,[[\"readonly\",\"required\",\"value\",\"class\",\"label\"],[[22,[\"readonly\"]],true,[22,[\"model\",\"formattedMessage\"]],[26,\"if\",[[22,[\"model\",\"errors\",\"formattedMessage\"]],\"error\",\"\"],null],\"Formatted message\"]]],false],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs" } });
});
define("dummy/templates/i-i-s-caseberry-logging-objects-application-log-l", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "ITfbDsU9", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.i-i-s-caseberry-logging-objects-application-log-l.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"createNewButton\",\"refreshButton\",\"sorting\",\"orderable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"previousPage\",\"gotoPage\",\"nextPage\",\"componentName\",\"beforeDeleteAllRecords\"],[[22,[\"model\"]],\"i-i-s-caseberry-logging-objects-application-log\",[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],false,true,[22,[\"computedSorting\"]],true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],\"IISLoggingObjectListView\",[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-l.hbs" } });
});
define("dummy/templates/i-i-s-caseberry-logging-objects-application-log-l/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "TnTOB1G9", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"loading-pane\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n        Loading ...\\n        \"],[6,\"div\"],[10,\"class\",\"spinner\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n\"],[9],[0,\" \\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-l/loading.hbs" } });
});
define("dummy/templates/index", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "5iGBskfd", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"flexberry-container\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui stackable doubling grid\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"eight wide middle computer four wide large screen four wide widescreen column need-pd-computer\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui card\"],[8],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n            \"],[6,\"i\"],[10,\"class\",\"edit outline icon card-icon\"],[8],[9],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.index.components\"],null],false],[9],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"description\"],[8],[0,\"\\n              \"],[6,\"ul\"],[8],[0,\"\\n                \"],[6,\"li\"],[8],[4,\"link-to\",[\"components-examples/flexberry-field/settings-example\"],null,{\"statements\":[[0,\"Flexberry-field\"]],\"parameters\":[]},null],[9],[0,\"\\n                \"],[6,\"li\"],[8],[4,\"link-to\",[\"components-examples/flexberry-checkbox/settings-example\"],null,{\"statements\":[[0,\"Flexberry-checkbox\"]],\"parameters\":[]},null],[9],[0,\"\\n                \"],[6,\"li\"],[8],[4,\"link-to\",[\"components-examples/flexberry-button/settings-example\"],null,{\"statements\":[[0,\"Flexberry-button\"]],\"parameters\":[]},null],[9],[0,\"\\n                \"],[6,\"li\"],[8],[4,\"link-to\",[\"components-examples/flexberry-dropdown/settings-example\"],null,{\"statements\":[[0,\"Flexberry-dropdown\"]],\"parameters\":[]},null],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"eight wide middle computer four wide large screen four wide widescreen column need-pd-computer\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui card\"],[8],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n            \"],[6,\"i\"],[10,\"class\",\"icon lock card-icon\"],[8],[9],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.index.log-service.title\"],null],false],[9],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"description\"],[8],[0,\"\\n              \"],[6,\"ul\"],[8],[0,\"\\n                \"],[6,\"li\"],[8],[4,\"link-to\",[\"i-i-s-caseberry-logging-objects-application-log-l\"],null,{\"statements\":[[1,[26,\"t\",[\"forms.index.log-service.app-log\"],null],false]],\"parameters\":[]},null],[9],[0,\"\\n                \"],[6,\"li\"],[8],[4,\"link-to\",[\"log-service-examples/settings-example\"],null,{\"statements\":[[1,[26,\"t\",[\"forms.index.log-service.settings-example\"],null],false]],\"parameters\":[]},null],[9],[0,\"\\n                \"],[6,\"li\"],[8],[4,\"link-to\",[\"log-service-examples/clear-log-form\"],null,{\"statements\":[[1,[26,\"t\",[\"forms.index.log-service.log-cleaning\"],null],false]],\"parameters\":[]},null],[9],[0,\"\\n              \"],[9],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\\n      \"],[6,\"div\"],[10,\"class\",\"sixteen wide middle computer eight wide large screen eight wide widescreen column\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui two column grid\"],[8],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n\"],[4,\"link-to\",[\"ember-flexberry-dummy-application-user-list\"],[[\"class\"],[\"ui card\"]],{\"statements\":[[0,\"              \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n                \"],[6,\"i\"],[10,\"class\",\"icon user outline card-icon\"],[8],[9],[0,\"\\n                \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.index.users\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n\"],[4,\"link-to\",[\"ember-flexberry-dummy-localization-list\"],[[\"class\"],[\"ui card\"]],{\"statements\":[[0,\"              \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n                \"],[6,\"i\"],[10,\"class\",\"icon comment outline card-icon\"],[8],[9],[0,\"\\n                \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.index.localization\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n\\n          \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n\"],[4,\"link-to\",[\"i-i-s-caseberry-logging-objects-application-log-l\"],[[\"class\"],[\"ui card\"]],{\"statements\":[[0,\"              \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n                \"],[6,\"i\"],[10,\"class\",\"icon clock outline card-icon\"],[8],[9],[0,\"\\n                \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.index.log\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n\"],[4,\"link-to\",[\"new-platform-flexberry-services-lock-list\"],[[\"class\"],[\"ui card\"]],{\"statements\":[[0,\"              \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n                \"],[6,\"i\"],[10,\"class\",\"icon lock card-icon\"],[8],[9],[0,\"\\n                \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.index.blocking\"],null],false],[9],[0,\"\\n              \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"sixteen wide computer eight wide large screen eight wide widescreen column\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui card\"],[8],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.index.search.title\"],null],false],[9],[0,\"\\n            \"],[6,\"form\"],[10,\"class\",\"ui form\"],[8],[0,\"\\n              \"],[1,[26,\"flexberry-field\",null,[[\"label\",\"placeholder\"],[[26,\"t\",[\"forms.index.search.field-label\"],null],[26,\"t\",[\"forms.index.search.field-placeholder\"],null]]]],false],[0,\"\\n              \"],[1,[26,\"flexberry-field\",null,[[\"label\",\"placeholder\"],[[26,\"t\",[\"forms.index.search.field-label\"],null],[26,\"t\",[\"forms.index.search.date-field-placeholder\"],null]]]],false],[0,\"\\n              \"],[1,[26,\"flexberry-button\",null,[[\"class\",\"caption\"],[\"primary large\",[26,\"t\",[\"forms.index.search.button-caption\"],null]]]],false],[0,\"\\n              \"],[1,[26,\"flexberry-checkbox\",null,[[\"label\"],[[26,\"t\",[\"forms.index.search.checkbox-label\"],null]]]],false],[0,\"\\n            \"],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/index.hbs" } });
});
define("dummy/templates/integration-examples/edit-form/readonly-mode", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "O08Xul+9", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.caption\"],null],false],[9],[0,\"\\n\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui two column grid stackable\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"h4\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.readonly-flag-management-segment-caption\"],null],false],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"ui checkbox\"],[8],[0,\"\\n        \"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[26,\"mut\",[[22,[\"readonly\"]]],null]]]],false],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.readonly-flag-caption\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"h4\"],[8],[0,\"Элементы в режиме \\\"Только для чтения\\\"\"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\",\"readonly\",\"label\"],[[22,[\"model\",\"flag\"]],[22,[\"readonly\"]],[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.flag-caption\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.text-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-textbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"text\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n      \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.long-text-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-textarea\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"longText\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.date-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\"],[\"date\",[22,[\"model\",\"date\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.time-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"readonly\",\"type\",\"value\"],[[22,[\"readonly\"]],\"datetime\",[22,[\"model\",\"time\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.enumeration-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\",\"readonly\"],[[26,\"flexberry-enum\",[\"integration-examples/edit-form/readonly-mode/enumeration\"],null],[22,[\"model\",\"enumeration\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.number-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-textbox\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"number\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.file-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-file\",null,[[\"value\",\"readonly\"],[[22,[\"model\",\"file\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.master-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"readonly\"],[[22,[\"model\",\"master\"]],[22,[\"model\"]],\"master\",\"MasterL\",\"text\",[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.master-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.master-dropdown-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\",\"dropdown\",\"readonly\"],[[22,[\"model\",\"masterDropdown\"]],[22,[\"model\"]],\"masterDropdown\",\"MasterDropdownL\",\"text\",[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.master-dropdown-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],true,[22,[\"readonly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"h4\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.readonly-mode.readonly-flag-value-segment-caption\"],null],false],[9],[0,\"\\n      readonly=\"],[1,[26,\"to-string\",[[22,[\"readonly\"]]],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"modelProjection\",\"readonly\"],[\"aggregatorDetailsGroupedit\",[22,[\"model\",\"details\"]],[22,[\"modelProjection\",\"attributes\",\"details\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/integration-examples/edit-form/readonly-mode.hbs" } });
});
define("dummy/templates/integration-examples/edit-form/validation", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "WVUqW6oA", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui two column grid stackable\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"column\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"sixteen wide\"],[8],[0,\"\\n          \"],[1,[26,\"flexberry-validationsummary\",null,[[\"header\",\"errors\"],[[26,\"t\",[\"forms.integration-examples.edit-form.validation.summary-caption\"],null],[26,\"get\",[[22,[\"validationObject\",\"validations\"]],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"flag\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.flag-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-checkbox\",null,[[\"value\"],[[22,[\"model\",\"flag\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\",\"pointing\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"flag\"],null],\"messages\"],null],\"left pointing\"]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"number\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.number-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-textbox\",null,[[\"value\"],[[22,[\"model\",\"number\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"number\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.text-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-textbox\",null,[[\"value\"],[[22,[\"model\",\"text\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"text\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"longText\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n      \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.long-text-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-textarea\",null,[[\"value\"],[[22,[\"model\",\"longText\"]]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"longText\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.date-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\"],[\"date\",[22,[\"model\",\"date\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"date\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"enumeration\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n          \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.enumeration-caption\"],null],false],[9],[0,\"\\n          \"],[1,[26,\"flexberry-dropdown\",null,[[\"items\",\"value\"],[[26,\"flexberry-enum\",[\"integration-examples/edit-form/validation/enumeration\"],null],[22,[\"model\",\"enumeration\"]]]]],false],[0,\"\\n          \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"enumeration\"],null],\"messages\"],null]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"file\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.file-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-file\",null,[[\"value\",\"showUploadButton\",\"showDownloadButton\"],[[22,[\"model\",\"file\"]],false,false]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"file\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"master\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n        \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.master-caption\"],null],false],[9],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"componentName\",\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"title\",\"choose\",\"remove\"],[\"IntegrationExamplesValidationsMaster\",[22,[\"model\",\"master\"]],[22,[\"model\"]],\"master\",\"MasterL\",\"text\",[26,\"t\",[\"forms.integration-examples.edit-form.validation.master-caption\"],null],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null]]]],false],[0,\"\\n        \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"master\"],null],\"messages\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.integration-examples.edit-form.validation.details-caption\"],null],false],[9],[0,\"\\n    \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\"],[\"IntegrationExamplesEditFormValidationsDetails\",[22,[\"model\",\"details\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"details\"]],false]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[4,\"flexberry-toggler\",null,[[\"caption\",\"expanded\"],[[26,\"t\",[\"forms.integration-examples.edit-form.validation.details-caption\"],null],true]],{\"statements\":[[0,\"    \"],[6,\"div\"],[11,\"class\",[27,[\"field \",[26,\"if\",[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"details\"],null],\"isInvalid\"],null],\"error\"],null]]]],[8],[0,\"\\n      \"],[1,[26,\"flexberry-groupedit\",null,[[\"componentName\",\"content\",\"mainModelProjection\",\"modelProjection\",\"orderable\",\"showValidationMessagesInRow\"],[\"IntegrationExamplesEditFormValidationsDetails\",[22,[\"model\",\"details\"]],[22,[\"modelProjection\"]],[22,[\"modelProjection\",\"attributes\",\"details\"]],false,false]]],false],[0,\"\\n      \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"details\"],null],\"messages\"],null]]]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/integration-examples/edit-form/validation.hbs" } });
});
define("dummy/templates/loading", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "t7m48dns", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"ui active inverted dimmer loading-pane\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"loading-message\"],[8],[0,\"\\n    Выполняется загрузка. Подождите, пожалуйста\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui text loader\"],[8],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/loading.hbs" } });
});
define("dummy/templates/log-service-examples/clear-log-form", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "qUgldsEs", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[8],[0,\"Batch clear log records\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[6,\"p\"],[8],[0,\"\\n    Log records total count: \"],[1,[20,\"logRecordsTotalCount\"],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"p\"],[8],[0,\"\\n    Clear log records older:\\n    \"],[1,[26,\"flexberry-simpledatetime\",null,[[\"type\",\"value\",\"readonly\",\"class\"],[\"date\",[22,[\"logRecordsOlderDate\"]],false,\"example-simpledatetime\"]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"logRecordsOlderDate\"]]],null,{\"statements\":[[0,\"  \"],[6,\"p\"],[8],[0,\"\\n    Log records older this date count: \"],[1,[20,\"logRecordsOlderDateCount\"],false],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[6,\"p\"],[8],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui refresh-counts button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"getCounts\"]],[8],[0,\"Refresh counts\"],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui clear-all-log button\"],[10,\"type\",\"submit\"],[3,\"action\",[[21,0,[]],\"clearLogRecords\"]],[8],[0,\"Clear\\n    \"],[4,\"if\",[[22,[\"logRecordsOlderDate\"]]],null,{\"statements\":[[0,\" \"],[1,[20,\"logRecordsOlderDateCount\"],false],[0,\" \"]],\"parameters\":[]},{\"statements\":[[0,\" all \"]],\"parameters\":[]}],[0,\" log records\"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"queryInExecutingState\"]]],null,{\"statements\":[[0,\"  \"],[6,\"p\"],[8],[0,\"\\n    Executing query...\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/log-service-examples/clear-log-form.hbs" } });
});
define("dummy/templates/log-service-examples/settings-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "nnCKJ7wQ", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.log-service-examples.settings-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[6,\"table\"],[10,\"class\",\"ui celled table flexberry-word-break\"],[8],[0,\"\\n    \"],[6,\"thead\"],[8],[0,\"\\n      \"],[6,\"tr\"],[8],[0,\"\\n        \"],[6,\"th\"],[8],[1,[26,\"t\",[\"forms.log-service-examples.settings-example.setting-column-header-caption\"],null],false],[9],[0,\"\\n        \"],[6,\"th\"],[8],[1,[26,\"t\",[\"forms.log-service-examples.settings-example.settings-value-column-header-caption\"],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"tbody\"],[8],[0,\"\\n      \"],[6,\"tr\"],[8],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.enabled=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"enabled\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.enabled=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"enabled\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color:#db2828\"],[8],[0,\"\\n      \"],[6,\"td\"],[8],[0,\"logService.storeErrorMessages=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"storeErrorMessages\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeErrorMessages=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"storeErrorMessages\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color: #f2711c;\"],[8],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeWarnMessages=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"storeWarnMessages\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeWarnMessages=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"storeWarnMessages\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color: #fbbd08;\"],[8],[0,\"\\n      \"],[6,\"td\"],[8],[0,\"logService.storeDeprecationMessages=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"storeDeprecationMessages\"]]]]],false],[9],[0,\"\\n      \"],[6,\"td\"],[8],[0,\"logService.storeDeprecationMessages=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"storeDeprecationMessages\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color: #21ba45;\"],[8],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeLogMessages=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"storeLogMessages\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeLogMessages=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"storeLogMessages\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color: #00b5ad;\"],[8],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeInfoMessages=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"storeInfoMessages\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeInfoMessages=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"storeInfoMessages\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color: #2185d0;\"],[8],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeDebugMessages=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"storeDebugMessages\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storeDebugMessages=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"storeDebugMessages\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color:#db2828\"],[8],[0,\"\\n      \"],[6,\"td\"],[8],[0,\"logService.storePromiseErrors=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"storePromiseErrors\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.storePromiseErrors=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"storePromiseErrors\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color:#db2828\"],[8],[0,\"\\n      \"],[6,\"td\"],[8],[0,\"logService.showPromiseErrors=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"showPromiseErrors\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.showPromiseErrors=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"showPromiseErrors\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"tr\"],[10,\"style\",\"background-color:#db2828\"],[8],[0,\"\\n      \"],[6,\"td\"],[8],[0,\"logService.errorMessageFilterActive=\"],[1,[26,\"input\",null,[[\"type\",\"checked\"],[\"checkbox\",[22,[\"logService\",\"errorMessageFilterActive\"]]]]],false],[9],[0,\"\\n        \"],[6,\"td\"],[8],[0,\"logService.errorMessageFilterActive=\"],[1,[26,\"to-string\",[[22,[\"logService\",\"errorMessageFilterActive\"]]],null],false],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"class\",\"createNewButton\",\"refreshButton\",\"colsConfigButton\",\"sorting\",\"orderable\",\"rowClickable\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"sortByColumn\",\"addColumnToSorting\",\"beforeDeleteAllRecords\",\"previousPage\",\"gotoPage\",\"nextPage\",\"customButtons\",\"onThrowExceptionButtonClick\",\"onRejectRsvpPromiseButtonClick\",\"onEmberAssertButtonClick\",\"onEmberLoggerErrorButtonClick\",\"onEmberLoggerWarnButtonClick\",\"onEmberDeprecateButtonClick\",\"onEmberLoggerLogButtonClick\",\"onEmberLoggerInfoButtonClick\",\"onEmberLoggerDebugButtonClick\",\"componentName\",\"colsConfigButton\"],[[22,[\"model\"]],\"i-i-s-caseberry-logging-objects-application-log\",[22,[\"modelProjection\"]],\"flexberry-word-break crimean-theme\",false,true,true,[22,[\"computedSorting\"]],true,false,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[22,[\"objectListViewCustomButtons\"]],[26,\"action\",[[21,0,[]],\"onThrowExceptionButtonClick\"],null],[26,\"action\",[[21,0,[]],\"onRejectRsvpPromiseButtonClick\"],null],[26,\"action\",[[21,0,[]],\"onEmberAssertButtonClick\"],null],[26,\"action\",[[21,0,[]],\"onEmberLoggerErrorButtonClick\"],null],[26,\"action\",[[21,0,[]],\"onEmberLoggerWarnButtonClick\"],null],[26,\"action\",[[21,0,[]],\"onEmberDeprecateButtonClick\"],null],[26,\"action\",[[21,0,[]],\"onEmberLoggerLogButtonClick\"],null],[26,\"action\",[[21,0,[]],\"onEmberLoggerInfoButtonClick\"],null],[26,\"action\",[[21,0,[]],\"onEmberLoggerDebugButtonClick\"],null],\"FOLVSettingExample\",false]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/log-service-examples/settings-example.hbs" } });
});
define("dummy/templates/login", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "FHi7dmLK", "block": "{\"symbols\":[],\"statements\":[[6,\"form\"],[10,\"id\",\"form1\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"login-form flexberry-container\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"login-form-inner\"],[8],[0,\"\\n      \"],[6,\"div\"],[11,\"class\",[27,[\"ui \",[26,\"if\",[[22,[\"loginIsInProcess\"]],\"active\"],null],\" inverted dimmer\"]]],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui loader\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.login-form.header\"],null],false],[9],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"sign-up\"],[10,\"href\",\"#\"],[8],[1,[26,\"t\",[\"forms.login-form.sign-up-caption\"],null],false],[9],[0,\"\\n      \"],[1,[26,\"flexberry-field\",null,[[\"label\",\"placeholder\",\"class\"],[[26,\"t\",[\"forms.login-form.enter-login-caption\"],null],[26,\"t\",[\"forms.login-form.enter-login-caption\"],null],\"labeled-inside large\"]]],false],[0,\"\\n      \"],[1,[26,\"flexberry-field\",null,[[\"label\",\"placeholder\",\"class\",\"type\"],[[26,\"t\",[\"forms.login-form.enter-password-caption\"],null],[26,\"t\",[\"forms.login-form.enter-password-caption\"],null],\"labeled-inside large\",\"password\"]]],false],[0,\"\\n      \"],[1,[26,\"flexberry-button\",null,[[\"class\",\"caption\",\"click\"],[\"primary large fluid\",[26,\"t\",[\"forms.login-form.login-button-caption\"],null],[26,\"action\",[[21,0,[]],\"onLoginFormSubmit\"],null]]]],false],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"reset-password\"],[10,\"href\",\"#\"],[8],[1,[26,\"t\",[\"forms.login-form.reset-password-caption\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/login.hbs" } });
});
define("dummy/templates/lookup-dialog-content", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "KxQWvBO5", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"id\",\"lookup-list\"],[10,\"class\",\"list-group\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"class\",\"modelProjection\",\"content\",\"selectedRecord\",\"componentMode\",\"componentName\",\"lookupComponentName\",\"showEditMenuItemInRow\",\"createNewButton\",\"showCheckBoxInRow\",\"colsConfigButton\",\"columnsWidthAutoresize\",\"filterByAnyMatch\",\"filterText\",\"filters\",\"applyFilters\",\"resetFilters\",\"customProperties\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"disableHierarchicalMode\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"notUseUserSettings\",\"beforeDeleteAllRecords\"],[\"ui bottom attached\",[22,[\"modelProjection\"]],[22,[\"model\"]],[22,[\"currentLookupRow\"]],\"lookupform\",[22,[\"folvComponentName\"]],[22,[\"componentName\"]],false,false,false,false,true,[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[22,[\"filter\"]],[22,[\"filters\"]],[26,\"action\",[[21,0,[]],\"applyFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\"],null],[22,[\"customPropertiesData\"]],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[22,[\"disableHierarchicalMode\"]],[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[22,[\"notUseUserSettings\"]],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/lookup-dialog-content.hbs" } });
});
define("dummy/templates/lookup-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "g0FknXbX", "block": "{\"symbols\":[],\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"sizeClass\",\"close\",\"created\",\"useOkButton\",\"useCloseButton\",\"componentName\",\"useSidePageMode\",\"settings\"],[[22,[\"title\"]],[22,[\"modalDialogSettings\",\"sizeClass\"]],\"removeModalDialog\",\"createdModalDialog\",[22,[\"modalDialogSettings\",\"useOkButton\"]],[22,[\"modalDialogSettings\",\"useCloseButton\"]],[22,[\"componentName\"]],[22,[\"modalDialogSettings\",\"useSidePageMode\"]],[22,[\"modalDialogSettings\",\"settings\"]]]],{\"statements\":[[0,\"  \"],[1,[26,\"outlet\",[\"modal-content\"],null],false],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/lookup-dialog.hbs" } });
});
define("dummy/templates/mobile/application", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "WkfJe1JF", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"isInAcceptanceTestMode\"]]],null,{\"statements\":[[0,\"  \"],[1,[20,\"outlet\"],false],[0,\"\\n  \"],[1,[26,\"outlet\",[\"modal\"],null],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"flexberry-sidebar\",null,[[\"class\",\"settings\"],[\"mobile inverted vertical main menu\",[26,\"hash\",null,[[\"onShow\",\"onHidden\"],[[26,\"action\",[[21,0,[]],\"updateWidth\"],null],[26,\"action\",[[21,0,[]],\"updateWidth\"],null]]]]]],{\"statements\":[[0,\"  \"],[1,[26,\"flexberry-sitemap-guideline\",null,[[\"sitemap\",\"class\"],[[22,[\"sitemap\"]],\"flexberry-sitemap\"]]],false],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"sitebar-footer\"],[8],[0,\"\\n    \"],[6,\"a\"],[10,\"class\",\"item\"],[11,\"href\",[20,\"addonVersionHref\"],null],[10,\"target\",\"_blank\"],[11,\"title\",[26,\"t\",[\"forms.application.sitemap.application-version.title\"],null],null],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.application.sitemap.application-version.caption\"],[[\"version\"],[[22,[\"addonVersion\"]]]]],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"a\"],[10,\"class\",\"item\"],[11,\"title\",[26,\"t\",[\"forms.support-form.caption\"],null],null],[3,\"action\",[[21,0,[]],\"showModalSupport\"]],[8],[1,[26,\"t\",[\"forms.support-form.caption\"],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[6,\"div\"],[10,\"class\",\"bgw-fix mobile\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"background-logo mobile\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui top attached\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"ui attached menu mobile\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui container flex-container\"],[8],[0,\"\\n          \"],[6,\"a\"],[10,\"class\",\"launch icon item mobile\"],[11,\"title\",[26,\"t\",[\"forms.application.header.menu.sitemap-button.title\"],null],null],[3,\"action\",[[21,0,[]],\"toggleSidebarMobile\"]],[8],[0,\"\\n            \"],[6,\"i\"],[10,\"class\",\"sidebar icon text-menu-show\"],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"a\"],[10,\"class\",\"item logo\"],[10,\"href\",\"https://github.com/flexberry\"],[10,\"target\",\"_blank\"],[11,\"title\",[26,\"t\",[\"forms.application.sitemap.application-name.title\"],null],null],[8],[0,\"\\n      \"],[6,\"img\"],[10,\"class\",\"ui centered image\"],[10,\"src\",\"/assets/images/logo-mini.png\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"a\"],[10,\"class\",\"page-header-caption\"],[10,\"href\",\"https://github.com/flexberry\"],[8],[0,\"\\n      \"],[6,\"span\"],[10,\"class\",\"page-header-caption-app-name\"],[8],[1,[26,\"t\",[\"application-name\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"page-header-userbar\"],[8],[0,\"\\n      \"],[6,\"img\"],[10,\"src\",\"assets/images/user-foto.jpg\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"id\",\"example-mobile\"],[10,\"class\",\"pusher mobile\"],[8],[0,\"\\n  \"],[6,\"div\"],[11,\"class\",[27,[\"ui form \",[22,[\"appState\",\"state\"]]]]],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"full height\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"flexberry-content ui attached segment\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"ui main container\"],[8],[0,\"\\n          \"],[6,\"div\"],[10,\"class\",\"stackable grid container\"],[8],[0,\"\\n            \"],[1,[20,\"outlet\"],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"ui main container\"],[8],[0,\"\\n  \"],[1,[26,\"outlet\",[\"modal\"],null],false],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"ui vertical footer segment\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui container flex-container mobile-footer\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui text menu\"],[8],[0,\"\\n      \"],[6,\"a\"],[10,\"class\",\"brand item\"],[10,\"href\",\"#\"],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.application.footer.application-name\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"right menu\"],[8],[0,\"\\n        \"],[6,\"a\"],[10,\"class\",\"item\"],[11,\"href\",[20,\"addonVersionHref\"],null],[10,\"target\",\"_blank\"],[11,\"title\",[26,\"t\",[\"forms.application.footer.application-version.title\"],null],null],[8],[0,\"\\n            \"],[1,[26,\"t\",[\"forms.application.footer.application-version.caption\"],[[\"version\"],[[22,[\"addonVersion\"]]]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/application.hbs" } });
});
define("dummy/templates/mobile/components-examples/flexberry-lookup/lookup-block-form-example", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "6OsaK2Md", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-block-form-example.caption\"],null],false],[9],[0,\"\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n    \"],[6,\"label\"],[8],[1,[26,\"t\",[\"forms.ember-flexberry-dummy-suggestion-edit.editor1-caption\"],null],false],[9],[0,\"\\n\"],[4,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"readonly\",\"choose\",\"remove\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"Name\",[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null]]],{\"statements\":[[0,\"      \"],[1,[22,[\"model\",\"editor1\",\"name\"]],false],[6,\"br\"],[8],[9],[0,\"\\n      \"],[1,[22,[\"model\",\"editor1\",\"eMail\"]],false],[6,\"br\"],[8],[9],[0,\"\\n      \"],[1,[22,[\"model\",\"editor1\",\"gender\"]],false],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[1,[26,\"flexberry-validationmessage\",null,[[\"error\"],[[26,\"get\",[[26,\"get\",[[22,[\"validationObject\",\"validations\",\"attrs\"]],\"editor1\"],null],\"messages\"],null]]]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/components-examples/flexberry-lookup/lookup-block-form-example.hbs" } });
});
define("dummy/templates/mobile/components-examples/flexberry-lookup/lookup-in-modal", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "xLBba4Jv", "block": "{\"symbols\":[],\"statements\":[[6,\"h3\"],[10,\"class\",\"ui header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.caption\"],null],false],[9],[0,\"\\n\\n\"],[6,\"form\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[10,\"role\",\"form\"],[8],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"modalWindow\",\"#example-mobile\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonModal\"],null],false],[9],[0,\"\\n  \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"modalWindowDouble\",\"#example-mobile\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonModalDouble\"],null],false],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"ui modal repeat-window hidden\"],[8],[0,\"\\n  \"],[6,\"i\"],[10,\"class\",\"close icon\"],[8],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.captionModal\"],null],false],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"relatedModel\",\"relationName\",\"projection\",\"displayAttributeName\",\"readonly\",\"choose\",\"remove\"],[[22,[\"model\",\"editor1\"]],[22,[\"model\"]],\"editor1\",\"ApplicationUserL\",\"name\",[22,[\"readonly\"]],[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"logOut\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonClose\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[6,\"div\"],[10,\"class\",\"ui modal repeat-window-double hidden\"],[8],[0,\"\\n  \"],[6,\"i\"],[10,\"class\",\"close icon\"],[8],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"header\"],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.captionModalDouble\"],null],false],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui form flexberry-vertical-form\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-lookup\",null,[[\"value\",\"projection\",\"displayAttributeName\",\"title\",\"relationName\",\"choose\",\"remove\",\"readonly\"],[[22,[\"model\",\"type\"]],\"SuggestionTypeL\",\"name\",\"Master\",\"type\",[26,\"action\",[[21,0,[]],\"showLookupDialog\"],null],[26,\"action\",[[21,0,[]],\"removeLookupValue\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"logOutDouble\"]],[8],[1,[26,\"t\",[\"forms.components-examples.flexberry-lookup.lookup-in-modal.buttonClose\"],null],false],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/components-examples/flexberry-lookup/lookup-in-modal.hbs" } });
});
define("dummy/templates/mobile/components/flexberry-file", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "GpGD1xg/", "block": "{\"symbols\":[],\"statements\":[[6,\"div\"],[10,\"class\",\"flexberry-file-grid ui grid\"],[8],[0,\"\\n  \"],[6,\"input\"],[10,\"name\",\"files[]\"],[11,\"id\",[20,\"_fileInputId\"],null],[10,\"class\",\"flexberry-file-file-input\"],[10,\"style\",\"display:none\"],[10,\"type\",\"file\"],[8],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n    \"],[6,\"label\"],[11,\"class\",[27,[\"flexberry-file-add-button ui icon \",[20,\"buttonClass\"],\" \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\",[26,\"unless\",[[22,[\"_addButtonIsEnabled\"]],\"disabled\"],null]],null],\" \",[26,\"if\",[[22,[\"_hasFile\"]],\"hidden\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-file.add-button-title\"],null],null],[11,\"for\",[20,\"_fileInputId\"],null],[3,\"action\",[[21,0,[]],\"addButtonClick\"],[[\"on\",\"preventDefault\"],[\"click\",false]]],[8],[0,\"\\n    \"],[1,[26,\"t\",[\"components.flexberry-file.add-button-caption\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"_hasFile\"]]],null,{\"statements\":[[0,\"      \"],[6,\"div\"],[10,\"class\",\"flexberry-file-menu\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-menu\",null,[[\"class\",\"items\",\"callItemsOnClickCallbacks\",\"onItemClick\",\"collapseMenuOnItemClick\",\"onlyClickHandler\"],[[26,\"concat\",[\"flexberry-file-mobile-menu left pointing\",[26,\"if\",[[26,\"and\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"showPreview\"]]],null]],null],\" disabled\",\"\"],null]],null],[22,[\"_menuItems\"]],false,[26,\"action\",[[21,0,[]],\"onMenuItemClick\"],null],true,true]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"showPreview\"]]],null,{\"statements\":[[4,\"if\",[[22,[\"_canLoadPreview\"]]],null,{\"statements\":[[0,\"          \"],[6,\"div\"],[10,\"class\",\"flexberry-file-image-preview-wrapper ui small image\"],[3,\"action\",[[21,0,[]],\"viewLoadedImage\"]],[8],[0,\"\\n\"],[4,\"unless\",[[22,[\"_previewDownloadIsInProgress\"]]],null,{\"statements\":[[0,\"              \"],[6,\"img\"],[10,\"class\",\"flexberry-file-image-preview\"],[11,\"src\",[20,\"_previewImageAsBase64String\"],null],[11,\"alt\",[26,\"t\",[\"components.flexberry-file.preview-image-alternative-text\"],null],null],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[6,\"div\"],[11,\"class\",[27,[\"ui \",[26,\"if\",[[22,[\"_previewDownloadIsInProgress\"]],\"active\",\"disabled\"],null],\" loader\"]]],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[6,\"span\"],[8],[1,[20,\"_fileName\"],false],[9],[0,\" \"],[6,\"span\"],[10,\"style\",\"color:red\"],[8],[1,[20,\"_errorPreviewCaption\"],false],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"flexberry-file-download-iframes-container\"],[10,\"style\",\"display: none;\"],[8],[0,\"\\n\"],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"flexberry-file-error-modal-dialog ui small basic modal\"],[8],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"ui icon header\"],[8],[0,\"\\n    \"],[1,[20,\"_errorModalDialogCaption\"],false],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"flexberry-file-error-modal-dialog-content center aligned ui grid\"],[8],[0,\"\\n      \"],[1,[20,\"_errorModalDialogContent\"],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"flexberry-file-error-modal-dialog-button center aligned ui grid\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"actions\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"flexberry-file-error-modal-dialog-ok-button ui approve green inverted button\"],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"checkmark icon\"],[8],[9],[0,\"\\n        \"],[1,[26,\"t\",[\"components.flexberry-file.error-dialog-ok-button-caption\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs" } });
});
define("dummy/templates/mobile/components/flexberry-lookup", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "8vzqVxij", "block": "{\"symbols\":[\"&default\"],\"statements\":[[4,\"if\",[[22,[\"dropdown\"]]],null,{\"statements\":[[0,\"  \"],[1,[26,\"flexberry-dropdown\",null,[[\"placeholder\",\"class\",\"value\",\"readonly\",\"needChecksOnValue\",\"isSearch\",\"isSearchReadOnly\",\"settings\"],[[22,[\"placeholder\"]],\"search\",[22,[\"displayValue\"]],[26,\"if\",[[22,[\"readonly\"]],\"readonly\"],null],false,true,[22,[\"dropdownIsSearch\"]],[22,[\"dropdownSettings\"]]]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui action input\"],[8],[0,\"\\n    \"],[6,\"div\"],[11,\"class\",[27,[\"ui transparent \",[26,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[22,[\"isBlocked\"]]],null],\" disabled\"],null],\" \",[26,\"if\",[[26,\"or\",[[22,[\"modalIsBeforeToShow\"]],[22,[\"modalIsStartToShow\"]]],null],\" loading\"],null],\" icon input \"]]],[3,\"action\",[[21,0,[]],\"choose\",[22,[\"chooseData\"]]]],[8],[0,\"\\n      \"],[6,\"span\"],[10,\"class\",\"lookup-field\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"value\"]]],null,{\"statements\":[[4,\"if\",[[23,1]],null,{\"statements\":[[0,\"            \"],[13,1],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[1,[20,\"displayValue\"],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[]},{\"statements\":[[0,\"          \"],[1,[20,\"placeholder\"],false],[0,\"\\n\"]],\"parameters\":[]}],[0,\"      \"],[9],[0,\"\\n\"],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"        \"],[6,\"i\"],[10,\"class\",\"chevron right icon\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"    \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"showPreviewButton\"]]],null,{\"statements\":[[4,\"if\",[[26,\"and\",[[22,[\"previewFormRoute\"]],[22,[\"value\"]]],null]],null,{\"statements\":[[0,\"        \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-preview \",[26,\"if\",[[22,[\"isBlocked\"]],\" disabled\"],null],\" \",[20,\"previewButtonClass\"],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.flexberry-lookup.preview-button-text\"],null],null],[11,\"type\",[26,\"if\",[[22,[\"autocomplete\"]],\"button\",\"\"],null],null],[3,\"action\",[[21,0,[]],\"preview\"]],[8],[0,\"\\n          \"],[1,[20,\"previewText\"],true],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[4,\"unless\",[[22,[\"readonly\"]]],null,{\"statements\":[[0,\"      \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-clear \",[26,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[22,[\"isBlocked\"]]],null],\" disabled\"],null],\" \",[20,\"removeButtonClass\"],\" button\"]]],[3,\"action\",[[21,0,[]],\"remove\",[22,[\"removeData\"]]]],[8],[0,\"\\n        \"],[1,[20,\"removeText\"],true],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs" } });
});
define("dummy/templates/mobile/components/flexberry-objectlistview", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "TLJ2pmkH", "block": "{\"symbols\":[\"page\",\"@gotoPage\",\"@nextPage\",\"@resetFilters\",\"@configurateSelectedRows\",\"@configurateRow\",\"@filterByAnyMatch\",\"@addColumnToSorting\",\"@sortByColumn\"],\"statements\":[[1,[26,\"olv-toolbar\",null,[[\"class\",\"createNewButton\",\"enableCreateNewButton\",\"refreshButton\",\"deleteButton\",\"colsConfigButton\",\"enableFilters\",\"exportExcelButton\",\"showFilters\",\"filters\",\"toggleStateFilters\",\"resetFilters\",\"filterButton\",\"filterText\",\"buttonClass\",\"enableDeleteButton\",\"componentName\",\"modelController\",\"customButtonAction\",\"customButtons\",\"editFormRoute\",\"showConfigDialog\",\"confirmDeleteRows\",\"inHierarchicalMode\",\"inExpandMode\",\"availableHierarchicalMode\",\"availableCollExpandMode\",\"switchHierarchicalMode\",\"switchExpandMode\",\"readonly\"],[\"ui secondary menu no-margin flexberry-olv-toolbar\",[22,[\"createNewButton\"]],[26,\"not\",[[22,[\"readonly\"]]],null],[22,[\"refreshButton\"]],[22,[\"deleteButton\"]],[22,[\"colsConfigButton\"]],[22,[\"enableFilters\"]],[22,[\"exportExcelButton\"]],[22,[\"_showFilters\"]],[22,[\"filters\"]],[26,\"action\",[[21,0,[]],\"toggleStateFilters\"],null],[26,\"action\",[[21,0,[]],\"resetFilters\",[21,4,[]]],null],[22,[\"filterButton\"]],[22,[\"filterText\"]],[22,[\"buttonClass\"]],[26,\"not\",[[22,[\"readonly\"]]],null],[22,[\"componentName\"]],[22,[\"currentController\"]],[26,\"action\",[[21,0,[]],\"customButtonAction\"],null],[22,[\"customButtons\"]],[22,[\"editFormRoute\"]],\"showConfigDialog\",[22,[\"confirmDeleteRows\"]],[22,[\"inHierarchicalMode\"]],[22,[\"inExpandMode\"]],[22,[\"_availableHierarchicalMode\"]],[22,[\"availableCollExpandMode\"]],[26,\"action\",[[21,0,[]],\"switchHierarchicalMode\"],null],[26,\"action\",[[21,0,[]],\"switchExpandMode\"],null],[22,[\"readonly\"]]]]],false],[0,\"\\n\"],[4,\"if\",[[26,\"or\",[[26,\"not\",[[22,[\"inHierarchicalMode\"]]],null],[22,[\"hierarchyPaging\"]]],null]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui secondary menu no-margin nav-bar\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"right menu\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"ui basic buttons\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"pages\"]]],null,{\"statements\":[[4,\"if\",[[21,1,[\"isEllipsis\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"ui button\"],[8],[0,\"...\"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[21,1,[\"isCurrent\"]]],null,{\"statements\":[[0,\"              \"],[6,\"button\"],[10,\"class\",\"ui active button\"],[8],[1,[21,1,[\"number\"]],false],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"            \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],\"gotoPage\",[21,2,[]],[21,1,[\"number\"]]]],[8],[1,[21,1,[\"number\"]],false],[9],[0,\"\\n          \"]],\"parameters\":[]}]],\"parameters\":[]}]],\"parameters\":[1]},null],[0,\"        \"],[6,\"button\"],[11,\"class\",[27,[\"ui \",[26,\"unless\",[[22,[\"hasNextPage\"]],\"disabled\"],null],\" button next-page-button\"]]],[3,\"action\",[[21,0,[]],\"nextPage\",[21,3,[]]]],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n   \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[1,[26,\"object-list-view\",null,[[\"placeholder\",\"readonly\",\"columnsWidthAutoresize\",\"minAutoColumnWidth\",\"buttonClass\",\"tableStriped\",\"customTableClass\",\"cellComponent\",\"singleColumnCellComponent\",\"singleColumnHeaderTitle\",\"showValidationMessagesInRow\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"showEditButtonInRow\",\"showPrototypeButtonInRow\",\"showEditMenuItemInRow\",\"showDeleteMenuItemInRow\",\"sendMenuItemAction\",\"menuInRowAdditionalItems\",\"rowClickable\",\"createNewByPrototype\",\"orderable\",\"sorting\",\"immediateDelete\",\"modelName\",\"modelProjection\",\"content\",\"sortByColumn\",\"addColumnToSorting\",\"enableFilters\",\"showFilters\",\"filters\",\"applyFilters\",\"componentForFilter\",\"conditionsByType\",\"filterByAnyMatch\",\"filterByAnyWord\",\"filterByAllWords\",\"configurateRow\",\"configurateSelectedRows\",\"confirmDeleteRow\",\"beforeDeleteRecord\",\"action\",\"beforeDeleteAllRecords\",\"componentName\",\"allowColumnResize\",\"selectedRecord\",\"notUseUserSettings\",\"hierarchicalIndent\",\"confirmDeleteRows\",\"inHierarchicalMode\",\"inExpandMode\",\"disableHierarchicalMode\",\"loadRecords\",\"availableHierarchicalMode\",\"useRowByRowLoading\",\"useRowByRowLoadingProgress\",\"eventsBus\",\"onEditForm\",\"defaultSortingButton\",\"defaultLeftPadding\",\"overflowedComponents\",\"fixedHeader\",\"recordsTotalCount\"],[[22,[\"placeholder\"]],[22,[\"readonly\"]],true,[22,[\"minAutoColumnWidth\"]],[22,[\"buttonClass\"]],[22,[\"tableStriped\"]],[22,[\"customTableClass\"]],[22,[\"cellComponent\"]],[22,[\"singleColumnCellComponent\"]],[22,[\"singleColumnHeaderTitle\"]],[26,\"and\",[[26,\"not\",[[22,[\"readonly\"]]],null],[22,[\"showValidationMessagesInRow\"]]],null],[22,[\"showAsteriskInRow\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditButtonInRow\"]],[22,[\"showPrototypeButtonInRow\"]],[22,[\"showEditMenuItemInRow\"]],[22,[\"showDeleteMenuItemInRow\"]],[26,\"action\",[[21,0,[]],\"sendMenuItemAction\"],null],[22,[\"menuInRowAdditionalItems\"]],[26,\"and\",[[26,\"not\",[[22,[\"readonly\"]]],null],[22,[\"rowClickable\"]]],null],[26,\"action\",[[21,0,[]],\"createNewByPrototype\"],null],[22,[\"orderable\"]],[22,[\"sorting\"]],true,[22,[\"modelName\"]],[22,[\"modelProjection\"]],[22,[\"content\"]],[26,\"action\",[[21,0,[]],[26,\"if\",[[21,9,[]],[21,9,[]],\"sortByColumn\"],null]],null],[26,\"action\",[[21,0,[]],[26,\"if\",[[21,8,[]],[21,8,[]],\"addColumnToSorting\"],null]],null],[22,[\"enableFilters\"]],[22,[\"_showFilters\"]],[22,[\"filters\"]],[26,\"action\",[[21,0,[]],[26,\"if\",[[22,[\"applyFilters\"]],[22,[\"applyFilters\"]],\"applyFilters\"],null]],null],[22,[\"componentForFilter\"]],[22,[\"conditionsByType\"]],[26,\"action\",[[21,0,[]],[26,\"if\",[[21,7,[]],[21,7,[]],\"filterByAnyMatch\"],null]],null],[22,[\"filterByAnyWord\"]],[22,[\"filterByAllWords\"]],[21,6,[]],[21,5,[]],[22,[\"confirmDeleteRow\"]],[22,[\"beforeDeleteRecord\"]],[26,\"action\",[[21,0,[]],\"objectListViewRowClick\"],null],[22,[\"beforeDeleteAllRecords\"]],[22,[\"componentName\"]],[22,[\"allowColumnResize\"]],[22,[\"selectedRecord\"]],[22,[\"notUseUserSettings\"]],[22,[\"hierarchicalIndent\"]],[22,[\"confirmDeleteRows\"]],[22,[\"inHierarchicalMode\"]],[22,[\"inExpandMode\"]],[26,\"if\",[[22,[\"hierarchyByAttribute\"]],true,[22,[\"disableHierarchicalMode\"]]],null],[26,\"action\",[[21,0,[]],\"loadRecords\"],null],[26,\"action\",[[21,0,[]],\"availableHierarchicalMode\"],null],[22,[\"useRowByRowLoading\"]],[22,[\"useRowByRowLoadingProgress\"]],[22,[\"eventsBus\"]],[22,[\"onEditForm\"]],[22,[\"defaultSortingButton\"]],[22,[\"defaultLeftPadding\"]],[22,[\"overflowedComponents\"]],[22,[\"fixedHeader\"]],[22,[\"recordsTotalCount\"]]]]],false],[0,\"\\n\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/components/flexberry-objectlistview.hbs" } });
});
define("dummy/templates/mobile/components/flexberry-sitemap-guideline", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "9j+Y3o/K", "block": "{\"symbols\":[\"node\",\"child\"],\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"link\"]]],null,{\"statements\":[[4,\"link-to\",[[22,[\"sitemap\",\"link\"]]],[[\"title\"],[[22,[\"sitemap\",\"title\"]]]],{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"title-item-menu\"],[8],[0,\"\\n      \"],[6,\"i\"],[11,\"class\",[27,[\"icon \",[22,[\"sitemap\",\"icon\"]]]]],[8],[9],[0,\"\\n      \"],[1,[22,[\"sitemap\",\"caption\"]],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"caption\"]]],null,{\"statements\":[[0,\"  \"],[6,\"i\"],[10,\"class\",\"dropdown icon\"],[8],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"title-item-menu\"],[8],[0,\"\\n    \"],[6,\"i\"],[11,\"class\",[27,[\"icon \",[22,[\"sitemap\",\"icon\"]]]]],[8],[9],[0,\"\\n    \"],[1,[22,[\"sitemap\",\"caption\"]],false],[0,\"\\n  \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"sitemap\",\"children\",\"length\"]]],null,{\"statements\":[[0,\"    \"],[6,\"div\"],[10,\"class\",\"menu slide left\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"item menu-back\"],[3,\"action\",[[21,0,[]],\"menuBack\"]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"icon-guideline-arrow-long-left icon\"],[8],[9],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"title-item-menu\"],[8],[0,\"\\n          \"],[1,[20,\"parent\"],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"],[4,\"each\",[[22,[\"sitemap\",\"children\"]]],null,{\"statements\":[[0,\"        \"],[1,[26,\"flexberry-sitemap-guideline\",null,[[\"sitemap\",\"isDropDown\",\"classNames\",\"parent\"],[[21,2,[]],false,\"item\",[22,[\"sitemap\",\"caption\"]]]]],false],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},{\"statements\":[[4,\"if\",[[22,[\"sitemap\",\"nodes\"]]],null,{\"statements\":[[4,\"each\",[[22,[\"sitemap\",\"nodes\"]]],null,{\"statements\":[[4,\"if\",[[21,1,[\"children\",\"length\"]]],null,{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-sitemap-guideline\",null,[[\"sitemap\",\"isDropDown\"],[[21,1,[]],true]]],false],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[1,[26,\"flexberry-sitemap-guideline\",null,[[\"sitemap\",\"classNames\",\"isDropDown\"],[[21,1,[]],\"item\",false]]],false],[0,\"\\n\"]],\"parameters\":[]}]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"parameters\":[]}]],\"parameters\":[]}]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/components/flexberry-sitemap-guideline.hbs" } });
});
define("dummy/templates/mobile/components/object-list-view-row", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "m93j4jh5", "block": "{\"symbols\":[\"record\"],\"statements\":[[6,\"tr\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"record\",\"selected\"]],\"active\"],null],\" \",[22,[\"record\",\"rowConfig\",\"customClass\"]]]]],[8],[0,\"\\n  \"],[6,\"td\"],[11,\"class\",[27,[\"object-list-view-helper-column \",[26,\"unless\",[[22,[\"showHelperColumn\"]],\"hidden\"],null]]]],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"hidden\"],[8],[1,[22,[\"record\",\"key\"]],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"showHelperColumn\"]]],null,{\"statements\":[[0,\"      \"],[6,\"div\"],[10,\"class\",\"object-list-view-helper-column-cell\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showAsteriskInRow\"]]],null,{\"statements\":[[0,\"          \"],[6,\"div\"],[10,\"class\",\"cell\"],[8],[0,\"\\n            \"],[6,\"i\"],[11,\"class\",[27,[\"asterisk small red icon \",[26,\"unless\",[[22,[\"record\",\"data\",\"hasDirtyAttributes\"]],\"transparent\"],null]]]],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showCheckBoxInRow\"]]],null,{\"statements\":[[0,\"          \"],[6,\"div\"],[10,\"class\",\"cell\"],[8],[0,\"\\n            \"],[1,[26,\"flexberry-checkbox\",null,[[\"readonly\",\"onChange\",\"value\"],[[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"record\",\"rowConfig\",\"canBeSelected\"]]],null]],null],[26,\"action\",[[21,0,[]],[22,[\"selectRow\"]],[22,[\"record\"]]],null],[22,[\"record\",\"selected\"]]]]],false],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n  \"],[6,\"td\"],[11,\"style\",[27,[\"padding-left:\",[20,\"hierarchicalIndent\"],\"px;\"]]],[3,\"action\",[[21,0,[]],\"onRowClick\",[22,[\"record\"]],[26,\"hash\",null,[[\"column\"],[[22,[\"columns\"]]]]]],[[\"preventDefault\"],[false]]],[8],[0,\"\\n    \"],[1,[26,\"component\",[[22,[\"singleColumnCellComponent\",\"componentName\"]]],[[\"model\",\"columns\",\"showValidationMessages\",\"hasEditableValues\",\"dynamicProperties\",\"readonly\"],[[22,[\"record\",\"data\"]],[22,[\"columns\"]],[22,[\"showValidationMessages\"]],[22,[\"hasEditableValues\"]],[22,[\"singleColumnCellComponent\",\"componentProperties\"]],[22,[\"readonly\"]]]]],false],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[22,[\"inHierarchicalMode\"]],[22,[\"hasRecords\"]]],null]],null,{\"statements\":[[0,\"      \"],[6,\"button\"],[11,\"class\",[27,[\"ui button icon mini \",[20,\"buttonClass\"]]]],[3,\"action\",[[21,0,[]],\"expand\"],[[\"bubbles\"],[false]]],[8],[0,\"\\n        \"],[6,\"i\"],[11,\"class\",[27,[[26,\"if\",[[22,[\"_expanded\"]],\"minus\",\"plus\"],null],\" hierarchy-expand icon\"]]],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showEditButtonInRow\"]]],null,{\"statements\":[[0,\"      \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-edit object-list-view-row-edit-button mobile \",[20,\"buttonClass\"],\" \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\"],null],\" button\"]]],[11,\"disabled\",[20,\"readonly\"],null],[3,\"action\",[[21,0,[]],\"onRowClick\",[22,[\"record\"]],[26,\"hash\",null,[[\"column\",\"columnIndex\",\"rowEdit\"],[null,null,true]]]],[[\"bubbles\"],[false]]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"edit icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showPrototypeButtonInRow\"]]],null,{\"statements\":[[0,\"      \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-edit object-list-view-row-prototype-button mobile \",[20,\"buttonClass\"],\" \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\"],null],\" button\"]]],[11,\"disabled\",[20,\"readonly\"],null],[3,\"action\",[[21,0,[]],[22,[\"createNewByPrototype\"]],[26,\"get\",[[22,[\"record\"]],\"data.id\"],null]],[[\"bubbles\"],[false]]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"copy icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showDeleteButtonInRow\"]]],null,{\"statements\":[[0,\"      \"],[6,\"button\"],[11,\"class\",[27,[\"ui ui-edit object-list-view-row-delete-button mobile \",[20,\"buttonClass\"],\" \",[26,\"if\",[[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"record\",\"rowConfig\",\"canBeDeleted\"]]],null]],null],\"disabled\"],null],\" button\"]]],[11,\"disabled\",[26,\"or\",[[22,[\"readonly\"]],[26,\"not\",[[22,[\"record\",\"rowConfig\",\"canBeDeleted\"]]],null]],null],null],[3,\"action\",[[21,0,[]],[22,[\"deleteRow\"]],[22,[\"record\"]]],[[\"bubbles\"],[false]]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"minus icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"showMenuColumn\"]]],null,{\"statements\":[[0,\"    \"],[6,\"td\"],[10,\"class\",\"object-list-view-menu\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"right pointing ui icon dropdown button\"],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"list layout icon\"],[8],[9],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"left menu\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showEditMenuItemInRow\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"item\"],[3,\"action\",[[21,0,[]],[22,[\"rowClick\"]],[22,[\"record\"]]]],[8],[0,\"\\n              \"],[6,\"i\"],[10,\"class\",\"edit icon\"],[8],[9],[0,\"\\n              \"],[6,\"span\"],[8],[1,[26,\"t\",[\"components.object-list-view.menu-in-row.edit-menu-item-title\"],null],false],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[22,[\"showDeleteMenuItemInRow\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"item\"],[3,\"action\",[[21,0,[]],[22,[\"deleteRow\"]],[22,[\"record\"]]]],[8],[0,\"\\n              \"],[6,\"i\"],[10,\"class\",\"trash icon\"],[8],[9],[0,\"\\n              \"],[6,\"span\"],[8],[1,[26,\"t\",[\"components.object-list-view.menu-in-row.delete-menu-item-title\"],null],false],[9],[0,\"\\n            \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[9],[0,\"\\n\"],[4,\"if\",[[26,\"and\",[[22,[\"_expanded\"]],[22,[\"inHierarchicalMode\"]]],null]],null,{\"statements\":[[4,\"each\",[[22,[\"records\"]]],[[\"key\"],[\"key\"]],{\"statements\":[[0,\"    \"],[1,[26,\"object-list-view-row\",null,[[\"record\",\"columns\",\"readonly\",\"required\",\"showMenuColumn\",\"showHelperColumn\",\"defaultRowConfig\",\"showValidationMessages\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"showEditButtonInRow\",\"showPrototypeButtonInRow\",\"inHierarchicalMode\",\"inExpandMode\",\"singleColumnCellComponent\",\"loadRecords\",\"rowClick\",\"selectRow\",\"deleteRow\",\"createNewByPrototype\",\"_currentLevel\",\"hierarchicalIndent\",\"configurateRow\"],[[21,1,[]],[22,[\"columns\"]],[22,[\"readonly\"]],[22,[\"required\"]],[22,[\"showMenuColumn\"]],[22,[\"showHelperColumn\"]],[22,[\"defaultRowConfig\"]],[22,[\"showValidationMessages\"]],[22,[\"showAsteriskInRow\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditButtonInRow\"]],[22,[\"showPrototypeButtonInRow\"]],[22,[\"inHierarchicalMode\"]],[22,[\"inExpandMode\"]],[22,[\"singleColumnCellComponent\"]],[22,[\"loadRecords\"]],[22,[\"rowClick\"]],[22,[\"selectRow\"]],[22,[\"deleteRow\"]],[22,[\"createNewByPrototype\"]],[22,[\"_currentLevel\"]],[22,[\"_hierarchicalIndent\"]],[22,[\"configurateRow\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs" } });
});
define("dummy/templates/mobile/components/object-list-view", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Nns/b2nk", "block": "{\"symbols\":[\"record\",\"column\"],\"statements\":[[6,\"table\"],[11,\"class\",[27,[\"object-list-view ui unstackable celled \",[26,\"if\",[[22,[\"readonly\"]],\"readonly\"],null],\" \",[20,\"tableClass\"],\" table\"]]],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"singleColumnHeaderTitle\"]]],null,{\"statements\":[[0,\"    \"],[6,\"thead\"],[8],[0,\"\\n      \"],[6,\"tr\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showHelperColumn\"]]],null,{\"statements\":[[0,\"          \"],[6,\"th\"],[10,\"class\",\"object-list-view-operations collapsing\"],[10,\"data-olv-header-property-name\",\"OlvRowToolbar\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[6,\"th\"],[10,\"class\",\"dt-head-left me class\"],[10,\"data-olv-header-property-name\",\"OlvHeader\"],[8],[1,[20,\"singleColumnHeaderTitle\"],false],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"showMenuColumn\"]]],null,{\"statements\":[[0,\"          \"],[6,\"th\"],[10,\"class\",\"object-list-view-menu collapsing\"],[10,\"data-olv-header-property-name\",\"OlvRowMenu\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"  \"],[6,\"tbody\"],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showFilters\"]]],null,{\"statements\":[[0,\"      \"],[6,\"tr\"],[11,\"onkeydown\",[26,\"action\",[[21,0,[]],\"applyFiltersByEnter\"],null],null],[8],[0,\"\\n\"],[4,\"if\",[[22,[\"showHelperColumn\"]]],null,{\"statements\":[[0,\"          \"],[6,\"td\"],[11,\"class\",[27,[\"object-list-view-helper-column \",[26,\"unless\",[[22,[\"showHelperColumn\"]],\"hidden\"],null]]]],[8],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"object-list-view-helper-column-cell\"],[8],[9],[0,\"\\n          \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"        \"],[6,\"td\"],[10,\"class\",\"overflowed-cell\"],[8],[0,\"\\n\"],[4,\"each\",[[22,[\"columns\"]]],null,{\"statements\":[[0,\"            \"],[6,\"div\"],[10,\"class\",\"inline fields filter\"],[8],[0,\"\\n              \"],[6,\"label\"],[8],[1,[26,\"if\",[[21,2,[\"keyLocale\"]],[26,\"t\",[[21,2,[\"keyLocale\"]]],null],[21,2,[\"header\"]]],null],false],[0,\":\"],[9],[0,\"\\n\"],[4,\"if\",[[21,2,[\"filter\",\"conditions\"]]],null,{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"filter-operation\"],[8],[0,\"\\n                  \"],[1,[26,\"flexberry-dropdown\",null,[[\"value\",\"items\",\"displayCaptions\",\"class\",\"placeholder\",\"needChecksOnValue\",\"onChange\"],[[21,2,[\"filter\",\"condition\"]],[21,2,[\"filter\",\"conditions\"]],[26,\"not\",[[26,\"is-array\",[[21,2,[\"filter\",\"conditions\"]]],null]],null],\"compact fluid\",[26,\"t\",[\"components.object-list-view.filter-condition\"],null],false,[26,\"action\",[[21,0,[]],\"filterConditionChanged\",[21,2,[\"filter\"]]],null]]]],false],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"if\",[[21,2,[\"filter\",\"component\",\"name\"]]],null,{\"statements\":[[0,\"                \"],[6,\"div\"],[10,\"class\",\"filter-value\"],[8],[0,\"\\n                  \"],[1,[26,\"component\",[[21,2,[\"filter\",\"component\",\"name\"]]],[[\"value\",\"readonly\",\"dynamicProperties\"],[[21,2,[\"filter\",\"pattern\"]],[26,\"or\",[[26,\"eq\",[[21,2,[\"filter\",\"condition\"]],\"empty\"],null],[26,\"eq\",[[21,2,[\"filter\",\"condition\"]],\"nempty\"],null]],null],[21,2,[\"filter\",\"component\",\"properties\"]]]]],false],[0,\"\\n                \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"            \"],[9],[0,\"\\n\"]],\"parameters\":[2]},null],[0,\"        \"],[9],[0,\"\\n\"],[4,\"if\",[[22,[\"showMenuColumn\"]]],null,{\"statements\":[[0,\"          \"],[6,\"td\"],[10,\"class\",\"object-list-view-menu\"],[8],[9],[0,\"\\n\"]],\"parameters\":[]},null],[0,\"      \"],[9],[0,\"\\n\"]],\"parameters\":[]},null],[4,\"unless\",[[22,[\"content\"]]],null,{\"statements\":[[0,\"      \"],[6,\"tr\"],[8],[0,\"\\n        \"],[6,\"td\"],[11,\"colspan\",[27,[[20,\"colspan\"]]]],[10,\"style\",\"text-align:center;\"],[8],[0,\"\\n            \"],[1,[20,\"placeholder\"],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[4,\"each\",[[22,[\"contentWithKeys\"]]],[[\"key\"],[\"key\"]],{\"statements\":[[0,\"        \"],[1,[26,\"object-list-view-row\",null,[[\"record\",\"columns\",\"readonly\",\"required\",\"showMenuColumn\",\"showHelperColumn\",\"defaultRowConfig\",\"showValidationMessages\",\"showDeleteMenuItemInRow\",\"showEditMenuItemInRow\",\"showAsteriskInRow\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"showEditButtonInRow\",\"showPrototypeButtonInRow\",\"inExpandMode\",\"hierarchicalIndent\",\"inHierarchicalMode\",\"singleColumnCellComponent\",\"loadRecords\",\"doRenderData\",\"rowClick\",\"selectRow\",\"deleteRow\",\"createNewByPrototype\",\"hierarchyPaging\",\"fixedHeader\",\"configurateRow\"],[[21,1,[]],[22,[\"columns\"]],[22,[\"readonly\"]],[22,[\"required\"]],[22,[\"showMenuColumn\"]],[22,[\"showHelperColumn\"]],[22,[\"defaultRowConfig\"]],[22,[\"showValidationMessagesInRow\"]],[22,[\"showDeleteMenuItemInRow\"]],[22,[\"showEditMenuItemInRow\"]],[22,[\"showAsteriskInRow\"]],[22,[\"showCheckBoxInRow\"]],[22,[\"showDeleteButtonInRow\"]],[22,[\"showEditButtonInRow\"]],[22,[\"showPrototypeButtonInRow\"]],[22,[\"inExpandMode\"]],[22,[\"hierarchicalIndent\"]],[22,[\"inHierarchicalMode\"]],[22,[\"singleColumnCellComponent\"]],[22,[\"loadRecords\"]],[21,1,[\"doRenderData\"]],[26,\"action\",[[21,0,[]],\"rowClick\"],null],[26,\"action\",[[21,0,[]],\"selectRow\"],null],[26,\"action\",[[21,0,[]],\"deleteRow\"],null],[22,[\"createNewByPrototype\"]],[22,[\"hierarchyPaging\"]],[22,[\"fixedHeader\"]],[22,[\"configurateRow\"]]]]],false],[0,\"\\n\"]],\"parameters\":[1]},null],[4,\"if\",[[22,[\"rowByRowLoadingProgress\"]]],null,{\"statements\":[[0,\"        \"],[6,\"tr\"],[8],[0,\"\\n          \"],[6,\"td\"],[11,\"colspan\",[27,[[20,\"colspan\"]]]],[10,\"style\",\"text-align:center;\"],[8],[0,\"\\n            \"],[6,\"div\"],[10,\"class\",\"ui active centered inline loader\"],[8],[9],[0,\"\\n            \"],[1,[26,\"t\",[\"components.object-list-view.loading-text\"],null],false],[0,\"\\n          \"],[9],[0,\"\\n        \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]}],[0,\"  \"],[9],[0,\"\\n\"],[9],[0,\"\\n\\n\"],[4,\"if\",[[26,\"and\",[[22,[\"_selectedMobileMenu\"]],[22,[\"showCheckBoxInRow\"]]],null]],null,{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"check-rows-container\"],[8],[0,\"\\n\"],[4,\"if\",[[26,\"not-eq\",[[22,[\"class\"]],\"groupedit-container\"],null]],null,{\"statements\":[[0,\"      \"],[6,\"div\"],[11,\"class\",[27,[\"ui check-rows-button \",[20,\"buttonClass\"],\" button \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\"],null]]]],[8],[0,\"\\n        \"],[6,\"i\"],[10,\"class\",\"check-square-o icon\"],[8],[9],[0,\"\\n        \"],[1,[26,\"flexberry-menu\",null,[[\"items\",\"settings\",\"onItemClick\",\"onlyClickHandler\"],[[22,[\"checkRowsSettingsItems\"]],[26,\"hash\",null,[[\"direction\"],[\"upward\"]]],[26,\"action\",[[21,0,[]],\"onCheckRowMenuItemClick\"],null],true]]],false],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]},{\"statements\":[[0,\"      \"],[6,\"button\"],[11,\"class\",[27,[\"ui check-all-at-page-button \",[20,\"buttonClass\"],\" \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.check-all-at-page-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"checkAllAtPage\"]],[8],[0,\"\\n          \"],[6,\"i\"],[10,\"class\",\"check-square-o icon\"],[8],[9],[0,\"\\n      \"],[9],[0,\"\\n\"]],\"parameters\":[]}],[0,\"\\n    \"],[6,\"label\"],[10,\"class\",\"count-selected-rows\"],[8],[1,[20,\"_selectedCountMobileMenu\"],false],[9],[0,\"\\n\\n    \"],[6,\"button\"],[11,\"class\",[27,[\"ui delete-button \",[20,\"buttonClass\"],\" \",[26,\"if\",[[22,[\"readonly\"]],\"disabled\",\"\"],null],\" button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.delete-button-text\"],null],null],[11,\"disabled\",[20,\"readonly\"],null],[3,\"action\",[[21,0,[]],\"deleteSelectedRow\"]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"components.olv-toolbar.delete-button-text\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\\n    \"],[6,\"button\"],[11,\"class\",[27,[\"ui clear-select-button \",[20,\"buttonClass\"],\" circular icon button\"]]],[11,\"title\",[26,\"t\",[\"components.olv-toolbar.clear-select-button-text\"],null],null],[3,\"action\",[[21,0,[]],\"clearSelectedRecords\"]],[8],[0,\"\\n      \"],[6,\"i\"],[10,\"class\",\"remove icon\"],[8],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/mobile/components/object-list-view.hbs" } });
});
define("dummy/templates/modal/delete-record-modal-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "C0WV5sWT", "block": "{\"symbols\":[],\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useOkButton\",\"useCloseButton\",\"close\",\"settings\"],[[22,[\"title\"]],false,false,[26,\"action\",[[21,0,[]],\"closeModalDialog\"],null],[26,\"hash\",null,[[\"closable\",\"onApprove\",\"onDeny\"],[false,[26,\"action\",[[21,0,[]],[22,[\"approveDeleting\"]]],null],[26,\"action\",[[21,0,[]],[22,[\"denyDeleting\"]]],null]]]]]],{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"actions\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui primary approve large button\"],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.application.flexberry-objectlistview-modal-question-caption.confirm-button-caption\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui cancel large button\"],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.application.flexberry-objectlistview-modal-question-caption.cancel-button-caption\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/modal/delete-record-modal-dialog.hbs" } });
});
define("dummy/templates/modal/ember-flexberry-support-modal", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "Y5IAWlS6", "block": "{\"symbols\":[],\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"sizeClass\",\"close\",\"useOkButton\",\"useCloseButton\",\"classNames\",\"settings\"],[[26,\"t\",[\"forms.support-form.caption\"],null],\"tiny\",\"removeModalDialog\",false,false,\"modal-support\",[26,\"hash\",null,[[\"autofocus\"],[false]]]]],{\"statements\":[[0,\"  \"],[6,\"div\"],[10,\"class\",\"ui header\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"contacts\"],[8],[1,[26,\"t\",[\"forms.support-form.contacts-caption\"],null],false],[9],[0,\"\\n  \"],[9],[0,\"\\n  \"],[6,\"div\"],[10,\"class\",\"content\"],[8],[0,\"\\n    \"],[6,\"div\"],[10,\"class\",\"ui form\"],[8],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n          \"],[1,[26,\"flexberry-field\",null,[[\"class\",\"label\",\"placeholder\",\"required\"],[\"labeled-inside large\",[26,\"t\",[\"forms.support-form.enter-name-caption\"],null],[26,\"t\",[\"forms.support-form.enter-name-caption\"],null],true]]],false],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n          \"],[1,[26,\"flexberry-field\",null,[[\"class\",\"label\",\"placeholder\",\"required\"],[\"labeled-inside large\",[26,\"t\",[\"forms.support-form.enter-email-caption\"],null],[26,\"t\",[\"forms.support-form.enter-email-caption\"],null],true]]],false],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n        \"],[1,[26,\"flexberry-textarea\",null,[[\"class\",\"rows\",\"placeholder\"],[\"large\",\"5\",[26,\"t\",[\"forms.support-form.enter-message-placeholder\"],null]]]],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"div\"],[10,\"class\",\"two fields\"],[8],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"field field-guideline-file\"],[8],[0,\"\\n          \"],[6,\"i\"],[10,\"class\",\"icon-guideline-file\"],[8],[9],[0,\"\\n          \"],[6,\"a\"],[10,\"class\",\"link-guideline-file\"],[8],[1,[26,\"t\",[\"forms.support-form.attach-file-caption\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n        \"],[6,\"div\"],[10,\"class\",\"field\"],[8],[0,\"\\n          \"],[6,\"button\"],[10,\"class\",\"ui button primary large fluid\"],[3,\"action\",[[21,0,[]],\"hideModalSupport\"]],[8],[1,[26,\"t\",[\"forms.support-form.send-button-caption\"],null],false],[9],[0,\"\\n        \"],[9],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n  \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/modal/ember-flexberry-support-modal.hbs" } });
});
define("dummy/templates/modal/modal-dialog", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "FaJmVKps", "block": "{\"symbols\":[],\"statements\":[[4,\"if\",[[22,[\"appContextLightboxIsOpen\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useOkButton\",\"useCloseButton\",\"close\"],[[26,\"t\",[\"forms.components-examples.modal-dialog.lightbox-title\"],null],false,false,[26,\"action\",[[21,0,[]],\"closeLightbox\"],null]]],{\"statements\":[[0,\"    \"],[6,\"p\"],[8],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.lightbox-title\"],null],false],[0,\" \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.application-context\"],null],false],[0,\". \\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-sidepage\"],null],false],[0,\", \\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-lightbox\"],null],false],[0,\".\\n    \"],[9],[0,\"\\n    \"],[6,\"div\"],[8],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button primary\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"appContextSidepageIsOpen\",true]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-sidepage\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n      \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"appContextSecondLightboxIsOpen\",true]],[8],[0,\"\\n        \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-lightbox\"],null],false],[0,\"\\n      \"],[9],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[22,[\"appContextSidepageIsOpen\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useSidePageMode\",\"useOkButton\",\"useCloseButton\",\"close\"],[[26,\"t\",[\"forms.components-examples.modal-dialog.sidepage-title\"],null],true,false,false,[26,\"action\",[[21,0,[]],\"closeSidepage\"],null]]],{\"statements\":[[0,\"    \"],[6,\"button\"],[10,\"class\",\"ui button primary\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"appContextSecondSidepageIsOpen\",true]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-sidepage\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n    \"],[6,\"button\"],[10,\"class\",\"ui button\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"appContextSecondLightboxIsOpen\",true]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-lightbox\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[22,[\"appContextSecondSidepageIsOpen\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"useSidePageMode\",\"useOkButton\",\"useCloseButton\",\"close\"],[[26,\"t\",[\"forms.components-examples.modal-dialog.second-sidepage-title\"],null],true,false,false,[26,\"action\",[[21,0,[]],[22,[\"set\"]],\"appContextSecondSidepageIsOpen\",false],null]]],{\"statements\":[[0,\"    \"],[6,\"button\"],[10,\"class\",\"ui button primary\"],[3,\"action\",[[21,0,[]],[22,[\"set\"]],\"appContextSecondLightboxIsOpen\",true]],[8],[0,\"\\n      \"],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.open-second-lightbox\"],null],false],[0,\"\\n    \"],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null],[0,\"\\n\"],[4,\"if\",[[22,[\"appContextSecondLightboxIsOpen\"]]],null,{\"statements\":[[4,\"modal-dialog\",null,[[\"title\",\"sizeClass\",\"useCloseButton\",\"close\"],[[26,\"t\",[\"forms.components-examples.modal-dialog.second-lightbox-title\"],null],\"tiny\",false,[26,\"action\",[[21,0,[]],[22,[\"set\"]],\"appContextSecondLightboxIsOpen\",false],null]]],{\"statements\":[[0,\"    \"],[6,\"p\"],[8],[1,[26,\"t\",[\"forms.components-examples.modal-dialog.second-lightbox-title\"],null],false],[9],[0,\"\\n\"]],\"parameters\":[]},null]],\"parameters\":[]},null]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/modal/modal-dialog.hbs" } });
});
define("dummy/templates/new-platform-flexberry-services-lock-list", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "tZ1cy82q", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.new-platform-flexberry-services-lock-list.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"content\",\"modelName\",\"modelProjection\",\"editFormRoute\",\"refreshButton\",\"createNewButton\",\"deleteButton\",\"showCheckBoxInRow\",\"showDeleteButtonInRow\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"gotoPage\",\"nextPage\",\"previousPage\",\"beforeDeleteAllRecords\",\"orderable\",\"sorting\",\"sortByColumn\",\"addColumnToSorting\",\"componentName\",\"customButtons\",\"changeUserName\",\"openReadOnly\",\"unlockObject\"],[[22,[\"model\"]],[22,[\"modelName\"]],[22,[\"modelProjection\"]],[22,[\"editFormRoute\"]],true,false,true,true,true,[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],true,[22,[\"computedSorting\"]],[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],\"LockObjectListView\",[22,[\"customButtons\"]],[26,\"action\",[[21,0,[]],\"changeUserName\"],null],[26,\"action\",[[21,0,[]],\"openReadOnly\"],null],[26,\"action\",[[21,0,[]],\"unlockObject\"],null]]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/new-platform-flexberry-services-lock-list.hbs" } });
});
define("dummy/templates/user-setting-forms/user-setting-delete", ["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Ember.HTMLBars.template({ "id": "zC31BuZJ", "block": "{\"symbols\":[],\"statements\":[[1,[26,\"flexberry-error\",null,[[\"error\"],[[22,[\"error\"]]]]],false],[0,\"\\n\"],[6,\"h3\"],[8],[1,[26,\"t\",[\"forms.user-setting-forms.user-setting-delete.caption\"],null],false],[9],[0,\"\\n\"],[6,\"div\"],[10,\"class\",\"row\"],[8],[0,\"\\n  \"],[1,[26,\"flexberry-objectlistview\",null,[[\"modelName\",\"modelProjection\",\"content\",\"createNewButton\",\"refreshButton\",\"deleteButton\",\"filterButton\",\"filterText\",\"filterByAnyMatch\",\"beforeDeleteAllRecords\",\"showCheckBoxInRow\",\"sorting\",\"orderable\",\"sortByColumn\",\"addColumnToSorting\",\"pages\",\"perPageValue\",\"perPageValues\",\"recordsTotalCount\",\"hasPreviousPage\",\"hasNextPage\",\"previousPage\",\"gotoPage\",\"nextPage\",\"customButtons\",\"allDelButtonAction\",\"componentName\",\"rowClickable\"],[[22,[\"modelName\"]],[22,[\"modelProjection\"]],[22,[\"model\"]],false,true,true,true,[22,[\"filter\"]],[26,\"action\",[[21,0,[]],\"filterByAnyMatch\"],null],[26,\"action\",[[21,0,[]],\"beforeDeleteAllRecords\"],null],true,[22,[\"computedSorting\"]],true,[26,\"action\",[[21,0,[]],\"sortByColumn\"],null],[26,\"action\",[[21,0,[]],\"addColumnToSorting\"],null],[22,[\"pages\"]],[22,[\"perPageValue\"]],[22,[\"perPageValues\"]],[22,[\"recordsTotalCount\"]],[22,[\"hasPreviousPage\"]],[22,[\"hasNextPage\"]],[26,\"action\",[[21,0,[]],\"previousPage\"],null],[26,\"action\",[[21,0,[]],\"gotoPage\"],null],[26,\"action\",[[21,0,[]],\"nextPage\"],null],[22,[\"customButtons\"]],[26,\"action\",[[21,0,[]],\"allDelButtonAction\"],null],\"userSettingObjectListView\",false]]],false],[0,\"\\n\"],[9],[0,\"\\n\"]],\"hasEval\":false}", "meta": { "moduleName": "dummy/templates/user-setting-forms/user-setting-delete.hbs" } });
});
define('dummy/transforms/components-examples/flexberry-dropdown/conditional-render-example/enumeration', ['exports', 'ember-flexberry-data/transforms/flexberry-enum', 'dummy/enums/components-examples/flexberry-dropdown/conditional-render-example/enumeration'], function (exports, _flexberryEnum, _enumeration) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryEnum.default.extend({
    enum: _enumeration.default
  });
});
define('dummy/transforms/components-examples/flexberry-dropdown/settings-example/enumeration', ['exports', 'ember-flexberry-data/transforms/flexberry-enum', 'dummy/enums/components-examples/flexberry-dropdown/settings-example/enumeration'], function (exports, _flexberryEnum, _enumeration) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryEnum.default.extend({
    enum: _enumeration.default
  });
});
define('dummy/transforms/components-examples/flexberry-groupedit/shared/detail-enumeration', ['exports', 'ember-flexberry-data/transforms/flexberry-enum', 'dummy/enums/components-examples/flexberry-groupedit/shared/detail-enumeration'], function (exports, _flexberryEnum, _detailEnumeration) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryEnum.default.extend({
    enum: _detailEnumeration.default
  });
});
define('dummy/transforms/decimal', ['exports', 'ember-flexberry-data/transforms/decimal'], function (exports, _decimal) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _decimal.default;
    }
  });
});
define('dummy/transforms/ember-flexberry-dummy-gender', ['exports', 'ember-flexberry-data/transforms/flexberry-enum', 'dummy/enums/ember-flexberry-dummy-gender'], function (exports, _flexberryEnum, _emberFlexberryDummyGender) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryEnum.default.extend({
    enum: _emberFlexberryDummyGender.default
  });
});
define('dummy/transforms/ember-flexberry-dummy-vote-type', ['exports', 'ember-flexberry-data/transforms/flexberry-enum', 'dummy/enums/ember-flexberry-dummy-vote-type'], function (exports, _flexberryEnum, _emberFlexberryDummyVoteType) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryEnum.default.extend({
    enum: _emberFlexberryDummyVoteType.default
  });
});
define('dummy/transforms/file', ['exports', 'ember-flexberry-data/transforms/file'], function (exports, _file) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _file.default;
});
define('dummy/transforms/flexberry-enum', ['exports', 'ember-flexberry-data/transforms/flexberry-enum'], function (exports, _flexberryEnum) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _flexberryEnum.default;
    }
  });
});
define('dummy/transforms/guid', ['exports', 'ember-flexberry-data/transforms/guid'], function (exports, _guid) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _guid.default;
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant', ['exports', 'ember-flexberry-data/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsTExecutionVariant) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsTExecutionVariant.default;
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation', ['exports', 'ember-flexberry-data/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation'], function (exports, _iCSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _iCSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation.default;
    }
  });
});
define('dummy/transforms/integration-examples/edit-form/readonly-mode/enumeration', ['exports', 'ember-flexberry-data/transforms/flexberry-enum', 'dummy/enums/integration-examples/edit-form/readonly-mode/enumeration'], function (exports, _flexberryEnum, _enumeration) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryEnum.default.extend({
    enum: _enumeration.default
  });
});
define('dummy/transforms/integration-examples/edit-form/validation/enumeration', ['exports', 'ember-flexberry-data/transforms/flexberry-enum', 'dummy/enums/integration-examples/edit-form/validation/enumeration'], function (exports, _flexberryEnum, _enumeration) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = _flexberryEnum.default.extend({
    enum: _enumeration.default
  });
});
define('dummy/utils/batch-queries', ['exports', 'ember-flexberry-data/utils/batch-queries'], function (exports, _batchQueries) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _batchQueries.default;
    }
  });
});
define('dummy/utils/cut-string-by-length', ['exports', 'ember-flexberry/utils/cut-string-by-length'], function (exports, _cutStringByLength) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _cutStringByLength.default;
    }
  });
});
define('dummy/utils/deserialize-sorting-param', ['exports', 'ember-flexberry/utils/deserialize-sorting-param'], function (exports, _deserializeSortingParam) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _deserializeSortingParam.default;
    }
  });
});
define('dummy/utils/get-current-agregator', ['exports', 'ember-flexberry/utils/get-current-agregator'], function (exports, _getCurrentAgregator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _getCurrentAgregator.default;
    }
  });
});
define('dummy/utils/get-projection-by-name', ['exports', 'ember-flexberry/utils/get-projection-by-name'], function (exports, _getProjectionByName) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _getProjectionByName.default;
    }
  });
});
define('dummy/utils/i18n/compile-template', ['exports', 'ember-i18n/utils/i18n/compile-template'], function (exports, _compileTemplate) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _compileTemplate.default;
    }
  });
});
define('dummy/utils/i18n/missing-message', ['exports', 'ember-i18n/utils/i18n/missing-message'], function (exports, _missingMessage) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _missingMessage.default;
    }
  });
});
define('dummy/utils/need-save-current-agregator', ['exports', 'ember-flexberry/utils/need-save-current-agregator'], function (exports, _needSaveCurrentAgregator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _needSaveCurrentAgregator.default;
    }
  });
});
define('dummy/utils/run-after', ['exports', 'ember-flexberry/utils/run-after'], function (exports, _runAfter) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _runAfter.default;
    }
  });
});
define('dummy/utils/serialize-sorting-param', ['exports', 'ember-flexberry/utils/serialize-sorting-param'], function (exports, _serializeSortingParam) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _serializeSortingParam.default;
    }
  });
});
define('dummy/validators/alias', ['exports', 'ember-cp-validations/validators/alias'], function (exports, _alias) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _alias.default;
    }
  });
});
define('dummy/validators/belongs-to', ['exports', 'ember-cp-validations/validators/belongs-to'], function (exports, _belongsTo) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _belongsTo.default;
    }
  });
});
define('dummy/validators/collection', ['exports', 'ember-cp-validations/validators/collection'], function (exports, _collection) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _collection.default;
    }
  });
});
define('dummy/validators/confirmation', ['exports', 'ember-cp-validations/validators/confirmation'], function (exports, _confirmation) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _confirmation.default;
    }
  });
});
define('dummy/validators/date', ['exports', 'ember-cp-validations/validators/date'], function (exports, _date) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _date.default;
    }
  });
});
define('dummy/validators/dependent', ['exports', 'ember-cp-validations/validators/dependent'], function (exports, _dependent) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _dependent.default;
    }
  });
});
define('dummy/validators/ds-error', ['exports', 'ember-cp-validations/validators/ds-error'], function (exports, _dsError) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _dsError.default;
    }
  });
});
define('dummy/validators/exclusion', ['exports', 'ember-cp-validations/validators/exclusion'], function (exports, _exclusion) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _exclusion.default;
    }
  });
});
define('dummy/validators/format', ['exports', 'ember-cp-validations/validators/format'], function (exports, _format) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _format.default;
    }
  });
});
define('dummy/validators/has-many', ['exports', 'ember-cp-validations/validators/has-many'], function (exports, _hasMany) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _hasMany.default;
    }
  });
});
define('dummy/validators/inclusion', ['exports', 'ember-cp-validations/validators/inclusion'], function (exports, _inclusion) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _inclusion.default;
    }
  });
});
define('dummy/validators/length', ['exports', 'ember-cp-validations/validators/length'], function (exports, _length) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _length.default;
    }
  });
});
define('dummy/validators/messages', ['exports', 'ember-i18n-cp-validations/validators/messages'], function (exports, _messages) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _messages.default;
    }
  });
});
define('dummy/validators/number', ['exports', 'ember-cp-validations/validators/number'], function (exports, _number) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _number.default;
    }
  });
});
define('dummy/validators/presence', ['exports', 'ember-cp-validations/validators/presence'], function (exports, _presence) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function () {
      return _presence.default;
    }
  });
});


define('dummy/config/environment', [], function() {
  var prefix = 'dummy';
try {
  var metaName = prefix + '/config/environment';
  var rawConfig = document.querySelector('meta[name="' + metaName + '"]').getAttribute('content');
  var config = JSON.parse(unescape(rawConfig));

  var exports = { 'default': config };

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

});

if (!runningTests) {
  require("dummy/app")["default"].create({"name":"dummy","backendUrl":"http://stands-backend.flexberry.net","backendUrls":{"root":"http://stands-backend.flexberry.net","api":"http://stands-backend.flexberry.net/odata"},"log":{"enabled":true,"storeErrorMessages":true,"storeWarnMessages":true,"storeLogMessages":false,"storeInfoMessages":true,"storeDebugMessages":true,"storeDeprecationMessages":true,"storePromiseErrors":true,"showPromiseErrors":true,"errorMessageFilterActive":true},"perf":{"enabled":false},"lock":{"enabled":true,"openReadOnly":true,"unlockObject":true},"useUserSettingsService":true,"useAdvLimitService":true,"components":{"flexberryFile":{"uploadUrl":"http://stands-backend.flexberry.net/api/File","maxUploadFileSize":null,"uploadOnModelPreSave":true,"showUploadButton":true,"showModalDialogOnUploadError":true,"showModalDialogOnDownloadError":true},"flexberryObjectlistview":{"useSidePageMode":true},"flexberryLookup":{"useSidePageMode":true}},"version":"3.4.0-alpha.5+70148c59"});
}
//# sourceMappingURL=dummy.map
