{{flexberry-error error=error}}
<h3 class="ui header">{{t "forms.ember-flexberry-dummy-application-user-edit.caption"}}</h3>
<form class="ui form flexberry-vertical-form" role="form">
  {{ui-message
    type="success"
    closeable=true
    visible=showFormSuccessMessage
    caption=formSuccessMessageCaption
    message=formSuccessMessage
    onShow=(action "onSuccessMessageShow")
    onHide=(action "onSuccessMessageHide")
  }}
  {{ui-message
    type="error"
    closeable=true
    visible=showFormErrorMessage
    caption=formErrorMessageCaption
    message=formErrorMessage
    onShow=(action "onErrorMessageShow")
    onHide=(action "onErrorMessageHide")
  }}
  <div class="field">
    <div class="flexberry-edit-panel">
      {{#unless readonly}}
        {{#unless (and hasParentRoute (not saveBeforeRouteLeave))}}
          <button type="submit" class="ui button save-button" {{action "save"}}>{{t "forms.edit-form.save-button-text"}}</button>
        {{/unless}}
        {{#unless (and hasParentRoute (not saveBeforeRouteLeave))}}
          <button type="submit" class="ui button save-close-button" {{action "saveAndClose"}}>{{t "forms.edit-form.saveAndClose-button-text"}}</button>
        {{/unless}}
        {{#unless (and model.isNew (or (not hasParentRoute) (and hasParentRoute saveBeforeRouteLeave)))}}
          <button type="submit" class="ui button save-del-button" {{action "delete"}}>{{t "forms.edit-form.delete-button-text"}}</button>
        {{/unless}}
      {{/unless}}
      <button type="submit" class="ui button close-button" {{action "close"}}>{{t "forms.edit-form.close-button-text"}}</button>
    </div>
  </div>
  <div class="field">
    {{#if model.errors.name}}
      <span style ="color:red">{{model.errors.name}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.name
      class=(if (v-get validationObject "name" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.name-caption")
    }}
  </div>
  <div class="field">
    {{#if model.errors.eMail}}
      <span style ="color:red">{{model.errors.eMail}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.eMail
      class=(if (v-get validationObject "eMail" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.eMail-caption")
    }}
  </div>
  <div class="field">
    {{#if model.errors.phone1}}
      <span style ="color:red">{{model.errors.phone1}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.phone1
      class=(if (v-get validationObject "phone1" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.phone1-caption")
    }}
  </div>
  <div class="field">
    {{#if model.errors.phone2}}
      <span style ="color:red">{{model.errors.phone2}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.phone2
      class=(if (v-get validationObject "phone2" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.phone2-caption")
    }}
  </div>
  <div class="field">
    {{#if model.errors.phone3}}
      <span style ="color:red">{{model.errors.phone3}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.phone3
      class=(if (v-get validationObject "phone3" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.phone3-caption")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-application-user-edit.activated-caption"}}</label>
    {{#if model.errors.activated}}
      <span style="color:red">{{model.errors.activated}}</span>
    {{/if}}
    {{flexberry-checkbox readonly=readonly value=model.activated}}
  </div>
  <div class="field">
    {{#if model.errors.vK}}
      <span style ="color:red">{{model.errors.vK}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.vK
      class=(if (v-get validationObject "vK" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.vK-caption")
    }}
  </div>
  <div class="field">
    {{#if model.errors.facebook}}
      <span style ="color:red">{{model.errors.facebook}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.facebook
      class=(if (v-get validationObject "facebook" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.facebook-caption")
    }}
  </div>
  <div class="field">
    {{#if model.errors.twitter}}
      <span style ="color:red">{{model.errors.twitter}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.twitter
      class=(if (v-get validationObject "twitter" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.twitter-caption")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-application-user-edit.birthday-caption"}}</label>
    {{#if model.errors.birthday}}
      <span style="color:red">{{model.errors.birthday}}</span>
    {{/if}}
    {{flexberry-simpledatetime
      type="date"
      readonly=readonly
      value=model.birthday
      class=(if (v-get validationObject "birthday" "isInvalid") "error")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-application-user-edit.gender-caption"}}</label>
    {{#if model.errors.gender}}
      <span style="color:red">{{model.errors.gender}}</span>
    {{/if}}
    {{flexberry-dropdown items=(flexberry-enum "ember-flexberry-dummy-gender") value=model.gender readonly=readonly}}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-application-user-edit.vip-caption"}}</label>
    {{#if model.errors.vip}}
      <span style="color:red">{{model.errors.vip}}</span>
    {{/if}}
    {{flexberry-checkbox readonly=readonly value=model.vip}}
  </div>
  <div class="field">
    {{#if model.errors.karma}}
      <span style ="color:red">{{model.errors.karma}}</span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.karma
      class=(if (v-get validationObject "karma" "isInvalid") "error")
      label=(t "forms.ember-flexberry-dummy-application-user-edit.karma-caption")
    }}
  </div>
  <hr/>
  <div class="field">
    <h3>{{t "forms.components-examples.flexberry-objectlistview.on-edit-form.caption"}}:</h3>
    {{flexberry-objectlistview
      content=customFolvContent
      modelName=folvModelName
      onEditForm=true
      editFormRoute=folvEditFormRoute
      modelProjection=folvProjection
      rowClickable=true
      refreshButton=true
      colsConfigButton=false
      filters=filters
      applyFilters=(action "applyFilters")
      resetFilters=(action "resetFilters")
      componentForFilter=(action "componentForFilter")
      conditionsByType=(action "conditionsByType")
      filterButton=true
      filterText=filter
      filterByAnyMatch=(action 'filterByAnyMatch')
      filterByAllWords=true
      showShowingEntries=false
      sorting=computedSorting
      orderable=true
      sortByColumn=(action "sortByColumn")
      addColumnToSorting=(action "addColumnToSorting")
      beforeDeleteAllRecords=(action "beforeDeleteAllRecords")
      pages=pages
      perPageValue=perPageValue
      perPageValues=perPageValues
      recordsTotalCount=recordsTotalCount
      hasPreviousPage=hasPreviousPage
      hasNextPage=hasNextPage
      previousPage=(action "previousPage")
      gotoPage=(action "gotoPage")
      nextPage=(action "nextPage")
      customButtons=customButtons
      userButtonAddAction=(action 'userButtonAddAction')
      disableHierarchicalMode=false
      hierarchicalIndent=50
      componentName="FOLVOnEditFormSuggestionsObjectListView"
    }}
  </div>
</form>
