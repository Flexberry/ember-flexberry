<h3 class="ui header">{{t "forms.ember-flexberry-dummy-application-user-edit.caption"}}</h3>
<form class="ui form flexberry-vertical-form" role="form">
  {{flexberry-error error=error}}
  <div class="field">
    {{flexberry-edit-panel
      showCloseButton=true
      deepMount=true
      readonly=readonly
      buttons=(array
        (hash
          type="submit"
          class="save-button"
          disabled=(and hasParentRoute (not saveBeforeRouteLeave))
          text=(t "forms.edit-form.save-button-text")
          action="save")
        (hash
          type="submit"
          class="save-close-button"
          disabled=(and hasParentRoute (not saveBeforeRouteLeave))
          text=(t "forms.edit-form.saveAndClose-button-text")
          action="saveAndClose"
        )
        (hash
          type="submit"
          class="save-del-button"
          disabled=(and model.isNew (or (not hasParentRoute) (and hasParentRoute saveBeforeRouteLeave)))
          text=(t "forms.edit-form.delete-button-text")
          action="delete"
        ))
    }}
  </div>
  <div class="field flexberry-validationsummary-container">
    <div class="sixteen wide">
      {{flexberry-validationsummary errors=validationModel.errors isVisible=validationModel.isInvalid}}
    </div>
  </div>
  <div class="ui two column grid stackable">
    <div class="column">
      <h4>{{t "forms.ember-flexberry-dummy-application-user-edit.profile"}}</h4>
      <div class="field">
        {{flexberry-field
          value=model.name
          class=(if validationModel.errors.name "error")
          label=(t "forms.ember-flexberry-dummy-application-user-edit.name-caption")
          readonly=readonly
        }}
        {{flexberry-validationmessage error=validationModel.errors.name}}
      </div>
      <div class="two fields">
        <div class="field">
          <label>{{t "forms.ember-flexberry-dummy-application-user-edit.birthday-caption"}}</label>
          {{flexberry-simpledatetime
            type="date"
            value=model.birthday
            class=(if validationModel.errors.birthday "error")
            readonly=readonly
          }}
          {{flexberry-validationmessage error=validationModel.errors.birthday}}
        </div>
        <div class="field">
          <label>{{t "forms.ember-flexberry-dummy-application-user-edit.gender-caption"}}</label>
          {{flexberry-dropdown
            items=(flexberry-enum "ember-flexberry-dummy-gender")
            value=model.gender
            class=(if validationModel.errors.gender "error")
            readonly=readonly
          }}
          {{flexberry-validationmessage error=validationModel.errors.gender}}
        </div>
      </div>
      <div class="field">
        {{flexberry-field
          value=model.karma
          class=(if validationModel.errors.karma "error")
          label=(t "forms.ember-flexberry-dummy-application-user-edit.karma-caption")
          readonly=readonly
        }}
        {{flexberry-validationmessage error=validationModel.errors.karma}}
      </div>
      <div class="two fields">
        <div class="field">
          <label>{{t "forms.ember-flexberry-dummy-application-user-edit.activated-caption"}}</label>
          {{flexberry-checkbox
            value=model.activated
            class=(if validationModel.errors.activated "error")
            readonly=readonly
          }}
          {{flexberry-validationmessage error=validationModel.errors.activated}}
        </div>
        <div class="field">
          <label>{{t "forms.ember-flexberry-dummy-application-user-edit.vip-caption"}}</label>
          {{flexberry-checkbox
            value=model.vip
            class=(if validationModel.errors.vip "error")
            readonly=readonly
          }}
          {{flexberry-validationmessage error=validationModel.errors.vip}}
        </div>
      </div>
    </div>

    <div class="column">
      <h4>{{t "forms.ember-flexberry-dummy-application-user-edit.contact-info"}}</h4>
      <div class="field">
        {{flexberry-field
          value=model.phone1
          class=(if validationModel.errors.phone1 "error")
          label=(t "forms.ember-flexberry-dummy-application-user-edit.phone1-caption")
          readonly=readonly
        }}
        {{flexberry-validationmessage error=validationModel.errors.phone1}}
      </div>
      <div class="field">
        <label>{{t "forms.ember-flexberry-dummy-application-user-edit.phone1-required-caption"}}</label>
        {{flexberry-checkbox
          value=model.phone1IsRequired
          readonly=readonly
        }}
      </div>
      <div class="two fields">
        <div class="field">
          {{flexberry-field
            value=model.phone2
            class=(if validationModel.errors.phone2 "error")
            label=(t "forms.ember-flexberry-dummy-application-user-edit.phone2-caption")
            readonly=readonly
          }}
          {{flexberry-validationmessage error=validationModel.errors.phone2}}
        </div>
        <div class="field">
          {{flexberry-field
            value=model.phone3
            class=(if validationModel.errors.phone3 "error")
            label=(t "forms.ember-flexberry-dummy-application-user-edit.phone3-caption")
            readonly=readonly
          }}
          {{flexberry-validationmessage error=validationModel.errors.phone3}}
        </div>
      </div>
      <div class="field">
        {{flexberry-field
          value=model.eMail
          class=(if validationModel.errors.eMail "error")
          label=(t "forms.ember-flexberry-dummy-application-user-edit.eMail-caption")
          readonly=readonly
        }}
        {{flexberry-validationmessage error=validationModel.errors.eMail}}
      </div>
      <div class="field">
        {{flexberry-field
          value=model.vK
          class=(if validationModel.errors.vK "error")
          label=(t "forms.ember-flexberry-dummy-application-user-edit.vK-caption")
          readonly=readonly
        }}
        {{flexberry-validationmessage error=validationModel.errors.vK}}
      </div>
      <div class="two fields">
        <div class="field">
          {{flexberry-field
            value=model.facebook
            class=(if validationModel.errors.facebook "error")
            label=(t "forms.ember-flexberry-dummy-application-user-edit.facebook-caption")
            readonly=readonly
          }}
          {{flexberry-validationmessage error=validationModel.errors.facebook}}
        </div>
        <div class="field">
          {{flexberry-field
            value=model.twitter
            class=(if validationModel.errors.twitter "error")
            label=(t "forms.ember-flexberry-dummy-application-user-edit.twitter-caption")
            readonly=readonly
          }}
          {{flexberry-validationmessage error=validationModel.errors.twitter}}
        </div>
      </div>
    </div>

  </div>
  <hr/>
    <h3>{{t "forms.ember-flexberry-dummy-multi-list.caption"}}</h3>
    <div class="row">
      {{#with multiListSettings.MultiUserListOnEdit as |settings|}}
        {{flexberry-objectlistview
          modelName=settings.modelName
          modelProjection=settings.modelProjection
          editFormRoute=settings.editFormRoute
          content=settings.model
          createNewButton=true
          refreshButton=true
          sorting=settings.computedSorting
          orderable=true
          sortByColumn=(action "sortByColumn")
          addColumnToSorting=(action "addColumnToSorting")
          beforeDeleteAllRecords=(action "beforeDeleteAllRecords")
          pages=settings.pages
          perPageValue=settings.perPageValue
          perPageValues=settings.perPageValues
          recordsTotalCount=settings.recordsTotalCount
          hasPreviousPage=settings.hasPreviousPage
          hasNextPage=settings.hasNextPage
          previousPage=(action "previousPage")
          gotoPage=(action "gotoPage")
          nextPage=(action "nextPage")
          componentName=settings.componentName
        }}
      {{/with}}
      <h3>{{t "forms.ember-flexberry-dummy-multi-list.multi-edit-form"}}</h3>
      {{#with multiListSettings.MultiUserList2OnEdit as |settings|}}
        {{flexberry-objectlistview
          modelName=settings.modelName
          modelProjection=settings.modelProjection
          editFormRoute=settings.editFormRoute
          content=settings.model
          createNewButton=true
          refreshButton=true
          sorting=settings.computedSorting
          orderable=true
          sortByColumn=(action "sortByColumn")
          addColumnToSorting=(action "addColumnToSorting")
          beforeDeleteAllRecords=(action "beforeDeleteAllRecords")
          pages=settings.pages
          perPageValue=settings.perPageValue
          perPageValues=settings.perPageValues
          recordsTotalCount=settings.recordsTotalCount
          hasPreviousPage=settings.hasPreviousPage
          hasNextPage=settings.hasNextPage
          previousPage=(action "previousPage")
          gotoPage=(action "gotoPage")
          nextPage=(action "nextPage")
          componentName=settings.componentName
        }}
      {{/with}}
      <h3>{{t "forms.ember-flexberry-dummy-multi-list.multi-edit-form"}}</h3>
      {{#with multiListSettings.MultiSuggestionListOnEdit as |settings|}}
        {{flexberry-objectlistview
          editFormRoute=settings.editFormRoute
          showCheckBoxInRow=true
          modelName=settings.modelName
          modelProjection=settings.modelProjection
          content=settings.model
          createNewButton=true
          enableFilters=true
          filters=settings.filters
          filterButton=true
          filterByAnyMatch=(action "filterByAnyMatch")
          filterText=settings.filter
          refreshButton=true
          exportExcelButton=true
          sorting=settings.computedSorting
          orderable=true
          sortByColumn=(action "sortByColumn")
          addColumnToSorting=(action "addColumnToSorting")
          beforeDeleteAllRecords=(action "beforeDeleteAllRecords")
          applyFilters=(action "applyFilters")
          resetFilters=(action "resetFilters")
          pages=settings.pages
          perPageValue=settings.perPageValue
          perPageValues=settings.perPageValues
          recordsTotalCount=settings.recordsTotalCount
          hasPreviousPage=settings.hasPreviousPage
          hasNextPage=settings.hasNextPage
          previousPage=(action "previousPage")
          gotoPage=(action "gotoPage")
          nextPage=(action "nextPage")
          componentName=settings.componentName
          showDeleteMenuItemInRow=true
          deleteButton=true
        }}
      {{/with}}
      <h3>{{t "forms.ember-flexberry-dummy-multi-list.multi-edit-form"}}</h3>
      {{#with multiListSettings.MultiHierarchyListOnEdit as |settings|}}
        {{flexberry-objectlistview
          content=settings.model
          modelName=settings.modelName
          modelProjection=settings.modelProjection
          editFormRoute=settings.editFormRoute
          orderable=false
          componentName=settings.componentName
          beforeDeleteAllRecords=(action "beforeDeleteAllRecords")
          colsConfigButton=false
          disableHierarchicalMode=false
          showCheckBoxInRow=true
          pages=settings.pages
          perPageValue=settings.perPageValue
          perPageValues=settings.perPageValues
          recordsTotalCount=settings.recordsTotalCount
          hasPreviousPage=settings.hasPreviousPage
          hasNextPage=settings.hasNextPage
          previousPage=(action "previousPage")
          gotoPage=(action "gotoPage")
          nextPage=(action "nextPage")
          availableCollExpandMode=true
          inHierarchicalMode=settings.inHierarchicalMode
          hierarchicalAttribute=settings.hierarchicalAttribute
          inExpandMode=settings.inExpandMode
        }}
      {{/with}}
    </div>
</form>