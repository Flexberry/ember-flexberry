<h3 class="ui header">{{t "forms.ember-flexberry-dummy-suggestion-edit.caption"}}</h3>
<form class="ui {{formState}} form flexberry-vertical-form" role="form">
  {{ui-message
    type="success"
    closeable=true
    visible=showFormSuccessMessage
    caption=formSuccessMessageCaption
    message=formSuccessMessage
    onShow=(action "onSuccessMessageShow")
    onHide=(action "onSuccessMessageHide")
  }}
  {{ui-message
    type="error"
    closeable=true
    visible=showFormErrorMessage
    caption=formErrorMessageCaption
    message=formErrorMessage
    onShow=(action "onErrorMessageShow")
    onHide=(action "onErrorMessageHide")
  }}
  <div class="field">
    <div class="flexberry-edit-panel">
      {{#unless readonly}}
        {{#unless (and hasParentRoute (not saveBeforeRouteLeave))}}
          <button type="submit" class="ui positive button" {{action "save"}}>{{t "forms.edit-form.save-button-text"}}</button>
        {{/unless}}
        {{#unless (and hasParentRoute (not saveBeforeRouteLeave))}}
          <button type="submit" class="ui positive button" {{action "saveAndClose"}}>{{t "forms.edit-form.saveAndClose-button-text"}}</button>
        {{/unless}}
        {{#unless (and model.isNew (or (not hasParentRoute) (and hasParentRoute saveBeforeRouteLeave)))}}
          <button type="submit" class="ui negative button" {{action "delete"}}>{{t "forms.edit-form.delete-button-text"}}</button>
        {{/unless}}
      {{/unless}}
      <button type="submit" class="ui button" {{action 'close'}}>{{t "forms.edit-form.close-button-text"}}</button>
    </div>
  </div>
  <div class="field">
    {{#if model.errors.address}}
      <span style ="color:red">
        {{model.errors.address}}
      </span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.address
      class=(if model.errors.address "error" "")
      label=(t "forms.ember-flexberry-dummy-suggestion-edit.address-caption")
      }}
  </div>
  <div class="field">
    {{#if model.errors.text}}
      <span style ="color:red">
        {{model.errors.text}}
      </span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.text
      class=(if model.errors.text "error" "")
      label=(t "forms.ember-flexberry-dummy-suggestion-edit.text-caption")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-suggestion-edit.date-caption"}}</label>
    {{#if model.errors.date}}
      <span style="color:red">{{model.errors.date}}</span>
    {{/if}}
    {{flexberry-datepicker
      readonly=readonly
      value=model.date
      class=(if model.errors.date "error" "")
    }}
  </div>
  <div class="field">
    {{#if model.errors.votes}}
      <span style ="color:red">
        {{model.errors.votes}}
      </span>
    {{/if}}
    {{flexberry-field
      readonly=readonly
      required=true
      value=model.votes
      class=(if model.errors.votes "error" "")
      label=(t "forms.ember-flexberry-dummy-suggestion-edit.votes-caption")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-suggestion-edit.moderated-caption"}}</label>
    {{#if model.errors.moderated}}
      <span style="color:red">{{model.errors.moderated}}</span>
    {{/if}}
    {{flexberry-checkbox readonly=readonly value=model.moderated}}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-suggestion-edit.type-caption"}}</label>
    {{#if model.errors.type}}
      <span style="color:red">{{model.errors.type}}</span>
    {{/if}}
    {{flexberry-lookup
      value=model.type
      projection="SuggestionTypeL"
      displayAttributeName="name"
      title="Type"
      relationName="type"
      choose="showLookupDialog"
      remove="removeLookupValue"
      readonly=readonly
      class=(if model.errors.author "error" "")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-suggestion-edit.author-caption"}}</label>
    {{#if model.errors.author}}
      <span style="color:red">{{model.errors.author}}</span>
    {{/if}}
    {{flexberry-lookup
      value=model.author
      projection="ApplicationUserL"
      displayAttributeName="name"
      title="Author"
      relationName="author"
      choose="showLookupDialog"
      remove="removeLookupValue"
      readonly=readonly
      class=(if model.errors.author "error" "")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-suggestion-edit.editor-caption"}}</label>
    {{#if model.errors.editor}}
      <span style="color:red">{{model.errors.editor}}</span>
    {{/if}}
    {{flexberry-lookup
      value=model.editor1
      projection="ApplicationUserL"
      displayAttributeName="name"
      title="Editor"
      relationName="editor1"
      choose="showLookupDialog"
      remove="removeLookupValue"
      readonly=readonly
      class=(if model.errors.editor1 "error" "")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-suggestion-edit.files-caption"}}</label>
    {{#if model.errors.files}}
      <span style="color:red">{{model.errors.files}}</span>
    {{/if}}
    {{flexberry-groupedit
      componentName="filesGroupEdit"
      class="attached"
      modelProjection=modelProjection.attributes.files
      content=model.files
      readonly=readonly
      orderable=false
      class=(if model.errors.files "error" "")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-suggestion-edit.userVotes-caption"}}</label>
    {{#if model.errors.userVotes}}
      <span style="color:red">{{model.errors.userVotes}}</span>
    {{/if}}
    {{flexberry-groupedit
      componentName="userVotesGroupEdit"
      modelProjection=modelProjection.attributes.userVotes
      content=model.userVotes
      readonly=readonly
      orderable=false
      class=(if model.errors.userVotes "error" "")
    }}
  </div>
  <div class="field">
    <label>{{t "forms.ember-flexberry-dummy-suggestion-edit.comments-caption"}}</label>
    {{#if model.errors.comments}}
      <span style="color:red">{{model.errors.comments}}</span>
    {{/if}}
    {{flexberry-groupedit
      componentName="commentsGroupEdit"
      modelProjection=modelProjection.attributes.comments
      content=model.comments
      readonly=readonly
      orderable=false
      rowClickable=true
      rowClick="rowClick"
      editOnSeparateRoute=true
      editFormRoute=commentsEditRoute
      saveBeforeRouteLeave=true
      class=(if model.errors.comments "error" "")
    }}
  </div>
</form>
